{
    "project": {
        "name": "RPO Angular Docs",
        "description": "The Documentation contain the tech guide",
        "version": "1.0.0",
        "url": "localhost:3000",
        "logo": "http://localhost:3000/assets/logo-login.f0026a2d19ed2bd164fd0acd23183206.png"
    },
    "files": {
        "src/app/route/addRfp/projectDetails/projectDetails.component.ts": {
            "name": "src/app/route/addRfp/projectDetails/projectDetails.component.ts",
            "modules": {},
            "classes": {
                "projectDetailsComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/addRfp/projectDetails/projectDetails.services.ts": {
            "name": "src/app/route/addRfp/projectDetails/projectDetails.services.ts",
            "modules": {},
            "classes": {
                "ProjectDetailsServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/addRfp/proposalReview/review/review.component.ts": {
            "name": "src/app/route/addRfp/proposalReview/review/review.component.ts",
            "modules": {},
            "classes": {
                "ReviewComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/addRfp/proposalReview/review/review.services.ts": {
            "name": "src/app/route/addRfp/proposalReview/review/review.services.ts",
            "modules": {},
            "classes": {
                "ReviewServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/addRfp/proposalReview/review/review.ts": {
            "name": "src/app/route/addRfp/proposalReview/review/review.ts",
            "modules": {},
            "classes": {
                "Review": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/addRfp/proposalReview/proposalReview.component.ts": {
            "name": "src/app/route/addRfp/proposalReview/proposalReview.component.ts",
            "modules": {},
            "classes": {
                "proposalReviewComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/addRfp/proposalReview/proposalReview.services.ts": {
            "name": "src/app/route/addRfp/proposalReview/proposalReview.services.ts",
            "modules": {},
            "classes": {
                "ProposalReviewServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/addRfp/rfpSubmit/feeschedule/feeschedule.component.ts": {
            "name": "src/app/route/addRfp/rfpSubmit/feeschedule/feeschedule.component.ts",
            "modules": {},
            "classes": {
                "FeeScheduleComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/addRfp/rfpSubmit/feeschedule/feeschedule.services.ts": {
            "name": "src/app/route/addRfp/rfpSubmit/feeschedule/feeschedule.services.ts",
            "modules": {},
            "classes": {
                "FeeScheduleServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/addRfp/rfpSubmit/rfpSubmit.component.ts": {
            "name": "src/app/route/addRfp/rfpSubmit/rfpSubmit.component.ts",
            "modules": {},
            "classes": {
                "rfpSubmitComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/addRfp/scopeReview/scopeReview.component.ts": {
            "name": "src/app/route/addRfp/scopeReview/scopeReview.component.ts",
            "modules": {},
            "classes": {
                "scopeReviewComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/addRfp/scopeReview/scopeReview.services.ts": {
            "name": "src/app/route/addRfp/scopeReview/scopeReview.services.ts",
            "modules": {},
            "classes": {
                "ScopeReviewServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/addRfp/siteInformation/siteInformation.component.ts": {
            "name": "src/app/route/addRfp/siteInformation/siteInformation.component.ts",
            "modules": {},
            "classes": {
                "SiteInformationComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/addRfp/siteInformation/siteInformation.services.ts": {
            "name": "src/app/route/addRfp/siteInformation/siteInformation.services.ts",
            "modules": {},
            "classes": {
                "SiteInformationServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/addressmaster/masterform/masterform.component.ts": {
            "name": "src/app/route/addressmaster/masterform/masterform.component.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/addressmaster/addressmaster.component.ts": {
            "name": "src/app/route/addressmaster/addressmaster.component.ts",
            "modules": {},
            "classes": {
                "AddressMasterComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/addressmaster/addressmaster.services.ts": {
            "name": "src/app/route/addressmaster/addressmaster.services.ts",
            "modules": {},
            "classes": {
                "AddressMasterServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/addresstype/addresstype.component.ts": {
            "name": "src/app/route/addresstype/addresstype.component.ts",
            "modules": {},
            "classes": {
                "AddresstypeComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/addresstype/addresstype.services.ts": {
            "name": "src/app/route/addresstype/addresstype.services.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/addtask/addtask.component.ts": {
            "name": "src/app/route/addtask/addtask.component.ts",
            "modules": {},
            "classes": {
                "AddTaskComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/company/bisCompanyList/bisCompanyList.component.ts": {
            "name": "src/app/route/company/bisCompanyList/bisCompanyList.component.ts",
            "modules": {},
            "classes": {
                "BisCompanyListComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/company/companyDetail/companyDetail.component.ts": {
            "name": "src/app/route/company/companyDetail/companyDetail.component.ts",
            "modules": {},
            "classes": {
                "CompanyDetailComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/company/formCompany/formCompany.component.ts": {
            "name": "src/app/route/company/formCompany/formCompany.component.ts",
            "modules": {},
            "classes": {
                "FormCompanyComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/company/getinfo/getinfo.component.ts": {
            "name": "src/app/route/company/getinfo/getinfo.component.ts",
            "modules": {},
            "classes": {
                "GetInfoComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/company/company.component.ts": {
            "name": "src/app/route/company/company.component.ts",
            "modules": {},
            "classes": {
                "CompanyComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/company/company.services.ts": {
            "name": "src/app/route/company/company.services.ts",
            "modules": {},
            "classes": {
                "CompanyServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/companytaxtypes/companytaxtypesform/companytaxtypesform.component.ts": {
            "name": "src/app/route/companytaxtypes/companytaxtypesform/companytaxtypesform.component.ts",
            "modules": {},
            "classes": {
                "CompanyTaxTypesForm": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/companytaxtypes/companytaxtypes.component.ts": {
            "name": "src/app/route/companytaxtypes/companytaxtypes.component.ts",
            "modules": {},
            "classes": {
                "CompanyTaxTypesComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/companytaxtypes/companytaxtypes.services.ts": {
            "name": "src/app/route/companytaxtypes/companytaxtypes.services.ts",
            "modules": {},
            "classes": {
                "CompanyTaxTypesServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/companytaxtypes/companytaxtypes.ts": {
            "name": "src/app/route/companytaxtypes/companytaxtypes.ts",
            "modules": {},
            "classes": {
                "CompanyTaxTypes": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/companytypes/companytypesform/companytypesform.component.ts": {
            "name": "src/app/route/companytypes/companytypesform/companytypesform.component.ts",
            "modules": {},
            "classes": {
                "CompanyTypesForm": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/companytypes/companytypes.component.ts": {
            "name": "src/app/route/companytypes/companytypes.component.ts",
            "modules": {},
            "classes": {
                "CompanyTypesComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/companytypes/companytypes.services.ts": {
            "name": "src/app/route/companytypes/companytypes.services.ts",
            "modules": {},
            "classes": {
                "CompanyTypesServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/companytypes/companytypes.ts": {
            "name": "src/app/route/companytypes/companytypes.ts",
            "modules": {},
            "classes": {
                "CompanyTypes": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/constructionclassifications/constructionclassificationsform/constructionclassificationsform.component.ts": {
            "name": "src/app/route/constructionclassifications/constructionclassificationsform/constructionclassificationsform.component.ts",
            "modules": {},
            "classes": {
                "ConstructionClassificationsForm": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/constructionclassifications/constructionclassifications.component.ts": {
            "name": "src/app/route/constructionclassifications/constructionclassifications.component.ts",
            "modules": {},
            "classes": {
                "ConstructionClassificationsComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/constructionclassifications/constructionclassifications.services.ts": {
            "name": "src/app/route/constructionclassifications/constructionclassifications.services.ts",
            "modules": {},
            "classes": {
                "ConstructionClassificationsServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/constructionclassifications/constructionclassifications.ts": {
            "name": "src/app/route/constructionclassifications/constructionclassifications.ts",
            "modules": {},
            "classes": {
                "ConstructionClassifications": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/contact/contactDetail/contactDetail.component.ts": {
            "name": "src/app/route/contact/contactDetail/contactDetail.component.ts",
            "modules": {},
            "classes": {
                "ContactDetailComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/contact/formContact/formContact.component.ts": {
            "name": "src/app/route/contact/formContact/formContact.component.ts",
            "modules": {},
            "classes": {
                "FormContactComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/contact/contact.component.ts": {
            "name": "src/app/route/contact/contact.component.ts",
            "modules": {},
            "classes": {
                "ContactComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/contact/contact.services.ts": {
            "name": "src/app/route/contact/contact.services.ts",
            "modules": {},
            "classes": {
                "ContactServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/contacttitle/contacttitleform/contacttitleform.component.ts": {
            "name": "src/app/route/contacttitle/contacttitleform/contacttitleform.component.ts",
            "modules": {},
            "classes": {
                "ContactTitleformComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/contacttitle/contacttitle.component.ts": {
            "name": "src/app/route/contacttitle/contacttitle.component.ts",
            "modules": {},
            "classes": {
                "ContactTitleComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/depcostsetting/depcostsettingform/depCostSettingform.component.ts": {
            "name": "src/app/route/depcostsetting/depcostsettingform/depCostSettingform.component.ts",
            "modules": {},
            "classes": {
                "DepCostSettingForm": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/depcostsetting/depCostSetting.component.ts": {
            "name": "src/app/route/depcostsetting/depCostSetting.component.ts",
            "modules": {},
            "classes": {
                "DepCostSettingComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/depcostsetting/depCostSetting.services.ts": {
            "name": "src/app/route/depcostsetting/depCostSetting.services.ts",
            "modules": {},
            "classes": {
                "DepCostSettingServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/depcostsetting/depCostSetting.ts": {
            "name": "src/app/route/depcostsetting/depCostSetting.ts",
            "modules": {},
            "classes": {
                "DepCostSetting": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/documenttypes/documenttypesform/documenttypesform.component.ts": {
            "name": "src/app/route/documenttypes/documenttypesform/documenttypesform.component.ts",
            "modules": {},
            "classes": {
                "DocumentTypesForm": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/documenttypes/documenttypes.component.ts": {
            "name": "src/app/route/documenttypes/documenttypes.component.ts",
            "modules": {},
            "classes": {
                "DocumentTypesComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/documenttypes/documenttypes.services.ts": {
            "name": "src/app/route/documenttypes/documenttypes.services.ts",
            "modules": {},
            "classes": {
                "DocumentTypesServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/documenttypes/documenttypes.ts": {
            "name": "src/app/route/documenttypes/documenttypes.ts",
            "modules": {},
            "classes": {
                "DocumentTypes": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/dwellingclassification/dwellingclassificationform/dwellingclassificationform.component.ts": {
            "name": "src/app/route/dwellingclassification/dwellingclassificationform/dwellingclassificationform.component.ts",
            "modules": {},
            "classes": {
                "DwellingClassificationForm": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/dwellingclassification/dwellingclassification.component.ts": {
            "name": "src/app/route/dwellingclassification/dwellingclassification.component.ts",
            "modules": {},
            "classes": {
                "DwellingClassificationComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/dwellingclassification/dwellingclassification.services.ts": {
            "name": "src/app/route/dwellingclassification/dwellingclassification.services.ts",
            "modules": {},
            "classes": {
                "DwellingClassificationServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/dwellingclassification/dwellingclassification.ts": {
            "name": "src/app/route/dwellingclassification/dwellingclassification.ts",
            "modules": {},
            "classes": {
                "DwellingClassification": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/emailtype/emailtypeform/emailtypeform.component.ts": {
            "name": "src/app/route/emailtype/emailtypeform/emailtypeform.component.ts",
            "modules": {},
            "classes": {
                "EmailtypeformComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/emailtype/emailtype.component.ts": {
            "name": "src/app/route/emailtype/emailtype.component.ts",
            "modules": {},
            "classes": {
                "EmailTypeComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/emailtype/emailtype.services.ts": {
            "name": "src/app/route/emailtype/emailtype.services.ts",
            "modules": {},
            "classes": {
                "EmailtypeServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/emailtype/emailtype.ts": {
            "name": "src/app/route/emailtype/emailtype.ts",
            "modules": {},
            "classes": {
                "EmailType": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/employee/employee.component.ts": {
            "name": "src/app/route/employee/employee.component.ts",
            "modules": {},
            "classes": {
                "EmployeeComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/employee/employee.services.ts": {
            "name": "src/app/route/employee/employee.services.ts",
            "modules": {},
            "classes": {
                "EmployeeServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/holidaycalendar/holidaycalendarform/holidayCalendarform.component.ts": {
            "name": "src/app/route/holidaycalendar/holidaycalendarform/holidayCalendarform.component.ts",
            "modules": {},
            "classes": {
                "HolidayCalendarForm": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/holidaycalendar/holidayCalendar.component.ts": {
            "name": "src/app/route/holidaycalendar/holidayCalendar.component.ts",
            "modules": {},
            "classes": {
                "HolidayCalendarComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/holidaycalendar/holidayCalendar.services.ts": {
            "name": "src/app/route/holidaycalendar/holidayCalendar.services.ts",
            "modules": {},
            "classes": {
                "HolidayCalendarServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/job/formAdvanceSearch/formAdvanceSearch.component.ts": {
            "name": "src/app/route/job/formAdvanceSearch/formAdvanceSearch.component.ts",
            "modules": {},
            "classes": {
                "FormAdvanceSearchComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/job/formJob/formJob.component.ts": {
            "name": "src/app/route/job/formJob/formJob.component.ts",
            "modules": {},
            "classes": {
                "FormJobComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/job/formJobAddNewAddress/formJobAddNewAddress.component.ts": {
            "name": "src/app/route/job/formJobAddNewAddress/formJobAddNewAddress.component.ts",
            "modules": {},
            "classes": {
                "FormJobAddNewAddressComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/job/formJobReason/jobReason.component.ts": {
            "name": "src/app/route/job/formJobReason/jobReason.component.ts",
            "modules": {},
            "classes": {
                "JobReasonForm": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/job/formJobReason/jobReason.services.ts": {
            "name": "src/app/route/job/formJobReason/jobReason.services.ts",
            "modules": {},
            "classes": {
                "JobReasonServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/job/jobDetail/basicInfo/addtimenotes/addtimenotes.component.ts": {
            "name": "src/app/route/job/jobDetail/basicInfo/addtimenotes/addtimenotes.component.ts",
            "modules": {},
            "classes": {
                "AddTimeNotesComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/job/jobDetail/jobApplicationDep/formAddDepApplication/formAddDepApplication.component.ts": {
            "name": "src/app/route/job/jobDetail/jobApplicationDep/formAddDepApplication/formAddDepApplication.component.ts",
            "modules": {},
            "classes": {
                "FormAddDepApplication": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/job/jobDetail/jobApplicationDep/jobApplicationDep.component.ts": {
            "name": "src/app/route/job/jobDetail/jobApplicationDep/jobApplicationDep.component.ts",
            "modules": {},
            "classes": {
                "JobApplicationDepComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/job/jobDetail/jobApplicationDob/formAddApplication/formAddApplication.component.ts": {
            "name": "src/app/route/job/jobDetail/jobApplicationDob/formAddApplication/formAddApplication.component.ts",
            "modules": {},
            "classes": {
                "FormAddApplication": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/job/jobDetail/jobApplicationDob/formAddPermit/formAddPermit.component.ts": {
            "name": "src/app/route/job/jobDetail/jobApplicationDob/formAddPermit/formAddPermit.component.ts",
            "modules": {},
            "classes": {
                "FormAddPermit": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/job/jobDetail/jobApplicationDob/jobApplicationDob.component.ts": {
            "name": "src/app/route/job/jobDetail/jobApplicationDob/jobApplicationDob.component.ts",
            "modules": {},
            "classes": {
                "JobApplicationDobComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/job/jobDetail/jobApplicationDob/jobApplicationPermit.component.ts": {
            "name": "src/app/route/job/jobDetail/jobApplicationDob/jobApplicationPermit.component.ts",
            "modules": {},
            "classes": {
                "JobApplicationPermitComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/job/jobDetail/jobApplicationDot/formAddDot/formAddDot.component.ts": {
            "name": "src/app/route/job/jobDetail/jobApplicationDot/formAddDot/formAddDot.component.ts",
            "modules": {},
            "classes": {
                "FormAddDot": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/job/jobDetail/jobApplicationDot/formAddDotPermit/formAddDotPermit.component.ts": {
            "name": "src/app/route/job/jobDetail/jobApplicationDot/formAddDotPermit/formAddDotPermit.component.ts",
            "modules": {},
            "classes": {
                "FormAddDotPermit": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/job/jobDetail/jobApplicationDot/formUploadDotPermit/formUploadDotPermit.component.ts": {
            "name": "src/app/route/job/jobDetail/jobApplicationDot/formUploadDotPermit/formUploadDotPermit.component.ts",
            "modules": {},
            "classes": {
                "FormUploadDotPermit": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/job/jobDetail/jobApplicationDot/jobApplicationDot.component.ts": {
            "name": "src/app/route/job/jobDetail/jobApplicationDot/jobApplicationDot.component.ts",
            "modules": {},
            "classes": {
                "JobApplicationDotComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/job/jobDetail/jobApplicationDot/jobDotPermit.component.ts": {
            "name": "src/app/route/job/jobDetail/jobApplicationDot/jobDotPermit.component.ts",
            "modules": {},
            "classes": {
                "JobDotPermitComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/job/jobDetail/jobContact/addJobContact/addJobContact.component.ts": {
            "name": "src/app/route/job/jobDetail/jobContact/addJobContact/addJobContact.component.ts",
            "modules": {},
            "classes": {
                "AddJobContactComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/job/jobDetail/jobContact/editJobContact/editJobContact.component.ts": {
            "name": "src/app/route/job/jobDetail/jobContact/editJobContact/editJobContact.component.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/job/jobDetail/jobContact/JobContact.service.ts": {
            "name": "src/app/route/job/jobDetail/jobContact/JobContact.service.ts",
            "modules": {},
            "classes": {
                "JobContactServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/job/jobDetail/jobContact/jobConact.ts": {
            "name": "src/app/route/job/jobDetail/jobContact/jobConact.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/job/jobDetail/jobContact/jobContact.component.ts": {
            "name": "src/app/route/job/jobDetail/jobContact/jobContact.component.ts",
            "modules": {},
            "classes": {
                "JobContactComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/job/jobDetail/jobDocument/addJobDocument/addJobDocument.component.ts": {
            "name": "src/app/route/job/jobDetail/jobDocument/addJobDocument/addJobDocument.component.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/job/jobDetail/jobHistory/filterhistory/filterhistory.component.ts": {
            "name": "src/app/route/job/jobDetail/jobHistory/filterhistory/filterhistory.component.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/job/jobDetail/jobHistory/jobHistory.component.ts": {
            "name": "src/app/route/job/jobDetail/jobHistory/jobHistory.component.ts",
            "modules": {},
            "classes": {
                "JobHistoryComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/job/jobDetail/jobHistory/jobHistory.service.ts": {
            "name": "src/app/route/job/jobDetail/jobHistory/jobHistory.service.ts",
            "modules": {},
            "classes": {
                "JobHistoryServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/job/jobDetail/jobMilestone/jobMilestone.component.ts": {
            "name": "src/app/route/job/jobDetail/jobMilestone/jobMilestone.component.ts",
            "modules": {},
            "classes": {
                "JobMilestoneComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/job/jobDetail/jobMilestone/jobMilestone.service.ts": {
            "name": "src/app/route/job/jobDetail/jobMilestone/jobMilestone.service.ts",
            "modules": {},
            "classes": {
                "JobMilestoneServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/job/jobDetail/jobScope/addScope/addScope.component.ts": {
            "name": "src/app/route/job/jobDetail/jobScope/addScope/addScope.component.ts",
            "modules": {},
            "classes": {
                "AddScopeComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/job/jobDetail/jobScope/scopeHistory/scopeHistory.component.ts": {
            "name": "src/app/route/job/jobDetail/jobScope/scopeHistory/scopeHistory.component.ts",
            "modules": {},
            "classes": {
                "ScopeHistoryComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/job/jobDetail/jobScope/jobScope.component.ts": {
            "name": "src/app/route/job/jobDetail/jobScope/jobScope.component.ts",
            "modules": {},
            "classes": {
                "JobScopeComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/job/jobDetail/jobScope/jobScope.service.ts": {
            "name": "src/app/route/job/jobDetail/jobScope/jobScope.service.ts",
            "modules": {},
            "classes": {
                "JobScopeServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/job/jobDetail/jobTask/jobTask.component.ts": {
            "name": "src/app/route/job/jobDetail/jobTask/jobTask.component.ts",
            "modules": {},
            "classes": {
                "JobTaskComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/job/jobDetail/jobTransmittal/addTransmittal/addTransmittal.component.ts": {
            "name": "src/app/route/job/jobDetail/jobTransmittal/addTransmittal/addTransmittal.component.ts",
            "modules": {},
            "classes": {
                "AddTransMittalComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/job/jobDetail/jobTransmittal/jobTransmittal.component.ts": {
            "name": "src/app/route/job/jobDetail/jobTransmittal/jobTransmittal.component.ts",
            "modules": {},
            "classes": {
                "JobTransmittalComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/job/jobDetail/jobTransmittal/jobTransmittal.service.ts": {
            "name": "src/app/route/job/jobDetail/jobTransmittal/jobTransmittal.service.ts",
            "modules": {},
            "classes": {
                "TransmittalServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/job/jobDetail/jobViolation/explainationCharges/explainationCharges.component.ts": {
            "name": "src/app/route/job/jobDetail/jobViolation/explainationCharges/explainationCharges.component.ts",
            "modules": {},
            "classes": {
                "FormExplainationCharges": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/job/jobDetail/jobViolation/formAddViolation/formAddViolation.component.ts": {
            "name": "src/app/route/job/jobDetail/jobViolation/formAddViolation/formAddViolation.component.ts",
            "modules": {},
            "classes": {
                "FormAddViolation": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/job/jobDetail/jobViolation/jobViolation.component.ts": {
            "name": "src/app/route/job/jobDetail/jobViolation/jobViolation.component.ts",
            "modules": {},
            "classes": {
                "JobViolationComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/job/jobDetail/jobViolation/jobViolation.service.ts": {
            "name": "src/app/route/job/jobDetail/jobViolation/jobViolation.service.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/job/jobDetail/jobViolation/violation.ts": {
            "name": "src/app/route/job/jobDetail/jobViolation/violation.ts",
            "modules": {},
            "classes": {
                "Violation": 1,
                "ExplanationOfCharges": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/job/jobDetail/relatedJob/addRelatedJob/addRelatedJob.component.ts": {
            "name": "src/app/route/job/jobDetail/relatedJob/addRelatedJob/addRelatedJob.component.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/job/jobDetail/relatedJob/relatedJob.service.ts": {
            "name": "src/app/route/job/jobDetail/relatedJob/relatedJob.service.ts",
            "modules": {},
            "classes": {
                "RelatedJobServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/job/jobDetail/timeNotes/TimeNotes.service.ts": {
            "name": "src/app/route/job/jobDetail/timeNotes/TimeNotes.service.ts",
            "modules": {},
            "classes": {
                "TimeNotesServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/job/jobDetail/timeNotes/timeNotes.component.ts": {
            "name": "src/app/route/job/jobDetail/timeNotes/timeNotes.component.ts",
            "modules": {},
            "classes": {
                "TimeNotesComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/job/jobDetail/jobDetail.component.ts": {
            "name": "src/app/route/job/jobDetail/jobDetail.component.ts",
            "modules": {},
            "classes": {
                "JobDetailComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/job/jobDetail/jobDetail.module.ts": {
            "name": "src/app/route/job/jobDetail/jobDetail.module.ts",
            "modules": {},
            "classes": {
                "JobDetailModule": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/job/JobSharedService.ts": {
            "name": "src/app/route/job/JobSharedService.ts",
            "modules": {},
            "classes": {
                "JobSharedService": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/job/job.component.ts": {
            "name": "src/app/route/job/job.component.ts",
            "modules": {},
            "classes": {
                "JobComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/job/job.services.ts": {
            "name": "src/app/route/job/job.services.ts",
            "modules": {},
            "classes": {
                "JobServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/jobcontacttypes/jobcontacttypesform/jobcontacttypesform.component.ts": {
            "name": "src/app/route/jobcontacttypes/jobcontacttypesform/jobcontacttypesform.component.ts",
            "modules": {},
            "classes": {
                "JobContactTypesForm": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/jobcontacttypes/jobcontacttypes.component.ts": {
            "name": "src/app/route/jobcontacttypes/jobcontacttypes.component.ts",
            "modules": {},
            "classes": {
                "JobContactTypesComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/jobcontacttypes/jobcontacttypes.services.ts": {
            "name": "src/app/route/jobcontacttypes/jobcontacttypes.services.ts",
            "modules": {},
            "classes": {
                "JobContactTypesServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/jobcontacttypes/jobcontacttypes.ts": {
            "name": "src/app/route/jobcontacttypes/jobcontacttypes.ts",
            "modules": {},
            "classes": {
                "JobContactTypes": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/jobtimenotecategories/jobtimenotecategoriesform/jobtimenotecategoriesform.component.ts": {
            "name": "src/app/route/jobtimenotecategories/jobtimenotecategoriesform/jobtimenotecategoriesform.component.ts",
            "modules": {},
            "classes": {
                "JobTimenoteCategoriesForm": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/jobtimenotecategories/jobtimenotecategories.component.ts": {
            "name": "src/app/route/jobtimenotecategories/jobtimenotecategories.component.ts",
            "modules": {},
            "classes": {
                "JobTimenoteCategoriesComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/jobtimenotecategories/jobtimenotecategories.services.ts": {
            "name": "src/app/route/jobtimenotecategories/jobtimenotecategories.services.ts",
            "modules": {},
            "classes": {
                "JobTimenoteCategoriesServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/jobtimenotecategories/jobtimenotecategories.ts": {
            "name": "src/app/route/jobtimenotecategories/jobtimenotecategories.ts",
            "modules": {},
            "classes": {
                "JobTimenoteCategories": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/jobtype/formJobType/formJobType.component.ts": {
            "name": "src/app/route/jobtype/formJobType/formJobType.component.ts",
            "modules": {},
            "classes": {
                "FormJobType": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/jobtype/jobType.component.ts": {
            "name": "src/app/route/jobtype/jobType.component.ts",
            "modules": {},
            "classes": {
                "JobTypeComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/jobtype/jobType.services.ts": {
            "name": "src/app/route/jobtype/jobType.services.ts",
            "modules": {},
            "classes": {
                "JobTypeServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/jobtype/jobType.ts": {
            "name": "src/app/route/jobtype/jobType.ts",
            "modules": {},
            "classes": {
                "JobTypeDTO": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/licensetypes/licensetypesform/licensetypesform.component.ts": {
            "name": "src/app/route/licensetypes/licensetypesform/licensetypesform.component.ts",
            "modules": {},
            "classes": {
                "LicenseTypesForm": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/licensetypes/licensetypes.component.ts": {
            "name": "src/app/route/licensetypes/licensetypes.component.ts",
            "modules": {},
            "classes": {
                "LicenseTypesComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/licensetypes/licensetypes.services.ts": {
            "name": "src/app/route/licensetypes/licensetypes.services.ts",
            "modules": {},
            "classes": {
                "LicenseTypesServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/licensetypes/licensetypes.ts": {
            "name": "src/app/route/licensetypes/licensetypes.ts",
            "modules": {},
            "classes": {
                "LicenseTypes": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/login/login.component.ts": {
            "name": "src/app/route/login/login.component.ts",
            "modules": {},
            "classes": {
                "LoginComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/notification/notification.component.ts": {
            "name": "src/app/route/notification/notification.component.ts",
            "modules": {},
            "classes": {
                "NotificationComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/occupancyclassifications/occupancyclassificationsform/occupancyclassificationsform.component.ts": {
            "name": "src/app/route/occupancyclassifications/occupancyclassificationsform/occupancyclassificationsform.component.ts",
            "modules": {},
            "classes": {
                "OccupancyClassificationsForm": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/occupancyclassifications/occupancyclassifications.component.services.ts": {
            "name": "src/app/route/occupancyclassifications/occupancyclassifications.component.services.ts",
            "modules": {},
            "classes": {
                "OccupancyClassificationsServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/occupancyclassifications/occupancyclassifications.component.ts": {
            "name": "src/app/route/occupancyclassifications/occupancyclassifications.component.ts",
            "modules": {},
            "classes": {
                "occupancyclassificationsform": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/occupancyclassifications/occupancyclassifications.ts": {
            "name": "src/app/route/occupancyclassifications/occupancyclassifications.ts",
            "modules": {},
            "classes": {
                "OccupancyClassifications": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/paneltycode/paneltycodeform/paneltycodeform.component.ts": {
            "name": "src/app/route/paneltycode/paneltycodeform/paneltycodeform.component.ts",
            "modules": {},
            "classes": {
                "PaneltyCodeformComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/paneltycode/paneltycode.component.ts": {
            "name": "src/app/route/paneltycode/paneltycode.component.ts",
            "modules": {},
            "classes": {
                "PaneltycodeComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/paneltycode/penaltyCode.ts": {
            "name": "src/app/route/paneltycode/penaltyCode.ts",
            "modules": {},
            "classes": {
                "PenaltyCode": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/paneltycode/penaltycode.services.ts": {
            "name": "src/app/route/paneltycode/penaltycode.services.ts",
            "modules": {},
            "classes": {
                "PenaltyCodeServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/prefix/prefixform/prefixform.component.ts": {
            "name": "src/app/route/prefix/prefixform/prefixform.component.ts",
            "modules": {},
            "classes": {
                "PrefixformComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/prefix/prefix.component.ts": {
            "name": "src/app/route/prefix/prefix.component.ts",
            "modules": {},
            "classes": {
                "PrefixComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/prefix/prefix.ts": {
            "name": "src/app/route/prefix/prefix.ts",
            "modules": {},
            "classes": {
                "Prefix": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/primarystructuralsystems/primarystructuralsystemsform/primarystructuralsystemsform.component.ts": {
            "name": "src/app/route/primarystructuralsystems/primarystructuralsystemsform/primarystructuralsystemsform.component.ts",
            "modules": {},
            "classes": {
                "PrimaryStructuralSystemsForm": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/primarystructuralsystems/primarystructuralsystems.component.ts": {
            "name": "src/app/route/primarystructuralsystems/primarystructuralsystems.component.ts",
            "modules": {},
            "classes": {
                "PrimaryStructuralSystemsComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/primarystructuralsystems/primarystructuralsystems.services.ts": {
            "name": "src/app/route/primarystructuralsystems/primarystructuralsystems.services.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/primarystructuralsystems/primarystructuralsystems.ts": {
            "name": "src/app/route/primarystructuralsystems/primarystructuralsystems.ts",
            "modules": {},
            "classes": {
                "PrimaryStructuralSystems": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/progressionnote/addprogressionnote.component.ts": {
            "name": "src/app/route/progressionnote/addprogressionnote.component.ts",
            "modules": {},
            "classes": {
                "ProgressionNoteComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/reference/document/formDocument/formDocument.component.ts": {
            "name": "src/app/route/reference/document/formDocument/formDocument.component.ts",
            "modules": {},
            "classes": {
                "FormDocumentComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/reference/document/document.component.ts": {
            "name": "src/app/route/reference/document/document.component.ts",
            "modules": {},
            "classes": {
                "DocumentComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/reference/document/document.services.ts": {
            "name": "src/app/route/reference/document/document.services.ts",
            "modules": {},
            "classes": {
                "DocumentServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/reminder/addreminder.component.ts": {
            "name": "src/app/route/reminder/addreminder.component.ts",
            "modules": {},
            "classes": {
                "ReminderComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/rfp/emailHistory/emailHistory.component.ts": {
            "name": "src/app/route/rfp/emailHistory/emailHistory.component.ts",
            "modules": {},
            "classes": {
                "EmailHistoryComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/rfp/sendEmail/sendEmail.component.ts": {
            "name": "src/app/route/rfp/sendEmail/sendEmail.component.ts",
            "modules": {},
            "classes": {
                "SendEmailComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/rfp/rfp.component.ts": {
            "name": "src/app/route/rfp/rfp.component.ts",
            "modules": {},
            "classes": {
                "RfpComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/rfp/rfp.services.ts": {
            "name": "src/app/route/rfp/rfp.services.ts",
            "modules": {},
            "classes": {
                "RfpListService": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/rfpprogressionnote/addrfpprogressionnote.component.ts": {
            "name": "src/app/route/rfpprogressionnote/addrfpprogressionnote.component.ts",
            "modules": {},
            "classes": {
                "AddRfpProgressionNoteComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/rfpprogressionnote/addrfpprogressionnote.services.ts": {
            "name": "src/app/route/rfpprogressionnote/addrfpprogressionnote.services.ts",
            "modules": {},
            "classes": {
                "AddRfpProgressionNoteServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/rfpsubjobtype/formRfpSubJobType/formRfpSubJobType.component.ts": {
            "name": "src/app/route/rfpsubjobtype/formRfpSubJobType/formRfpSubJobType.component.ts",
            "modules": {},
            "classes": {
                "FormRfpSubJobType": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/rfpsubjobtype/rfpsubjobtype.component.ts": {
            "name": "src/app/route/rfpsubjobtype/rfpsubjobtype.component.ts",
            "modules": {},
            "classes": {
                "RfpSubJobTypeComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/rfpsubjobtype/rfpsubjobtype.services.ts": {
            "name": "src/app/route/rfpsubjobtype/rfpsubjobtype.services.ts",
            "modules": {},
            "classes": {
                "RfpSubJobTypeServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/rfpsubjobtype/rfpsubjobtype.ts": {
            "name": "src/app/route/rfpsubjobtype/rfpsubjobtype.ts",
            "modules": {},
            "classes": {
                "RfpSubJobType": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/seismicdesigncategories/seismicdesigncategoriesform/seismicdesigncategoriesform.component.ts": {
            "name": "src/app/route/seismicdesigncategories/seismicdesigncategoriesform/seismicdesigncategoriesform.component.ts",
            "modules": {},
            "classes": {
                "SeismicDesignCategoriesForm": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/seismicdesigncategories/seismicdesigncategories.component.ts": {
            "name": "src/app/route/seismicdesigncategories/seismicdesigncategories.component.ts",
            "modules": {},
            "classes": {
                "SeismicDesignCategoriesComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/seismicdesigncategories/seismicdesigncategories.services.ts": {
            "name": "src/app/route/seismicdesigncategories/seismicdesigncategories.services.ts",
            "modules": {},
            "classes": {
                "SeismicDesignCategoriesServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/seismicdesigncategories/seismicdesigncategories.ts": {
            "name": "src/app/route/seismicdesigncategories/seismicdesigncategories.ts",
            "modules": {},
            "classes": {
                "SeismicDesignCategories": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/sentvia/sentviaform/sentviaform.component.ts": {
            "name": "src/app/route/sentvia/sentviaform/sentviaform.component.ts",
            "modules": {},
            "classes": {
                "SentviaformComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/sentvia/sentvia.component.ts": {
            "name": "src/app/route/sentvia/sentvia.component.ts",
            "modules": {},
            "classes": {
                "SentviaComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/sentvia/sentvia.services.ts": {
            "name": "src/app/route/sentvia/sentvia.services.ts",
            "modules": {},
            "classes": {
                "SentviaServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/sentvia/sentvia.ts": {
            "name": "src/app/route/sentvia/sentvia.ts",
            "modules": {},
            "classes": {
                "Sentvia": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/states/statesform/statesform.component.ts": {
            "name": "src/app/route/states/statesform/statesform.component.ts",
            "modules": {},
            "classes": {
                "StatesForm": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/states/states.component.ts": {
            "name": "src/app/route/states/states.component.ts",
            "modules": {},
            "classes": {
                "StatesComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/states/states.services.ts": {
            "name": "src/app/route/states/states.services.ts",
            "modules": {},
            "classes": {
                "StatesServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/states/states.ts": {
            "name": "src/app/route/states/states.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/structureoccupancycategories/structureoccupancycategoriesform/structureoccupancycategoriesform.component.ts": {
            "name": "src/app/route/structureoccupancycategories/structureoccupancycategoriesform/structureoccupancycategoriesform.component.ts",
            "modules": {},
            "classes": {
                "StructureOccupancyCategoriesForm": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/structureoccupancycategories/structureoccupancycategories.component.ts": {
            "name": "src/app/route/structureoccupancycategories/structureoccupancycategories.component.ts",
            "modules": {},
            "classes": {
                "StructureOccupancyCategoriesComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/structureoccupancycategories/structureoccupancycategories.services.ts": {
            "name": "src/app/route/structureoccupancycategories/structureoccupancycategories.services.ts",
            "modules": {},
            "classes": {
                "StructureOccupancyCategoriesServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/structureoccupancycategories/structureoccupancycategories.ts": {
            "name": "src/app/route/structureoccupancycategories/structureoccupancycategories.ts",
            "modules": {},
            "classes": {
                "StructureOccupancyCategories": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/subjobtypecategory/formSubJobTypeCategory/formSubJobTypeCategory.component.ts": {
            "name": "src/app/route/subjobtypecategory/formSubJobTypeCategory/formSubJobTypeCategory.component.ts",
            "modules": {},
            "classes": {
                "FormSubJobTypeCategory": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/subjobtypecategory/subjobtypecategory.component.ts": {
            "name": "src/app/route/subjobtypecategory/subjobtypecategory.component.ts",
            "modules": {},
            "classes": {
                "SubJobTypeCategoryComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/subjobtypecategory/subjobtypecategory.services.ts": {
            "name": "src/app/route/subjobtypecategory/subjobtypecategory.services.ts",
            "modules": {},
            "classes": {
                "SubJobTypeCategoryServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/subjobtypecategory/subjobtypecategory.ts": {
            "name": "src/app/route/subjobtypecategory/subjobtypecategory.ts",
            "modules": {},
            "classes": {
                "SubJobTypeCategoryDTO": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/suffix/suffixform/suffixform.component.ts": {
            "name": "src/app/route/suffix/suffixform/suffixform.component.ts",
            "modules": {},
            "classes": {
                "SuffixformComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/suffix/suffix.component.ts": {
            "name": "src/app/route/suffix/suffix.component.ts",
            "modules": {},
            "classes": {
                "SuffixComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/suffix/suffix.ts": {
            "name": "src/app/route/suffix/suffix.ts",
            "modules": {},
            "classes": {
                "Suffix": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/systemSettings/formOfSetting/systemsettingsForm.component.ts": {
            "name": "src/app/route/systemSettings/formOfSetting/systemsettingsForm.component.ts",
            "modules": {},
            "classes": {
                "SettingType": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/systemSettings/systemsettings.component.ts": {
            "name": "src/app/route/systemSettings/systemsettings.component.ts",
            "modules": {},
            "classes": {
                "SystemSettingsComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/systemSettings/systemsettings.services.ts": {
            "name": "src/app/route/systemSettings/systemsettings.services.ts",
            "modules": {},
            "classes": {
                "SystemSettingsServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/task/taskfilter/taskfilter.component.ts": {
            "name": "src/app/route/task/taskfilter/taskfilter.component.ts",
            "modules": {},
            "classes": {
                "TaskFilterComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/task/task.component.ts": {
            "name": "src/app/route/task/task.component.ts",
            "modules": {},
            "classes": {
                "TaskComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/task/task.services.ts": {
            "name": "src/app/route/task/task.services.ts",
            "modules": {},
            "classes": {
                "TaskServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/taskType/taskTypeForm/taskTypeForm.component.ts": {
            "name": "src/app/route/taskType/taskTypeForm/taskTypeForm.component.ts",
            "modules": {},
            "classes": {
                "TaskTypeForm": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/taskType/taskType.component.ts": {
            "name": "src/app/route/taskType/taskType.component.ts",
            "modules": {},
            "classes": {
                "TaskTypeComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/taskType/taskType.services.ts": {
            "name": "src/app/route/taskType/taskType.services.ts",
            "modules": {},
            "classes": {
                "TaskTypeServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/taskType/taskType.ts": {
            "name": "src/app/route/taskType/taskType.ts",
            "modules": {},
            "classes": {
                "TaskType": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/userGroup/userGroup.component.ts": {
            "name": "src/app/route/userGroup/userGroup.component.ts",
            "modules": {},
            "classes": {
                "UserGroupComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/userGroup/userGroup.services.ts": {
            "name": "src/app/route/userGroup/userGroup.services.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/userGroup/userGroup.ts": {
            "name": "src/app/route/userGroup/userGroup.ts",
            "modules": {},
            "classes": {
                "UserGroup": 1,
                "ModuleName": 1,
                "Groups": 1,
                "Permissions": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/verbiages/verbiage.ts": {
            "name": "src/app/route/verbiages/verbiage.ts",
            "modules": {},
            "classes": {
                "Verbiage": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/verbiages/verbiages.component.ts": {
            "name": "src/app/route/verbiages/verbiages.component.ts",
            "modules": {},
            "classes": {
                "VerbiagesComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/verbiages/verbiages.services.ts": {
            "name": "src/app/route/verbiages/verbiages.services.ts",
            "modules": {},
            "classes": {
                "VerbiagesServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/viewAddress/viewAddress.component.ts": {
            "name": "src/app/route/viewAddress/viewAddress.component.ts",
            "modules": {},
            "classes": {
                "ViewAddressComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/viewAddress/viewAddress.services.ts": {
            "name": "src/app/route/viewAddress/viewAddress.services.ts",
            "modules": {},
            "classes": {
                "ViewAddressServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/viewtask/viewtask.component.ts": {
            "name": "src/app/route/viewtask/viewtask.component.ts",
            "modules": {},
            "classes": {
                "ViewTaskComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/worktype/formWorkType/formWorkType.component.ts": {
            "name": "src/app/route/worktype/formWorkType/formWorkType.component.ts",
            "modules": {},
            "classes": {
                "FormWorkType": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/worktype/workType.component.ts": {
            "name": "src/app/route/worktype/workType.component.ts",
            "modules": {},
            "classes": {
                "WorkTypeComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/worktype/workType.services.ts": {
            "name": "src/app/route/worktype/workType.services.ts",
            "modules": {},
            "classes": {
                "WorkTypeServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/worktype/workType.ts": {
            "name": "src/app/route/worktype/workType.ts",
            "modules": {},
            "classes": {
                "WorkTypeDTO": 1,
                "RfpJobTypeCostRanges": 1,
                "RfpJobTypeCumulativeCosts": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/worktypecategory/formWorkTypeCategory/formWorkTypeCategory.component.ts": {
            "name": "src/app/route/worktypecategory/formWorkTypeCategory/formWorkTypeCategory.component.ts",
            "modules": {},
            "classes": {
                "FormWorkTypeCategory": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/worktypecategory/worktypecategory.component.ts": {
            "name": "src/app/route/worktypecategory/worktypecategory.component.ts",
            "modules": {},
            "classes": {
                "WorkTypeCategoryComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/worktypecategory/worktypecategory.services.ts": {
            "name": "src/app/route/worktypecategory/worktypecategory.services.ts",
            "modules": {},
            "classes": {
                "WorkTypeCategoryServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/route/worktypecategory/worktypecategory.ts": {
            "name": "src/app/route/worktypecategory/worktypecategory.ts",
            "modules": {},
            "classes": {
                "WorkTypeCategory": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/services/ConstClassification.services.ts": {
            "name": "src/app/services/ConstClassification.services.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/app/services/JobApplicationService.services.ts": {
            "name": "src/app/services/JobApplicationService.services.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/app/services/PrimaryStructuralSystems.services.ts": {
            "name": "src/app/services/PrimaryStructuralSystems.services.ts",
            "modules": {},
            "classes": {
                "PrimaryStructuralSystemsServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/services/addressType.services.ts": {
            "name": "src/app/services/addressType.services.ts",
            "modules": {},
            "classes": {
                "AddressTypeServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/services/borough.services.ts": {
            "name": "src/app/services/borough.services.ts",
            "modules": {},
            "classes": {
                "BoroughServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/services/city.services.ts": {
            "name": "src/app/services/city.services.ts",
            "modules": {},
            "classes": {
                "CityServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/services/contactLicenseType.services.ts": {
            "name": "src/app/services/contactLicenseType.services.ts",
            "modules": {},
            "classes": {
                "ConstClasificationsServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/services/contactTitle.services.ts": {
            "name": "src/app/services/contactTitle.services.ts",
            "modules": {},
            "classes": {
                "ContactTitleServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/services/contactType.services.ts": {
            "name": "src/app/services/contactType.services.ts",
            "modules": {},
            "classes": {
                "ContactTypeServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/services/documentType.Services.ts": {
            "name": "src/app/services/documentType.Services.ts",
            "modules": {},
            "classes": {
                "DocumentTypeServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/services/globalSearch.services.ts": {
            "name": "src/app/services/globalSearch.services.ts",
            "modules": {},
            "classes": {
                "GlobalSearchServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/services/group.services.ts": {
            "name": "src/app/services/group.services.ts",
            "modules": {},
            "classes": {
                "GroupServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/services/prefix.services.ts": {
            "name": "src/app/services/prefix.services.ts",
            "modules": {},
            "classes": {
                "PrefixServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/services/state.services.ts": {
            "name": "src/app/services/state.services.ts",
            "modules": {},
            "classes": {
                "StateServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/services/suffix.services.ts": {
            "name": "src/app/services/suffix.services.ts",
            "modules": {},
            "classes": {
                "SuffixServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/services/user.services.ts": {
            "name": "src/app/services/user.services.ts",
            "modules": {},
            "classes": {
                "UserServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/services/userRight.services.ts": {
            "name": "src/app/services/userRight.services.ts",
            "modules": {},
            "classes": {
                "UserRightServices": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/types/addresstype.ts": {
            "name": "src/app/types/addresstype.ts",
            "modules": {},
            "classes": {
                "AddressType": 1,
                "AddressTypeDTO": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/types/contactTitle.ts": {
            "name": "src/app/types/contactTitle.ts",
            "modules": {},
            "classes": {
                "ContactTitle": 1,
                "ContactTitleDTO": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/types/employee.ts": {
            "name": "src/app/types/employee.ts",
            "modules": {},
            "classes": {
                "class": 1,
                "DocumentType": 1,
                "EmployeeDocument": 1,
                "Employee": 1,
                "EmployeeGrants": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/types/job.ts": {
            "name": "src/app/types/job.ts",
            "modules": {},
            "classes": {
                "jobDTO": 1,
                "Job": 1,
                "JobMilestones": 1,
                "Milestone": 1,
                "jobMilestoneServices": 1,
                "JobScope": 1,
                "scope": 1,
                "teamMember": 1,
                "jobContactType": 1,
                "jobApplication": 1,
                "unitType": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/types/projectDetails.ts": {
            "name": "src/app/types/projectDetails.ts",
            "modules": {},
            "classes": {
                "ProjectDetails": 1,
                "WorkTypeNotes": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/types/proposalReview.ts": {
            "name": "src/app/types/proposalReview.ts",
            "modules": {},
            "classes": {
                "proposalReview": 1,
                "proposalReviewSections": 1,
                "RfpProposalReviewList": 1,
                "Milestones": 1,
                "milestoneServiceList": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/types/scopereview.ts": {
            "name": "src/app/types/scopereview.ts",
            "modules": {},
            "classes": {
                "ScopeReview": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/types/systemsettings.ts": {
            "name": "src/app/types/systemsettings.ts",
            "modules": {},
            "classes": {
                "SystemField": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/types/verbiages.ts": {
            "name": "src/app/types/verbiages.ts",
            "modules": {},
            "classes": {
                "Verbiages": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/app/app.component.ts": {
            "name": "src/app/app.component.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/app/app.module.ts": {
            "name": "src/app/app.module.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/app/app.routing.ts": {
            "name": "src/app/app.routing.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "projectDetailsComponent": {
            "name": "projectDetailsComponent",
            "shortname": "projectDetailsComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/addRfp/projectDetails/projectDetails.component.ts",
            "line": 30,
            "description": "projectDetailsComponent class contains all function that are used in RFP step 2 project detail"
        },
        "ProjectDetailsServices": {
            "name": "ProjectDetailsServices",
            "shortname": "ProjectDetailsServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/addRfp/projectDetails/projectDetails.services.ts",
            "line": 12,
            "description": "Class contains all services related to ProjectDetailsServices"
        },
        "ReviewComponent": {
            "name": "ReviewComponent",
            "shortname": "ReviewComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/addRfp/proposalReview/review/review.component.ts",
            "line": 20,
            "description": "This component contains all function that are used in ReviewComponent"
        },
        "ReviewServices": {
            "name": "ReviewServices",
            "shortname": "ReviewServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/addRfp/proposalReview/review/review.services.ts",
            "line": 10,
            "description": "Class contains all services related to ReviewServices"
        },
        "Review": {
            "name": "Review",
            "shortname": "Review",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/addRfp/proposalReview/review/review.ts",
            "line": 1,
            "description": "This class is used as a Review model",
            "is_constructor": 1
        },
        "proposalReviewComponent": {
            "name": "proposalReviewComponent",
            "shortname": "proposalReviewComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/addRfp/proposalReview/proposalReview.component.ts",
            "line": 27,
            "description": "This component contains all function that are used in proposalReviewComponent"
        },
        "ProposalReviewServices": {
            "name": "ProposalReviewServices",
            "shortname": "ProposalReviewServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/addRfp/proposalReview/proposalReview.services.ts",
            "line": 12,
            "description": "Class contains all services related to ProposalReviewServices"
        },
        "FeeScheduleComponent": {
            "name": "FeeScheduleComponent",
            "shortname": "FeeScheduleComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/addRfp/rfpSubmit/feeschedule/feeschedule.component.ts",
            "line": 11,
            "description": "This component contains all function that are used in FeeScheduleComponent"
        },
        "FeeScheduleServices": {
            "name": "FeeScheduleServices",
            "shortname": "FeeScheduleServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/addRfp/rfpSubmit/feeschedule/feeschedule.services.ts",
            "line": 9,
            "description": "Class contains all services related to FeeScheduleServices"
        },
        "rfpSubmitComponent": {
            "name": "rfpSubmitComponent",
            "shortname": "rfpSubmitComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/addRfp/rfpSubmit/rfpSubmit.component.ts",
            "line": 34,
            "description": "This component contains all function that are used in rfpSubmitComponent"
        },
        "scopeReviewComponent": {
            "name": "scopeReviewComponent",
            "shortname": "scopeReviewComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/addRfp/scopeReview/scopeReview.component.ts",
            "line": 25,
            "description": "This component contains all function that are used in scopeReviewComponent"
        },
        "ScopeReviewServices": {
            "name": "ScopeReviewServices",
            "shortname": "ScopeReviewServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/addRfp/scopeReview/scopeReview.services.ts",
            "line": 12,
            "description": "Class contains all services related to ScopeReviewServices"
        },
        "SiteInformationComponent": {
            "name": "SiteInformationComponent",
            "shortname": "SiteInformationComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/addRfp/siteInformation/siteInformation.component.ts",
            "line": 49,
            "description": "SiteInformationComponent class contains all function that are used in RFP step 1"
        },
        "SiteInformationServices": {
            "name": "SiteInformationServices",
            "shortname": "SiteInformationServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/addRfp/siteInformation/siteInformation.services.ts",
            "line": 12,
            "description": "SiteInformationServices class contains all services related to RFP step1"
        },
        "AddressMasterComponent": {
            "name": "AddressMasterComponent",
            "shortname": "AddressMasterComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/addressmaster/addressmaster.component.ts",
            "line": 22,
            "description": "This component contains all function that are used in AddressMasterComponent"
        },
        "AddressMasterServices": {
            "name": "AddressMasterServices",
            "shortname": "AddressMasterServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/addressmaster/addressmaster.services.ts",
            "line": 10,
            "description": "This class is used as a AddressMasterServices",
            "is_constructor": 1
        },
        "AddresstypeComponent": {
            "name": "AddresstypeComponent",
            "shortname": "AddresstypeComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/addresstype/addresstype.component.ts",
            "line": 14,
            "description": "This component contains all function that are used in AddresstypeComponent"
        },
        "AddTaskComponent": {
            "name": "AddTaskComponent",
            "shortname": "AddTaskComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/addtask/addtask.component.ts",
            "line": 20,
            "description": "AddTaskComponent class contains all function that are used in Add/Edit Task"
        },
        "BisCompanyListComponent": {
            "name": "BisCompanyListComponent",
            "shortname": "BisCompanyListComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/company/bisCompanyList/bisCompanyList.component.ts",
            "line": 16,
            "description": "BisCompanyListComponent class contains all function that are used in this component"
        },
        "CompanyDetailComponent": {
            "name": "CompanyDetailComponent",
            "shortname": "CompanyDetailComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/company/companyDetail/companyDetail.component.ts",
            "line": 34,
            "description": "This component contains all function that are used in this component"
        },
        "FormCompanyComponent": {
            "name": "FormCompanyComponent",
            "shortname": "FormCompanyComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/company/formCompany/formCompany.component.ts",
            "line": 24,
            "description": "This component contains all function that are used in this component"
        },
        "GetInfoComponent": {
            "name": "GetInfoComponent",
            "shortname": "GetInfoComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/company/getinfo/getinfo.component.ts",
            "line": 27,
            "description": "This component contains all function that are used in this component"
        },
        "CompanyComponent": {
            "name": "CompanyComponent",
            "shortname": "CompanyComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/company/company.component.ts",
            "line": 34,
            "description": "This component contains all function that are used in this component"
        },
        "CompanyServices": {
            "name": "CompanyServices",
            "shortname": "CompanyServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/company/company.services.ts",
            "line": 13,
            "description": "CompanyServices class contains all services related to company"
        },
        "CompanyTaxTypesForm": {
            "name": "CompanyTaxTypesForm",
            "shortname": "CompanyTaxTypesForm",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/companytaxtypes/companytaxtypesform/companytaxtypesform.component.ts",
            "line": 13,
            "description": "This component contains all function that are used in Company Tax Types"
        },
        "CompanyTaxTypesComponent": {
            "name": "CompanyTaxTypesComponent",
            "shortname": "CompanyTaxTypesComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/companytaxtypes/companytaxtypes.component.ts",
            "line": 14,
            "description": "This component contains all function that are used in Company Tax Types Component"
        },
        "CompanyTaxTypesServices": {
            "name": "CompanyTaxTypesServices",
            "shortname": "CompanyTaxTypesServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/companytaxtypes/companytaxtypes.services.ts",
            "line": 10,
            "description": "Class contains all services related to Company Tax Types Services"
        },
        "CompanyTaxTypes": {
            "name": "CompanyTaxTypes",
            "shortname": "CompanyTaxTypes",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/companytaxtypes/companytaxtypes.ts",
            "line": 1,
            "description": "This class is used as a CompanyTaxTypes model",
            "is_constructor": 1
        },
        "CompanyTypesForm": {
            "name": "CompanyTypesForm",
            "shortname": "CompanyTypesForm",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/companytypes/companytypesform/companytypesform.component.ts",
            "line": 12,
            "description": "This component contains all function that are used in CompanyTypesForm"
        },
        "CompanyTypesComponent": {
            "name": "CompanyTypesComponent",
            "shortname": "CompanyTypesComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/companytypes/companytypes.component.ts",
            "line": 13,
            "description": "This component contains all function that are used in CompanyTypesComponent"
        },
        "CompanyTypesServices": {
            "name": "CompanyTypesServices",
            "shortname": "CompanyTypesServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/companytypes/companytypes.services.ts",
            "line": 9,
            "description": "Class contains all services related to CompanyTypesServices"
        },
        "CompanyTypes": {
            "name": "CompanyTypes",
            "shortname": "CompanyTypes",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/companytypes/companytypes.ts",
            "line": 1,
            "description": "This class is used as a CompanyTypes model"
        },
        "ConstructionClassificationsForm": {
            "name": "ConstructionClassificationsForm",
            "shortname": "ConstructionClassificationsForm",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/constructionclassifications/constructionclassificationsform/constructionclassificationsform.component.ts",
            "line": 12,
            "description": "This component contains all function that are used in ConstructionClassificationsForm"
        },
        "ConstructionClassificationsComponent": {
            "name": "ConstructionClassificationsComponent",
            "shortname": "ConstructionClassificationsComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/constructionclassifications/constructionclassifications.component.ts",
            "line": 13,
            "description": "This component contains all function that are used in ConstructionClassificationsComponent"
        },
        "ConstructionClassificationsServices": {
            "name": "ConstructionClassificationsServices",
            "shortname": "ConstructionClassificationsServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/constructionclassifications/constructionclassifications.services.ts",
            "line": 9,
            "description": "Class contains all services related to ConstructionClassificationsServices"
        },
        "ConstructionClassifications": {
            "name": "ConstructionClassifications",
            "shortname": "ConstructionClassifications",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/constructionclassifications/constructionclassifications.ts",
            "line": 1,
            "description": "This class is used as a ConstructionClassifications model"
        },
        "ContactDetailComponent": {
            "name": "ContactDetailComponent",
            "shortname": "ContactDetailComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/contact/contactDetail/contactDetail.component.ts",
            "line": 24,
            "description": "This component contains all function that are used in Contact Detail"
        },
        "FormContactComponent": {
            "name": "FormContactComponent",
            "shortname": "FormContactComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/contact/formContact/formContact.component.ts",
            "line": 43,
            "description": "This component contains all function that are used in FormContactComponent"
        },
        "ContactComponent": {
            "name": "ContactComponent",
            "shortname": "ContactComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/contact/contact.component.ts",
            "line": 23,
            "description": "This component contains all function that are used in ContactComponent"
        },
        "ContactServices": {
            "name": "ContactServices",
            "shortname": "ContactServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/contact/contact.services.ts",
            "line": 12,
            "description": "Class contains all services related to ContactServices"
        },
        "ContactTitleformComponent": {
            "name": "ContactTitleformComponent",
            "shortname": "ContactTitleformComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/contacttitle/contacttitleform/contacttitleform.component.ts",
            "line": 11,
            "description": "This component contains all function that are used in ContactTitleformComponent"
        },
        "ContactTitleComponent": {
            "name": "ContactTitleComponent",
            "shortname": "ContactTitleComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/contacttitle/contacttitle.component.ts",
            "line": 14,
            "description": "This component contains all function that are used in ContactTitleComponent"
        },
        "DepCostSettingForm": {
            "name": "DepCostSettingForm",
            "shortname": "DepCostSettingForm",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/depcostsetting/depcostsettingform/depCostSettingform.component.ts",
            "line": 12,
            "description": "This component contains all function that are used in Dep Cost Setting Form"
        },
        "DepCostSettingComponent": {
            "name": "DepCostSettingComponent",
            "shortname": "DepCostSettingComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/depcostsetting/depCostSetting.component.ts",
            "line": 14,
            "description": "This component contains all function that are used in Dep Cost Setting Component"
        },
        "DepCostSettingServices": {
            "name": "DepCostSettingServices",
            "shortname": "DepCostSettingServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/depcostsetting/depCostSetting.services.ts",
            "line": 10,
            "description": "Class contains all services related to  DEP cost setting"
        },
        "DepCostSetting": {
            "name": "DepCostSetting",
            "shortname": "DepCostSetting",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/depcostsetting/depCostSetting.ts",
            "line": 1,
            "description": "This class is used as a model for DEP cost setting",
            "is_constructor": 1
        },
        "DocumentTypesForm": {
            "name": "DocumentTypesForm",
            "shortname": "DocumentTypesForm",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/documenttypes/documenttypesform/documenttypesform.component.ts",
            "line": 12,
            "description": "This component contains all function that are used in DocumentTypesForm"
        },
        "DocumentTypesComponent": {
            "name": "DocumentTypesComponent",
            "shortname": "DocumentTypesComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/documenttypes/documenttypes.component.ts",
            "line": 13,
            "description": "This component contains all function that are used in DocumentTypesComponent"
        },
        "DocumentTypesServices": {
            "name": "DocumentTypesServices",
            "shortname": "DocumentTypesServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/documenttypes/documenttypes.services.ts",
            "line": 9,
            "description": "Class contains all services related to DocumentTypesServices"
        },
        "DocumentTypes": {
            "name": "DocumentTypes",
            "shortname": "DocumentTypes",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/documenttypes/documenttypes.ts",
            "line": 1,
            "description": "This class is used as a DocumentTypes model"
        },
        "DwellingClassificationForm": {
            "name": "DwellingClassificationForm",
            "shortname": "DwellingClassificationForm",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/dwellingclassification/dwellingclassificationform/dwellingclassificationform.component.ts",
            "line": 13,
            "description": "This component contains all function that are used in DwellingClassificationForm"
        },
        "DwellingClassificationComponent": {
            "name": "DwellingClassificationComponent",
            "shortname": "DwellingClassificationComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/dwellingclassification/dwellingclassification.component.ts",
            "line": 13,
            "description": "This component contains all function that are used in DwellingClassificationComponent"
        },
        "DwellingClassificationServices": {
            "name": "DwellingClassificationServices",
            "shortname": "DwellingClassificationServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/dwellingclassification/dwellingclassification.services.ts",
            "line": 9,
            "description": "Class contains all services related to DwellingClassificationServices"
        },
        "DwellingClassification": {
            "name": "DwellingClassification",
            "shortname": "DwellingClassification",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/dwellingclassification/dwellingclassification.ts",
            "line": 1,
            "description": "This class is used as a DwellingClassification model",
            "is_constructor": 1
        },
        "EmailtypeformComponent": {
            "name": "EmailtypeformComponent",
            "shortname": "EmailtypeformComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/emailtype/emailtypeform/emailtypeform.component.ts",
            "line": 12,
            "description": "This component contains all function that are used in EmailtypeformComponent"
        },
        "EmailTypeComponent": {
            "name": "EmailTypeComponent",
            "shortname": "EmailTypeComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/emailtype/emailtype.component.ts",
            "line": 13,
            "description": "This component contains all function that are used in EmailTypeComponent"
        },
        "EmailtypeServices": {
            "name": "EmailtypeServices",
            "shortname": "EmailtypeServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/emailtype/emailtype.services.ts",
            "line": 9,
            "description": "Class contains all services related to EmailtypeServices"
        },
        "EmailType": {
            "name": "EmailType",
            "shortname": "EmailType",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/emailtype/emailtype.ts",
            "line": 1,
            "description": "This class is used as a EmailType model"
        },
        "EmployeeComponent": {
            "name": "EmployeeComponent",
            "shortname": "EmployeeComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/employee/employee.component.ts",
            "line": 28,
            "description": "This component contains all function that are used in EmployeeComponent"
        },
        "EmployeeServices": {
            "name": "EmployeeServices",
            "shortname": "EmployeeServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/employee/employee.services.ts",
            "line": 11,
            "description": "Class contains all services related to EmployeeServices"
        },
        "HolidayCalendarForm": {
            "name": "HolidayCalendarForm",
            "shortname": "HolidayCalendarForm",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/holidaycalendar/holidaycalendarform/holidayCalendarform.component.ts",
            "line": 13,
            "description": "This component contains all function that are used in Holiday Calendar Form"
        },
        "HolidayCalendarComponent": {
            "name": "HolidayCalendarComponent",
            "shortname": "HolidayCalendarComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/holidaycalendar/holidayCalendar.component.ts",
            "line": 16,
            "description": "This component contains all function that are used in Holiday Calendar Component"
        },
        "HolidayCalendarServices": {
            "name": "HolidayCalendarServices",
            "shortname": "HolidayCalendarServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/holidaycalendar/holidayCalendar.services.ts",
            "line": 9,
            "description": "Class contains all services related to Holiday calendar"
        },
        "FormAdvanceSearchComponent": {
            "name": "FormAdvanceSearchComponent",
            "shortname": "FormAdvanceSearchComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/job/formAdvanceSearch/formAdvanceSearch.component.ts",
            "line": 23,
            "description": "This component contains all function that are used in FormAdvanceSearchComponent"
        },
        "FormJobComponent": {
            "name": "FormJobComponent",
            "shortname": "FormJobComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/job/formJob/formJob.component.ts",
            "line": 47,
            "description": "This component contains all function that are used in FormJobComponent"
        },
        "FormJobAddNewAddressComponent": {
            "name": "FormJobAddNewAddressComponent",
            "shortname": "FormJobAddNewAddressComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/job/formJobAddNewAddress/formJobAddNewAddress.component.ts",
            "line": 38,
            "description": "This component contains all function that are used in Form Job Add New Address Component"
        },
        "JobReasonForm": {
            "name": "JobReasonForm",
            "shortname": "JobReasonForm",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/job/formJobReason/jobReason.component.ts",
            "line": 22,
            "description": "This component contains all function that are used in Job Reason Form"
        },
        "JobReasonServices": {
            "name": "JobReasonServices",
            "shortname": "JobReasonServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/job/formJobReason/jobReason.services.ts",
            "line": 9,
            "description": "Class contains all services related to Job Reason Services"
        },
        "AddTimeNotesComponent": {
            "name": "AddTimeNotesComponent",
            "shortname": "AddTimeNotesComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/job/jobDetail/basicInfo/addtimenotes/addtimenotes.component.ts",
            "line": 19,
            "description": "This component contains all function that are used in AddTimeNotesComponent"
        },
        "FormAddDepApplication": {
            "name": "FormAddDepApplication",
            "shortname": "FormAddDepApplication",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/job/jobDetail/jobApplicationDep/formAddDepApplication/formAddDepApplication.component.ts",
            "line": 15,
            "description": "This component contains all function that are used in FormAddDepApplication"
        },
        "JobApplicationDepComponent": {
            "name": "JobApplicationDepComponent",
            "shortname": "JobApplicationDepComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/job/jobDetail/jobApplicationDep/jobApplicationDep.component.ts",
            "line": 27,
            "description": "This component contains all function that are used in JobApplicationDepComponent"
        },
        "FormAddApplication": {
            "name": "FormAddApplication",
            "shortname": "FormAddApplication",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/job/jobDetail/jobApplicationDob/formAddApplication/formAddApplication.component.ts",
            "line": 12,
            "description": "This component contains all function that are used in FormAddApplication"
        },
        "FormAddPermit": {
            "name": "FormAddPermit",
            "shortname": "FormAddPermit",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/job/jobDetail/jobApplicationDob/formAddPermit/formAddPermit.component.ts",
            "line": 13,
            "description": "This component contains all function that are used in FormAddPermit"
        },
        "JobApplicationDobComponent": {
            "name": "JobApplicationDobComponent",
            "shortname": "JobApplicationDobComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/job/jobDetail/jobApplicationDob/jobApplicationDob.component.ts",
            "line": 27,
            "description": "This component contains all function that are used in JobApplicationDobComponent"
        },
        "JobApplicationPermitComponent": {
            "name": "JobApplicationPermitComponent",
            "shortname": "JobApplicationPermitComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/job/jobDetail/jobApplicationDob/jobApplicationPermit.component.ts",
            "line": 17,
            "description": "This component contains all function that are used in JobApplicationPermitComponent"
        },
        "FormAddDot": {
            "name": "FormAddDot",
            "shortname": "FormAddDot",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/job/jobDetail/jobApplicationDot/formAddDot/formAddDot.component.ts",
            "line": 12,
            "description": "This component contains all function that are used in FormAddDot"
        },
        "FormAddDotPermit": {
            "name": "FormAddDotPermit",
            "shortname": "FormAddDotPermit",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/job/jobDetail/jobApplicationDot/formAddDotPermit/formAddDotPermit.component.ts",
            "line": 13,
            "description": "This component contains all function that are used in FormAddDotPermit"
        },
        "FormUploadDotPermit": {
            "name": "FormUploadDotPermit",
            "shortname": "FormUploadDotPermit",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/job/jobDetail/jobApplicationDot/formUploadDotPermit/formUploadDotPermit.component.ts",
            "line": 13,
            "description": "This component contains all function that are used in FormUploadDotPermit"
        },
        "JobApplicationDotComponent": {
            "name": "JobApplicationDotComponent",
            "shortname": "JobApplicationDotComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/job/jobDetail/jobApplicationDot/jobApplicationDot.component.ts",
            "line": 28,
            "description": "This component contains all function that are used in JobApplicationDotComponent"
        },
        "JobDotPermitComponent": {
            "name": "JobDotPermitComponent",
            "shortname": "JobDotPermitComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/job/jobDetail/jobApplicationDot/jobDotPermit.component.ts",
            "line": 17,
            "description": "This component contains all function that are used in JobDotPermitComponent"
        },
        "AddJobContactComponent": {
            "name": "AddJobContactComponent",
            "shortname": "AddJobContactComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/job/jobDetail/jobContact/addJobContact/addJobContact.component.ts",
            "line": 15,
            "description": "This component contains all function that are used in AddJobContactComponent"
        },
        "JobContactServices": {
            "name": "JobContactServices",
            "shortname": "JobContactServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/job/jobDetail/jobContact/JobContact.service.ts",
            "line": 15,
            "description": "JobContactServices class contains all services related Job Contacts"
        },
        "LicenseTypes": {
            "name": "LicenseTypes",
            "shortname": "LicenseTypes",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/licensetypes/licensetypes.ts",
            "line": 1,
            "description": "This class is used as a LicenseTypes model"
        },
        "JobContactComponent": {
            "name": "JobContactComponent",
            "shortname": "JobContactComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/job/jobDetail/jobContact/jobContact.component.ts",
            "line": 20,
            "description": "This component contains all function that are used in JobContactComponent"
        },
        "JobHistoryComponent": {
            "name": "JobHistoryComponent",
            "shortname": "JobHistoryComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/job/jobDetail/jobHistory/jobHistory.component.ts",
            "line": 14,
            "description": "This component contains all function that are used in JobHistoryComponent"
        },
        "JobHistoryServices": {
            "name": "JobHistoryServices",
            "shortname": "JobHistoryServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/job/jobDetail/jobHistory/jobHistory.service.ts",
            "line": 11,
            "description": "JobHistoryServices class contains all services related Job History"
        },
        "JobMilestoneComponent": {
            "name": "JobMilestoneComponent",
            "shortname": "JobMilestoneComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/job/jobDetail/jobMilestone/jobMilestone.component.ts",
            "line": 22,
            "description": "This component contains all function that are used in Job Milestone"
        },
        "JobMilestoneServices": {
            "name": "JobMilestoneServices",
            "shortname": "JobMilestoneServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/job/jobDetail/jobMilestone/jobMilestone.service.ts",
            "line": 12,
            "description": "Class contains all services related to Job Milestone"
        },
        "AddScopeComponent": {
            "name": "AddScopeComponent",
            "shortname": "AddScopeComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/job/jobDetail/jobScope/addScope/addScope.component.ts",
            "line": 15,
            "description": "This component contains all function that are used in AddScopeComponent"
        },
        "ScopeHistoryComponent": {
            "name": "ScopeHistoryComponent",
            "shortname": "ScopeHistoryComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/job/jobDetail/jobScope/scopeHistory/scopeHistory.component.ts",
            "line": 13,
            "description": "This component contains all function that are used in ScopeHistoryComponent"
        },
        "JobScopeComponent": {
            "name": "JobScopeComponent",
            "shortname": "JobScopeComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/job/jobDetail/jobScope/jobScope.component.ts",
            "line": 27,
            "description": "This component contains all function that are used in JobScopeComponent"
        },
        "JobScopeServices": {
            "name": "JobScopeServices",
            "shortname": "JobScopeServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/job/jobDetail/jobScope/jobScope.service.ts",
            "line": 11,
            "description": "JobScopeServices class contains all services related to job scope"
        },
        "JobTaskComponent": {
            "name": "JobTaskComponent",
            "shortname": "JobTaskComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/job/jobDetail/jobTask/jobTask.component.ts",
            "line": 19,
            "description": "This component contains all function that are used in Job Task"
        },
        "AddTransMittalComponent": {
            "name": "AddTransMittalComponent",
            "shortname": "AddTransMittalComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/job/jobDetail/jobTransmittal/addTransmittal/addTransmittal.component.ts",
            "line": 26,
            "description": "This component contains all function that are used in Add TransMittal"
        },
        "JobTransmittalComponent": {
            "name": "JobTransmittalComponent",
            "shortname": "JobTransmittalComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/job/jobDetail/jobTransmittal/jobTransmittal.component.ts",
            "line": 19,
            "description": "This component contains all function that are used in Job Transmittal"
        },
        "TransmittalServices": {
            "name": "TransmittalServices",
            "shortname": "TransmittalServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/job/jobDetail/jobTransmittal/jobTransmittal.service.ts",
            "line": 12,
            "description": "This component contains all function that are used in Transmittal"
        },
        "FormExplainationCharges": {
            "name": "FormExplainationCharges",
            "shortname": "FormExplainationCharges",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/job/jobDetail/jobViolation/explainationCharges/explainationCharges.component.ts",
            "line": 13,
            "description": "This component contains all function that are used in Form Explaination Charges"
        },
        "FormAddViolation": {
            "name": "FormAddViolation",
            "shortname": "FormAddViolation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/job/jobDetail/jobViolation/formAddViolation/formAddViolation.component.ts",
            "line": 13,
            "description": "This component contains all function that are used in Form Add Violation"
        },
        "JobViolationComponent": {
            "name": "JobViolationComponent",
            "shortname": "JobViolationComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/job/jobDetail/jobViolation/jobViolation.component.ts",
            "line": 23,
            "description": "This component contains all function that are used in Job Violation"
        },
        "Violation": {
            "name": "Violation",
            "shortname": "Violation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/job/jobDetail/jobViolation/violation.ts",
            "line": 1,
            "description": "This class is used as a Violation model",
            "is_constructor": 1
        },
        "ExplanationOfCharges": {
            "name": "ExplanationOfCharges",
            "shortname": "ExplanationOfCharges",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/job/jobDetail/jobViolation/violation.ts",
            "line": 29,
            "description": "This class is used as a Explanation Of Charges model",
            "is_constructor": 1
        },
        "RelatedJobServices": {
            "name": "RelatedJobServices",
            "shortname": "RelatedJobServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/job/jobDetail/relatedJob/relatedJob.service.ts",
            "line": 13,
            "description": "RelatedJobServices contains all services related to  Job related"
        },
        "TimeNotesServices": {
            "name": "TimeNotesServices",
            "shortname": "TimeNotesServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/job/jobDetail/timeNotes/TimeNotes.service.ts",
            "line": 13,
            "description": "TimeNotesServices contains all services related to Time Notes"
        },
        "TimeNotesComponent": {
            "name": "TimeNotesComponent",
            "shortname": "TimeNotesComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/job/jobDetail/timeNotes/timeNotes.component.ts",
            "line": 20,
            "description": "This component contains all function that are used in Time Notes"
        },
        "JobDetailComponent": {
            "name": "JobDetailComponent",
            "shortname": "JobDetailComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/job/jobDetail/jobDetail.component.ts",
            "line": 20,
            "description": "This component contains all function that are used in Job Detail"
        },
        "JobDetailModule": {
            "name": "JobDetailModule",
            "shortname": "JobDetailModule",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/job/jobDetail/jobDetail.module.ts",
            "line": 15,
            "description": "This Module contains all function that are used in Job detail module"
        },
        "JobSharedService": {
            "name": "JobSharedService",
            "shortname": "JobSharedService",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/job/JobSharedService.ts",
            "line": 9,
            "description": "Job Shared Service contains all services that are used as share in other components"
        },
        "JobComponent": {
            "name": "JobComponent",
            "shortname": "JobComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/job/job.component.ts",
            "line": 27,
            "description": "This component contains all function that are used in JobComponent"
        },
        "JobServices": {
            "name": "JobServices",
            "shortname": "JobServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/job/job.services.ts",
            "line": 14,
            "description": "JobServices contains all services related to job"
        },
        "JobContactTypesForm": {
            "name": "JobContactTypesForm",
            "shortname": "JobContactTypesForm",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/jobcontacttypes/jobcontacttypesform/jobcontacttypesform.component.ts",
            "line": 12,
            "description": "This component contains all function that are used in JobContactTypesForm"
        },
        "JobContactTypesComponent": {
            "name": "JobContactTypesComponent",
            "shortname": "JobContactTypesComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/jobcontacttypes/jobcontacttypes.component.ts",
            "line": 13,
            "description": "This component contains all function that are used in JobContactTypesComponent"
        },
        "JobContactTypesServices": {
            "name": "JobContactTypesServices",
            "shortname": "JobContactTypesServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/jobcontacttypes/jobcontacttypes.services.ts",
            "line": 10,
            "description": "Class contains all services related to JobContactTypesServices"
        },
        "JobContactTypes": {
            "name": "JobContactTypes",
            "shortname": "JobContactTypes",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/jobcontacttypes/jobcontacttypes.ts",
            "line": 1,
            "description": "This class is used as a JobContactTypes model"
        },
        "JobTimenoteCategoriesForm": {
            "name": "JobTimenoteCategoriesForm",
            "shortname": "JobTimenoteCategoriesForm",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/jobtimenotecategories/jobtimenotecategoriesform/jobtimenotecategoriesform.component.ts",
            "line": 13,
            "description": "This component contains all function that are used in Job Timenote Categories Form"
        },
        "JobTimenoteCategoriesComponent": {
            "name": "JobTimenoteCategoriesComponent",
            "shortname": "JobTimenoteCategoriesComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/jobtimenotecategories/jobtimenotecategories.component.ts",
            "line": 13,
            "description": "This component contains all function that are used in JobTimenoteCategoriesComponent"
        },
        "JobTimenoteCategoriesServices": {
            "name": "JobTimenoteCategoriesServices",
            "shortname": "JobTimenoteCategoriesServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/jobtimenotecategories/jobtimenotecategories.services.ts",
            "line": 9,
            "description": "Class contains all services related to Job Timenote Categories Services"
        },
        "JobTimenoteCategories": {
            "name": "JobTimenoteCategories",
            "shortname": "JobTimenoteCategories",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/jobtimenotecategories/jobtimenotecategories.ts",
            "line": 1,
            "description": "This class is used as a Job Timenote Categories model",
            "is_constructor": 1
        },
        "FormJobType": {
            "name": "FormJobType",
            "shortname": "FormJobType",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/jobtype/formJobType/formJobType.component.ts",
            "line": 14,
            "description": "This component contains all function that are used in FormJobType"
        },
        "JobTypeComponent": {
            "name": "JobTypeComponent",
            "shortname": "JobTypeComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/jobtype/jobType.component.ts",
            "line": 16,
            "description": "This component contains all function that are used in JobTypeComponent"
        },
        "JobTypeServices": {
            "name": "JobTypeServices",
            "shortname": "JobTypeServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/jobtype/jobType.services.ts",
            "line": 10,
            "description": "Class contains all services related to JobTypeServices"
        },
        "JobTypeDTO": {
            "name": "JobTypeDTO",
            "shortname": "JobTypeDTO",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/jobtype/jobType.ts",
            "line": 1,
            "description": "This class is used as a JobTypeDTO model",
            "is_constructor": 1
        },
        "LicenseTypesForm": {
            "name": "LicenseTypesForm",
            "shortname": "LicenseTypesForm",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/licensetypes/licensetypesform/licensetypesform.component.ts",
            "line": 12,
            "description": "This component contains all function that are used in LicenseTypesForm"
        },
        "LicenseTypesComponent": {
            "name": "LicenseTypesComponent",
            "shortname": "LicenseTypesComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/licensetypes/licensetypes.component.ts",
            "line": 13,
            "description": "This component contains all function that are used in LicenseTypesComponent"
        },
        "LicenseTypesServices": {
            "name": "LicenseTypesServices",
            "shortname": "LicenseTypesServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/licensetypes/licensetypes.services.ts",
            "line": 9,
            "description": "Class contains all services related to LicenseTypesServices"
        },
        "LoginComponent": {
            "name": "LoginComponent",
            "shortname": "LoginComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/login/login.component.ts",
            "line": 10,
            "description": "This component contains all function that are used in LoginComponent"
        },
        "NotificationComponent": {
            "name": "NotificationComponent",
            "shortname": "NotificationComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/notification/notification.component.ts",
            "line": 12,
            "description": "This component contains all function that are used in NotificationComponent"
        },
        "OccupancyClassificationsForm": {
            "name": "OccupancyClassificationsForm",
            "shortname": "OccupancyClassificationsForm",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/occupancyclassifications/occupancyclassificationsform/occupancyclassificationsform.component.ts",
            "line": 12,
            "description": "This component contains all function that are used in OccupancyClassificationsForm"
        },
        "OccupancyClassificationsServices": {
            "name": "OccupancyClassificationsServices",
            "shortname": "OccupancyClassificationsServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/occupancyclassifications/occupancyclassifications.component.services.ts",
            "line": 9,
            "description": "This component contains all function that are used in OccupancyClassificationsServices"
        },
        "occupancyclassificationsform": {
            "name": "occupancyclassificationsform",
            "shortname": "occupancyclassificationsform",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/occupancyclassifications/occupancyclassifications.component.ts",
            "line": 13,
            "description": "This component contains all function that are used in occupancyclassificationsform"
        },
        "OccupancyClassifications": {
            "name": "OccupancyClassifications",
            "shortname": "OccupancyClassifications",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/occupancyclassifications/occupancyclassifications.ts",
            "line": 1,
            "description": "This class is used as a OccupancyClassifications model",
            "is_constructor": 1
        },
        "PaneltyCodeformComponent": {
            "name": "PaneltyCodeformComponent",
            "shortname": "PaneltyCodeformComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/paneltycode/paneltycodeform/paneltycodeform.component.ts",
            "line": 11,
            "description": "This component contains all function that are used in PaneltyCodeformComponent"
        },
        "PaneltycodeComponent": {
            "name": "PaneltycodeComponent",
            "shortname": "PaneltycodeComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/paneltycode/paneltycode.component.ts",
            "line": 15,
            "description": "This component contains all function that are used in PaneltycodeComponent"
        },
        "PenaltyCode": {
            "name": "PenaltyCode",
            "shortname": "PenaltyCode",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/paneltycode/penaltyCode.ts",
            "line": 2,
            "description": "This class is used as a PenaltyCode model"
        },
        "PenaltyCodeServices": {
            "name": "PenaltyCodeServices",
            "shortname": "PenaltyCodeServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/paneltycode/penaltycode.services.ts",
            "line": 11,
            "description": "Class contains all services related to PenaltyCode"
        },
        "PrefixformComponent": {
            "name": "PrefixformComponent",
            "shortname": "PrefixformComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/prefix/prefixform/prefixform.component.ts",
            "line": 12,
            "description": "This component contains all function that are used in PrefixformComponent for create and update prefix"
        },
        "PrefixComponent": {
            "name": "PrefixComponent",
            "shortname": "PrefixComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/prefix/prefix.component.ts",
            "line": 17,
            "description": "PrefixComponent class contains all function that are used in Prefix"
        },
        "Prefix": {
            "name": "Prefix",
            "shortname": "Prefix",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/prefix/prefix.ts",
            "line": 1,
            "description": "This class is used as a Prefix model"
        },
        "PrimaryStructuralSystemsForm": {
            "name": "PrimaryStructuralSystemsForm",
            "shortname": "PrimaryStructuralSystemsForm",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/primarystructuralsystems/primarystructuralsystemsform/primarystructuralsystemsform.component.ts",
            "line": 12,
            "description": "This component contains all function that are used in PrimaryStructuralSystemsForm"
        },
        "PrimaryStructuralSystemsComponent": {
            "name": "PrimaryStructuralSystemsComponent",
            "shortname": "PrimaryStructuralSystemsComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/primarystructuralsystems/primarystructuralsystems.component.ts",
            "line": 13,
            "description": "This component contains all function that are used in PrimaryStructuralSystemsComponent"
        },
        "PrimaryStructuralSystemsServices": {
            "name": "PrimaryStructuralSystemsServices",
            "shortname": "PrimaryStructuralSystemsServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/services/PrimaryStructuralSystems.services.ts",
            "line": 8,
            "description": "Class contains all services related to Primary Structural Systems"
        },
        "PrimaryStructuralSystems": {
            "name": "PrimaryStructuralSystems",
            "shortname": "PrimaryStructuralSystems",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/primarystructuralsystems/primarystructuralsystems.ts",
            "line": 1,
            "description": "This class is used as a PrimaryStructuralSystems model"
        },
        "ProgressionNoteComponent": {
            "name": "ProgressionNoteComponent",
            "shortname": "ProgressionNoteComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/progressionnote/addprogressionnote.component.ts",
            "line": 13,
            "description": "This component contains all function that are used in ProgressionNoteComponent"
        },
        "FormDocumentComponent": {
            "name": "FormDocumentComponent",
            "shortname": "FormDocumentComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/reference/document/formDocument/formDocument.component.ts",
            "line": 9,
            "description": "This component contains all function that are used in FormDocumentComponent"
        },
        "DocumentComponent": {
            "name": "DocumentComponent",
            "shortname": "DocumentComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/reference/document/document.component.ts",
            "line": 21,
            "description": "This component contains all function that are used in DocumentComponent"
        },
        "DocumentServices": {
            "name": "DocumentServices",
            "shortname": "DocumentServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/reference/document/document.services.ts",
            "line": 8,
            "description": "This component contains all services related to Document"
        },
        "ReminderComponent": {
            "name": "ReminderComponent",
            "shortname": "ReminderComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/reminder/addreminder.component.ts",
            "line": 12,
            "description": "This component contains all function that are used in ReminderComponent"
        },
        "EmailHistoryComponent": {
            "name": "EmailHistoryComponent",
            "shortname": "EmailHistoryComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/rfp/emailHistory/emailHistory.component.ts",
            "line": 9,
            "description": "This component contains all function that are used in EmailHistoryComponent"
        },
        "SendEmailComponent": {
            "name": "SendEmailComponent",
            "shortname": "SendEmailComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/rfp/sendEmail/sendEmail.component.ts",
            "line": 24,
            "description": "This component contains all function that are used in SendEmailComponent"
        },
        "RfpComponent": {
            "name": "RfpComponent",
            "shortname": "RfpComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/rfp/rfp.component.ts",
            "line": 18,
            "description": "This component contains all function that are used in RfpComponent"
        },
        "RfpListService": {
            "name": "RfpListService",
            "shortname": "RfpListService",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/rfp/rfp.services.ts",
            "line": 9,
            "description": "This component contains include all services related to RFP Listing"
        },
        "AddRfpProgressionNoteComponent": {
            "name": "AddRfpProgressionNoteComponent",
            "shortname": "AddRfpProgressionNoteComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/rfpprogressionnote/addrfpprogressionnote.component.ts",
            "line": 11,
            "description": "This component contains all function that are used in AddRfpProgressionNoteComponent"
        },
        "AddRfpProgressionNoteServices": {
            "name": "AddRfpProgressionNoteServices",
            "shortname": "AddRfpProgressionNoteServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/rfpprogressionnote/addrfpprogressionnote.services.ts",
            "line": 9,
            "description": "This component contains include all services related to Progression Note"
        },
        "FormRfpSubJobType": {
            "name": "FormRfpSubJobType",
            "shortname": "FormRfpSubJobType",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/rfpsubjobtype/formRfpSubJobType/formRfpSubJobType.component.ts",
            "line": 15,
            "description": "This component contains all function that are used in FormRfpSubJobType"
        },
        "RfpSubJobTypeComponent": {
            "name": "RfpSubJobTypeComponent",
            "shortname": "RfpSubJobTypeComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/rfpsubjobtype/rfpsubjobtype.component.ts",
            "line": 19,
            "description": "This component contains all function that are used in RfpSubJobTypeComponent"
        },
        "RfpSubJobTypeServices": {
            "name": "RfpSubJobTypeServices",
            "shortname": "RfpSubJobTypeServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/rfpsubjobtype/rfpsubjobtype.services.ts",
            "line": 12,
            "description": "Class contains all services related to RfpSubJobTypeServices"
        },
        "RfpSubJobType": {
            "name": "RfpSubJobType",
            "shortname": "RfpSubJobType",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/rfpsubjobtype/rfpsubjobtype.ts",
            "line": 1,
            "description": "This class is used as a RfpSubJobType model",
            "is_constructor": 1
        },
        "SeismicDesignCategoriesForm": {
            "name": "SeismicDesignCategoriesForm",
            "shortname": "SeismicDesignCategoriesForm",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/seismicdesigncategories/seismicdesigncategoriesform/seismicdesigncategoriesform.component.ts",
            "line": 12,
            "description": "This component contains all function that are used in SeismicDesignCategoriesForm"
        },
        "SeismicDesignCategoriesComponent": {
            "name": "SeismicDesignCategoriesComponent",
            "shortname": "SeismicDesignCategoriesComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/seismicdesigncategories/seismicdesigncategories.component.ts",
            "line": 13,
            "description": "This component contains all function that are used in SeismicDesignCategoriesComponent"
        },
        "SeismicDesignCategoriesServices": {
            "name": "SeismicDesignCategoriesServices",
            "shortname": "SeismicDesignCategoriesServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/seismicdesigncategories/seismicdesigncategories.services.ts",
            "line": 10,
            "description": "Class contains all services related to SeismicDesignCategoriesServices"
        },
        "SeismicDesignCategories": {
            "name": "SeismicDesignCategories",
            "shortname": "SeismicDesignCategories",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/seismicdesigncategories/seismicdesigncategories.ts",
            "line": 1,
            "description": "This class is used as a SeismicDesignCategories model"
        },
        "SentviaformComponent": {
            "name": "SentviaformComponent",
            "shortname": "SentviaformComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/sentvia/sentviaform/sentviaform.component.ts",
            "line": 12,
            "description": "This component contains all function that are used in SentviaformComponent"
        },
        "SentviaComponent": {
            "name": "SentviaComponent",
            "shortname": "SentviaComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/sentvia/sentvia.component.ts",
            "line": 13,
            "description": "This component contains all function that are used in SentviaComponent"
        },
        "SentviaServices": {
            "name": "SentviaServices",
            "shortname": "SentviaServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/sentvia/sentvia.services.ts",
            "line": 9,
            "description": "Class contains all services related to SentviaServices"
        },
        "Sentvia": {
            "name": "Sentvia",
            "shortname": "Sentvia",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/sentvia/sentvia.ts",
            "line": 1,
            "description": "This class is used as a Sentvia model"
        },
        "StatesForm": {
            "name": "StatesForm",
            "shortname": "StatesForm",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/states/statesform/statesform.component.ts",
            "line": 18,
            "description": "This component contains all function that are used in StatesForm"
        },
        "StatesComponent": {
            "name": "StatesComponent",
            "shortname": "StatesComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/states/states.component.ts",
            "line": 15,
            "description": "This component contains all function that are used in StatesComponent"
        },
        "StatesServices": {
            "name": "StatesServices",
            "shortname": "StatesServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/states/states.services.ts",
            "line": 10,
            "description": "Class contains all services related to StatesServices"
        },
        "class": {
            "name": "class",
            "shortname": "class",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/types/employee.ts",
            "line": 11,
            "description": "This class is used as a AgentCertificate model",
            "is_constructor": 1
        },
        "StructureOccupancyCategoriesForm": {
            "name": "StructureOccupancyCategoriesForm",
            "shortname": "StructureOccupancyCategoriesForm",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/structureoccupancycategories/structureoccupancycategoriesform/structureoccupancycategoriesform.component.ts",
            "line": 12,
            "description": "This component contains all function that are used in StructureOccupancyCategoriesForm"
        },
        "StructureOccupancyCategoriesComponent": {
            "name": "StructureOccupancyCategoriesComponent",
            "shortname": "StructureOccupancyCategoriesComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/structureoccupancycategories/structureoccupancycategories.component.ts",
            "line": 13,
            "description": "This component contains all function that are used in StructureOccupancyCategoriesComponent"
        },
        "StructureOccupancyCategoriesServices": {
            "name": "StructureOccupancyCategoriesServices",
            "shortname": "StructureOccupancyCategoriesServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/structureoccupancycategories/structureoccupancycategories.services.ts",
            "line": 10,
            "description": "Class contains all services related to StructureOccupancyCategoriesServices"
        },
        "StructureOccupancyCategories": {
            "name": "StructureOccupancyCategories",
            "shortname": "StructureOccupancyCategories",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/structureoccupancycategories/structureoccupancycategories.ts",
            "line": 1,
            "description": "This class is used as a StructureOccupancyCategories model"
        },
        "FormSubJobTypeCategory": {
            "name": "FormSubJobTypeCategory",
            "shortname": "FormSubJobTypeCategory",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/subjobtypecategory/formSubJobTypeCategory/formSubJobTypeCategory.component.ts",
            "line": 16,
            "description": "This component contains all function that are used in FormSubJobTypeCategory"
        },
        "SubJobTypeCategoryComponent": {
            "name": "SubJobTypeCategoryComponent",
            "shortname": "SubJobTypeCategoryComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/subjobtypecategory/subjobtypecategory.component.ts",
            "line": 17,
            "description": "This component contains all function that are used in SubJobTypeCategoryComponent"
        },
        "SubJobTypeCategoryServices": {
            "name": "SubJobTypeCategoryServices",
            "shortname": "SubJobTypeCategoryServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/subjobtypecategory/subjobtypecategory.services.ts",
            "line": 10,
            "description": "This component contains all function that are used in SubJobTypeCategoryServices"
        },
        "SubJobTypeCategoryDTO": {
            "name": "SubJobTypeCategoryDTO",
            "shortname": "SubJobTypeCategoryDTO",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/subjobtypecategory/subjobtypecategory.ts",
            "line": 1,
            "description": "This class is used as a SubJobTypeCategoryDTO model",
            "is_constructor": 1
        },
        "SuffixformComponent": {
            "name": "SuffixformComponent",
            "shortname": "SuffixformComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/suffix/suffixform/suffixform.component.ts",
            "line": 12,
            "description": "This component contains all function that are used in SuffixformComponent"
        },
        "SuffixComponent": {
            "name": "SuffixComponent",
            "shortname": "SuffixComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/suffix/suffix.component.ts",
            "line": 16,
            "description": "This component contains all function that are used in SuffixComponent"
        },
        "Suffix": {
            "name": "Suffix",
            "shortname": "Suffix",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/suffix/suffix.ts",
            "line": 2,
            "description": "This class is used as a Suffix model"
        },
        "SettingType": {
            "name": "SettingType",
            "shortname": "SettingType",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/systemSettings/formOfSetting/systemsettingsForm.component.ts",
            "line": 15,
            "description": "This component contains all function that are used in SettingType"
        },
        "SystemSettingsComponent": {
            "name": "SystemSettingsComponent",
            "shortname": "SystemSettingsComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/systemSettings/systemsettings.component.ts",
            "line": 18,
            "description": "This component contains all function that are used in SystemSettingsComponent"
        },
        "SystemSettingsServices": {
            "name": "SystemSettingsServices",
            "shortname": "SystemSettingsServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/systemSettings/systemsettings.services.ts",
            "line": 10,
            "description": "Class contains all services related to SystemSettingsServices"
        },
        "TaskFilterComponent": {
            "name": "TaskFilterComponent",
            "shortname": "TaskFilterComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/task/taskfilter/taskfilter.component.ts",
            "line": 14,
            "description": "This component contains all function that are used in TaskFilterComponent"
        },
        "TaskComponent": {
            "name": "TaskComponent",
            "shortname": "TaskComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/task/task.component.ts",
            "line": 22,
            "description": "This component contains all function that are used in TaskComponent"
        },
        "TaskServices": {
            "name": "TaskServices",
            "shortname": "TaskServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/task/task.services.ts",
            "line": 10,
            "description": "Class contains all services related to Task"
        },
        "TaskTypeForm": {
            "name": "TaskTypeForm",
            "shortname": "TaskTypeForm",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/taskType/taskTypeForm/taskTypeForm.component.ts",
            "line": 11,
            "description": "This component contains all function that are used in TaskTypeForm"
        },
        "TaskTypeComponent": {
            "name": "TaskTypeComponent",
            "shortname": "TaskTypeComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/taskType/taskType.component.ts",
            "line": 13,
            "description": "This component contains all function that are used in TaskTypeComponent"
        },
        "TaskTypeServices": {
            "name": "TaskTypeServices",
            "shortname": "TaskTypeServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/taskType/taskType.services.ts",
            "line": 10,
            "description": "Class contains all services related to TaskTypeServices"
        },
        "TaskType": {
            "name": "TaskType",
            "shortname": "TaskType",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/taskType/taskType.ts",
            "line": 1,
            "description": "This class is used as a TaskType model"
        },
        "UserGroupComponent": {
            "name": "UserGroupComponent",
            "shortname": "UserGroupComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/userGroup/userGroup.component.ts",
            "line": 16,
            "description": "This component contains all function that are used in UserGroupComponent"
        },
        "UserGroup": {
            "name": "UserGroup",
            "shortname": "UserGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/userGroup/userGroup.ts",
            "line": 1,
            "description": "This class is used as a UserGroup model",
            "is_constructor": 1
        },
        "ModuleName": {
            "name": "ModuleName",
            "shortname": "ModuleName",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/userGroup/userGroup.ts",
            "line": 16,
            "description": "This class is used as a ModuleName model",
            "is_constructor": 1
        },
        "Groups": {
            "name": "Groups",
            "shortname": "Groups",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/userGroup/userGroup.ts",
            "line": 26,
            "description": "This class is used as a Groups model",
            "is_constructor": 1
        },
        "Permissions": {
            "name": "Permissions",
            "shortname": "Permissions",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/userGroup/userGroup.ts",
            "line": 36,
            "description": "This class is used as a Permissions model",
            "is_constructor": 1
        },
        "Verbiage": {
            "name": "Verbiage",
            "shortname": "Verbiage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/verbiages/verbiage.ts",
            "line": 1,
            "description": "This class is used as a Verbiage model",
            "is_constructor": 1
        },
        "VerbiagesComponent": {
            "name": "VerbiagesComponent",
            "shortname": "VerbiagesComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/verbiages/verbiages.component.ts",
            "line": 15,
            "description": "This component contains all function that are used in VerbiagesComponent"
        },
        "VerbiagesServices": {
            "name": "VerbiagesServices",
            "shortname": "VerbiagesServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/verbiages/verbiages.services.ts",
            "line": 9,
            "description": "Class contains all services related to VerbiagesServices"
        },
        "ViewAddressComponent": {
            "name": "ViewAddressComponent",
            "shortname": "ViewAddressComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/viewAddress/viewAddress.component.ts",
            "line": 10,
            "description": "This component contains all function that are used in ViewAddressComponent"
        },
        "ViewAddressServices": {
            "name": "ViewAddressServices",
            "shortname": "ViewAddressServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/viewAddress/viewAddress.services.ts",
            "line": 10,
            "description": "This component contains include all services related to ViewAddressServices"
        },
        "ViewTaskComponent": {
            "name": "ViewTaskComponent",
            "shortname": "ViewTaskComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/viewtask/viewtask.component.ts",
            "line": 18,
            "description": "This component contains all function that are used in ViewTaskComponent"
        },
        "FormWorkType": {
            "name": "FormWorkType",
            "shortname": "FormWorkType",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/worktype/formWorkType/formWorkType.component.ts",
            "line": 17,
            "description": "This component contains all function that are used in FormWorkType"
        },
        "WorkTypeComponent": {
            "name": "WorkTypeComponent",
            "shortname": "WorkTypeComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/worktype/workType.component.ts",
            "line": 17,
            "description": "This component contains all function that are used in WorkTypeComponent"
        },
        "WorkTypeServices": {
            "name": "WorkTypeServices",
            "shortname": "WorkTypeServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/worktype/workType.services.ts",
            "line": 11,
            "description": "Class contains all services related to WorkTypeServices"
        },
        "WorkTypeDTO": {
            "name": "WorkTypeDTO",
            "shortname": "WorkTypeDTO",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/worktype/workType.ts",
            "line": 1,
            "description": "This class is used as a WorkTypeDTO model",
            "is_constructor": 1
        },
        "RfpJobTypeCostRanges": {
            "name": "RfpJobTypeCostRanges",
            "shortname": "RfpJobTypeCostRanges",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/worktype/workType.ts",
            "line": 36,
            "description": "This class is used as a RfpJobTypeCostRanges model",
            "is_constructor": 1
        },
        "RfpJobTypeCumulativeCosts": {
            "name": "RfpJobTypeCumulativeCosts",
            "shortname": "RfpJobTypeCumulativeCosts",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/worktype/workType.ts",
            "line": 49,
            "description": "This class is used as a RfpJobTypeCumulativeCosts model",
            "is_constructor": 1
        },
        "FormWorkTypeCategory": {
            "name": "FormWorkTypeCategory",
            "shortname": "FormWorkTypeCategory",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/worktypecategory/formWorkTypeCategory/formWorkTypeCategory.component.ts",
            "line": 17,
            "description": "This component contains all function that are used in FormWorkTypeCategory"
        },
        "WorkTypeCategoryComponent": {
            "name": "WorkTypeCategoryComponent",
            "shortname": "WorkTypeCategoryComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/worktypecategory/worktypecategory.component.ts",
            "line": 16,
            "description": "This component contains all function that are used in WorkTypeCategoryComponent"
        },
        "WorkTypeCategoryServices": {
            "name": "WorkTypeCategoryServices",
            "shortname": "WorkTypeCategoryServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/worktypecategory/worktypecategory.services.ts",
            "line": 10,
            "description": "Class contains all services related to WorkTypeCategoryServices"
        },
        "WorkTypeCategory": {
            "name": "WorkTypeCategory",
            "shortname": "WorkTypeCategory",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/route/worktypecategory/worktypecategory.ts",
            "line": 1,
            "description": "This class is used as a WorkTypeCategory model",
            "is_constructor": 1
        },
        "ConstClasificationsServices": {
            "name": "ConstClasificationsServices",
            "shortname": "ConstClasificationsServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/services/contactLicenseType.services.ts",
            "line": 8,
            "description": "Class contains all services related to ConstClasificationsServices"
        },
        "AddressTypeServices": {
            "name": "AddressTypeServices",
            "shortname": "AddressTypeServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/services/addressType.services.ts",
            "line": 8,
            "description": "Class contains all services related to AddressTypeServices"
        },
        "BoroughServices": {
            "name": "BoroughServices",
            "shortname": "BoroughServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/services/borough.services.ts",
            "line": 8,
            "description": "Class contains all services related to BoroughServices"
        },
        "CityServices": {
            "name": "CityServices",
            "shortname": "CityServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/services/city.services.ts",
            "line": 8,
            "description": "Class contains all services related to CityServices"
        },
        "ContactTitleServices": {
            "name": "ContactTitleServices",
            "shortname": "ContactTitleServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/services/contactTitle.services.ts",
            "line": 9,
            "description": "Class contains all services related to ContactTitleServices"
        },
        "ContactTypeServices": {
            "name": "ContactTypeServices",
            "shortname": "ContactTypeServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/services/contactType.services.ts",
            "line": 7,
            "description": "Class contains all services related to ContactTypeServices"
        },
        "DocumentTypeServices": {
            "name": "DocumentTypeServices",
            "shortname": "DocumentTypeServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/services/documentType.Services.ts",
            "line": 8,
            "description": "Class contains all services related to DocumentTypeServices"
        },
        "GlobalSearchServices": {
            "name": "GlobalSearchServices",
            "shortname": "GlobalSearchServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/services/globalSearch.services.ts",
            "line": 9,
            "description": "Class contains all services related to GlobalSearchServices"
        },
        "GroupServices": {
            "name": "GroupServices",
            "shortname": "GroupServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/services/group.services.ts",
            "line": 8,
            "description": "Class contains all services related to GroupServices"
        },
        "PrefixServices": {
            "name": "PrefixServices",
            "shortname": "PrefixServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/services/prefix.services.ts",
            "line": 10,
            "description": "PrefixServices class contains all services related to prefix"
        },
        "StateServices": {
            "name": "StateServices",
            "shortname": "StateServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/services/state.services.ts",
            "line": 8,
            "description": "Class contains all services related to State"
        },
        "SuffixServices": {
            "name": "SuffixServices",
            "shortname": "SuffixServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/services/suffix.services.ts",
            "line": 11,
            "description": "Class contains all services related to SuffixServices"
        },
        "UserServices": {
            "name": "UserServices",
            "shortname": "UserServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/services/user.services.ts",
            "line": 8,
            "description": "Class contains all services related to User"
        },
        "UserRightServices": {
            "name": "UserRightServices",
            "shortname": "UserRightServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/services/userRight.services.ts",
            "line": 10,
            "description": "This component contains all function that are used in UserRightServices"
        },
        "AddressType": {
            "name": "AddressType",
            "shortname": "AddressType",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/types/addresstype.ts",
            "line": 1,
            "description": "This class is used as a AddressType model"
        },
        "AddressTypeDTO": {
            "name": "AddressTypeDTO",
            "shortname": "AddressTypeDTO",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/types/addresstype.ts",
            "line": 17,
            "description": "This class is used as a data table model"
        },
        "ContactTitle": {
            "name": "ContactTitle",
            "shortname": "ContactTitle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/types/contactTitle.ts",
            "line": 1,
            "description": "This class is used as a ContactTitle model"
        },
        "ContactTitleDTO": {
            "name": "ContactTitleDTO",
            "shortname": "ContactTitleDTO",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/types/contactTitle.ts",
            "line": 16,
            "description": "This class is used as a data-table model"
        },
        "DocumentType": {
            "name": "DocumentType",
            "shortname": "DocumentType",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/types/employee.ts",
            "line": 1,
            "description": "This class is used as a DocumentType model for uploading documents",
            "is_constructor": 1
        },
        "EmployeeDocument": {
            "name": "EmployeeDocument",
            "shortname": "EmployeeDocument",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/types/employee.ts",
            "line": 25,
            "description": "This class is used as a EmployeeDocument model",
            "is_constructor": 1
        },
        "Employee": {
            "name": "Employee",
            "shortname": "Employee",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/types/employee.ts",
            "line": 36,
            "description": "This class is used as a Employee model",
            "is_constructor": 1
        },
        "EmployeeGrants": {
            "name": "EmployeeGrants",
            "shortname": "EmployeeGrants",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/types/employee.ts",
            "line": 87,
            "description": "This class is used as a EmployeeGrants model",
            "is_constructor": 1
        },
        "jobDTO": {
            "name": "jobDTO",
            "shortname": "jobDTO",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/types/job.ts",
            "line": 10,
            "description": "This class is used as a jobDTO model for datatable",
            "is_constructor": 1
        },
        "Job": {
            "name": "Job",
            "shortname": "Job",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/types/job.ts",
            "line": 52,
            "description": "This class is used as a Job model",
            "is_constructor": 1
        },
        "JobMilestones": {
            "name": "JobMilestones",
            "shortname": "JobMilestones",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/types/job.ts",
            "line": 117,
            "description": "This class is used as a JobMilestones model for JOB",
            "is_constructor": 1
        },
        "Milestone": {
            "name": "Milestone",
            "shortname": "Milestone",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/types/job.ts",
            "line": 128,
            "description": "This class is used as a Milestone model",
            "is_constructor": 1
        },
        "jobMilestoneServices": {
            "name": "jobMilestoneServices",
            "shortname": "jobMilestoneServices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/types/job.ts",
            "line": 151,
            "description": "This class is used as a jobMilestoneServices model",
            "is_constructor": 1
        },
        "JobScope": {
            "name": "JobScope",
            "shortname": "JobScope",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/types/job.ts",
            "line": 164,
            "description": "This class is used as a JobScope model",
            "is_constructor": 1
        },
        "scope": {
            "name": "scope",
            "shortname": "scope",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/types/job.ts",
            "line": 177,
            "description": "This class is used as a scope model",
            "is_constructor": 1
        },
        "teamMember": {
            "name": "teamMember",
            "shortname": "teamMember",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/types/job.ts",
            "line": 221,
            "description": "This class is used as a teamMember model",
            "is_constructor": 1
        },
        "jobContactType": {
            "name": "jobContactType",
            "shortname": "jobContactType",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/types/job.ts",
            "line": 273,
            "description": "This class is used as a jobContactType model",
            "is_constructor": 1
        },
        "jobApplication": {
            "name": "jobApplication",
            "shortname": "jobApplication",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/types/job.ts",
            "line": 283,
            "description": "This class is used as a jobApplication model",
            "is_constructor": 1
        },
        "unitType": {
            "name": "unitType",
            "shortname": "unitType",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/types/job.ts",
            "line": 293,
            "description": "This class is used as a unitType model",
            "is_constructor": 1
        },
        "ProjectDetails": {
            "name": "ProjectDetails",
            "shortname": "ProjectDetails",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/types/projectDetails.ts",
            "line": 3,
            "description": "This class is used as a ProjectDetails model",
            "is_constructor": 1
        },
        "WorkTypeNotes": {
            "name": "WorkTypeNotes",
            "shortname": "WorkTypeNotes",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/types/projectDetails.ts",
            "line": 23,
            "description": "This class is used as a WorkTypeNotes model",
            "is_constructor": 1
        },
        "proposalReview": {
            "name": "proposalReview",
            "shortname": "proposalReview",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/types/proposalReview.ts",
            "line": 1,
            "description": "This class is used as a proposalReview model",
            "is_constructor": 1
        },
        "proposalReviewSections": {
            "name": "proposalReviewSections",
            "shortname": "proposalReviewSections",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/types/proposalReview.ts",
            "line": 15,
            "description": "This class is used as a proposalReviewSections model",
            "is_constructor": 1
        },
        "RfpProposalReviewList": {
            "name": "RfpProposalReviewList",
            "shortname": "RfpProposalReviewList",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/types/proposalReview.ts",
            "line": 27,
            "description": "This class is used as a RfpProposalReviewList model",
            "is_constructor": 1
        },
        "Milestones": {
            "name": "Milestones",
            "shortname": "Milestones",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/types/proposalReview.ts",
            "line": 41,
            "description": "This class is used as a Milestones model",
            "is_constructor": 1
        },
        "milestoneServiceList": {
            "name": "milestoneServiceList",
            "shortname": "milestoneServiceList",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/types/proposalReview.ts",
            "line": 54,
            "description": "This class is used as a milestoneServiceList model",
            "is_constructor": 1
        },
        "ScopeReview": {
            "name": "ScopeReview",
            "shortname": "ScopeReview",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/types/scopereview.ts",
            "line": 3,
            "description": "This class is used as a ScopeReview model",
            "is_constructor": 1
        },
        "SystemField": {
            "name": "SystemField",
            "shortname": "SystemField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/types/systemsettings.ts",
            "line": 1,
            "description": "This class is used as a SystemField model"
        },
        "Verbiages": {
            "name": "Verbiages",
            "shortname": "Verbiages",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/app/types/verbiages.ts",
            "line": 1,
            "description": "This class is used as a Verbiages model",
            "is_constructor": 1
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "src/app/route/addRfp/projectDetails/projectDetails.component.ts",
            "line": 39,
            "description": "It will open popup to add RFP progression",
            "itemtype": "property",
            "name": "rfpprogressionnote",
            "class": "projectDetailsComponent"
        },
        {
            "file": "src/app/route/addRfp/projectDetails/projectDetails.component.ts",
            "line": 96,
            "description": "This method define all services that requires in whole class",
            "itemtype": "method",
            "name": "constructor",
            "class": "projectDetailsComponent"
        },
        {
            "file": "src/app/route/addRfp/projectDetails/projectDetails.component.ts",
            "line": 119,
            "description": "This method will check any element in form changed or not",
            "itemtype": "method",
            "name": "isFieldValChange",
            "class": "projectDetailsComponent"
        },
        {
            "file": "src/app/route/addRfp/projectDetails/projectDetails.component.ts",
            "line": 129,
            "description": "This method will call when step 1 form loads first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "projectDetailsComponent"
        },
        {
            "file": "src/app/route/addRfp/projectDetails/projectDetails.component.ts",
            "line": 152,
            "description": "This method get rfp detail",
            "itemtype": "method",
            "name": "getRfpDetail",
            "class": "projectDetailsComponent"
        },
        {
            "file": "src/app/route/addRfp/projectDetails/projectDetails.component.ts",
            "line": 166,
            "description": "This method get RFP creator detail",
            "itemtype": "method",
            "name": "getRFPCreatorDetail",
            "params": [
                {
                    "name": "rfpDetail",
                    "description": "request Object",
                    "type": "Object"
                }
            ],
            "class": "projectDetailsComponent"
        },
        {
            "file": "src/app/route/addRfp/projectDetails/projectDetails.component.ts",
            "line": 200,
            "description": "This method get saved RFP detail from database",
            "itemtype": "method",
            "name": "setRfpProjectDetail",
            "class": "projectDetailsComponent"
        },
        {
            "file": "src/app/route/addRfp/projectDetails/projectDetails.component.ts",
            "line": 420,
            "description": "This method gets header status and set class name of progress bar",
            "itemtype": "method",
            "name": "getHeaderStatus",
            "class": "projectDetailsComponent"
        },
        {
            "file": "src/app/route/addRfp/projectDetails/projectDetails.component.ts",
            "line": 439,
            "description": "This method gets job types list",
            "itemtype": "method",
            "name": "getJobTypes",
            "class": "projectDetailsComponent"
        },
        {
            "file": "src/app/route/addRfp/projectDetails/projectDetails.component.ts",
            "line": 452,
            "description": "This method create RFP address record in database",
            "itemtype": "method",
            "name": "methodName",
            "params": [
                {
                    "name": "data",
                    "description": "request Object",
                    "type": "RfpAddress"
                }
            ],
            "class": "projectDetailsComponent"
        },
        {
            "file": "src/app/route/addRfp/projectDetails/projectDetails.component.ts",
            "line": 463,
            "description": "This method will add new job section while click on Add new Job button",
            "itemtype": "method",
            "name": "addJobType",
            "class": "projectDetailsComponent"
        },
        {
            "file": "src/app/route/addRfp/projectDetails/projectDetails.component.ts",
            "line": 532,
            "description": "This method set job sub types",
            "itemtype": "method",
            "name": "setJobSubType",
            "params": [
                {
                    "name": "idSubTypeCat",
                    "description": "ID of SubType Category",
                    "type": "Number"
                },
                {
                    "name": "item",
                    "description": "current row",
                    "type": "Any"
                }
            ],
            "class": "projectDetailsComponent"
        },
        {
            "file": "src/app/route/addRfp/projectDetails/projectDetails.component.ts",
            "line": 593,
            "description": "This method will set work types",
            "itemtype": "method",
            "name": "setWorkTypes",
            "params": [
                {
                    "name": "idSubType",
                    "description": "ID of SubType",
                    "type": "Number"
                },
                {
                    "name": "item",
                    "description": "current row",
                    "type": "Any"
                }
            ],
            "class": "projectDetailsComponent"
        },
        {
            "file": "src/app/route/addRfp/projectDetails/projectDetails.component.ts",
            "line": 644,
            "description": "This method will save project detail",
            "itemtype": "method",
            "name": "saveProjectDetail",
            "params": [
                {
                    "name": "isSaveAndExit",
                    "description": "save&exist button is pressed or not",
                    "type": "Boolean"
                }
            ],
            "class": "projectDetailsComponent"
        },
        {
            "file": "src/app/route/addRfp/projectDetails/projectDetails.component.ts",
            "line": 728,
            "description": "This method will remove project detail item",
            "itemtype": "method",
            "name": "removeProjectDetail",
            "params": [
                {
                    "name": "idJobType",
                    "description": "ID of job type",
                    "type": "Number"
                },
                {
                    "name": "itemId",
                    "description": "ID of current row",
                    "type": "Number"
                },
                {
                    "name": "index",
                    "description": "Index of current row",
                    "type": "Number"
                }
            ],
            "class": "projectDetailsComponent"
        },
        {
            "file": "src/app/route/addRfp/projectDetails/projectDetails.component.ts",
            "line": 743,
            "description": "This method check given data is number or not",
            "itemtype": "method",
            "name": "isNumber",
            "params": [
                {
                    "name": "evt",
                    "description": "event object",
                    "type": "Any"
                }
            ],
            "class": "projectDetailsComponent"
        },
        {
            "file": "src/app/route/addRfp/projectDetails/projectDetails.component.ts",
            "line": 757,
            "description": "This method check given data is decimal or not",
            "itemtype": "method",
            "name": "isDecimal",
            "params": [
                {
                    "name": "evt",
                    "description": "event object",
                    "type": "Any"
                }
            ],
            "class": "projectDetailsComponent"
        },
        {
            "file": "src/app/route/addRfp/projectDetails/projectDetails.component.ts",
            "line": 777,
            "description": "This method open add general note popup",
            "itemtype": "method",
            "name": "addGeneralNote",
            "class": "projectDetailsComponent"
        },
        {
            "file": "src/app/route/addRfp/projectDetails/projectDetails.component.ts",
            "line": 785,
            "description": "This method is used to open modal popup for add general note",
            "itemtype": "method",
            "name": "openModalSendEmail",
            "params": [
                {
                    "name": "template",
                    "description": "contains template of add general note",
                    "type": "TemplateRef"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                }
            ],
            "class": "projectDetailsComponent"
        },
        {
            "file": "src/app/route/addRfp/projectDetails/projectDetails.services.ts",
            "line": 21,
            "description": "This method is used for getting params from header",
            "is_constructor": 1,
            "params": [
                {
                    "name": "http",
                    "description": "",
                    "type": "HttpClient"
                },
                {
                    "name": "route",
                    "description": "",
                    "type": "ActivatedRoute"
                }
            ],
            "class": "ProjectDetailsServices"
        },
        {
            "file": "src/app/route/addRfp/projectDetails/projectDetails.services.ts",
            "line": 37,
            "description": "This method is used to create a new project detail record in database",
            "itemtype": "method",
            "name": "addProjectdetail",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                },
                {
                    "name": "idRfp",
                    "description": "idRfp is the id of RFP",
                    "type": "Number"
                }
            ],
            "class": "ProjectDetailsServices"
        },
        {
            "file": "src/app/route/addRfp/projectDetails/projectDetails.services.ts",
            "line": 53,
            "description": "This method is used to get project details data",
            "itemtype": "method",
            "name": "chkProjectdetail",
            "params": [
                {
                    "name": "idRfp",
                    "description": "idRfp is the id of RFP",
                    "type": "Number"
                }
            ],
            "class": "ProjectDetailsServices"
        },
        {
            "file": "src/app/route/addRfp/projectDetails/projectDetails.services.ts",
            "line": 62,
            "description": "This method is used to get existing info project details data",
            "itemtype": "method",
            "name": "getSavedProjectDetail",
            "params": [
                {
                    "name": "idRfp",
                    "description": "idRfp is the id of RFP",
                    "type": "Number"
                }
            ],
            "class": "ProjectDetailsServices"
        },
        {
            "file": "src/app/route/addRfp/projectDetails/projectDetails.services.ts",
            "line": 71,
            "description": "This method is used to get existing info project details with specific service data",
            "itemtype": "method",
            "name": "getProjectdetail",
            "params": [
                {
                    "name": "idRfp",
                    "description": "idRfp is the id of RFP",
                    "type": "Number"
                },
                {
                    "name": "idProjectDetail",
                    "description": "id of project detail",
                    "type": "Number"
                }
            ],
            "class": "ProjectDetailsServices"
        },
        {
            "file": "src/app/route/addRfp/projectDetails/projectDetails.services.ts",
            "line": 81,
            "description": "This method is used to delete specific service records of project details from database",
            "itemtype": "method",
            "name": "deleteProjectDetail",
            "params": [
                {
                    "name": "idRfp",
                    "description": "idRfp is the id of RFP",
                    "type": "Number"
                },
                {
                    "name": "idProjectDetail",
                    "description": "id of project detail",
                    "type": "Number"
                }
            ],
            "class": "ProjectDetailsServices"
        },
        {
            "file": "src/app/route/addRfp/proposalReview/review/review.component.ts",
            "line": 51,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "ReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/proposalReview/review/review.component.ts",
            "line": 88,
            "description": "Get selected item from dropdown, it will also increase count on selecting review",
            "itemtype": "method",
            "name": "onItemSelect",
            "class": "ReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/proposalReview/review/review.component.ts",
            "line": 95,
            "description": "Deselect item from dropdown, it will also decrease count on deselecting review",
            "itemtype": "method",
            "name": "OnItemDeSelect",
            "class": "ReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/proposalReview/review/review.component.ts",
            "line": 103,
            "description": "This method is used to save reviewer details in database",
            "itemtype": "method",
            "name": "save",
            "class": "ReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/proposalReview/review/review.services.ts",
            "line": 21,
            "description": "This method is used to update reviewers of RFP record in database",
            "itemtype": "method",
            "name": "updateReviewTeam",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                },
                {
                    "name": "idRfp",
                    "description": "id of Reviewers for updating specific RFP record",
                    "type": "Number"
                }
            ],
            "class": "ReviewServices"
        },
        {
            "file": "src/app/route/addRfp/proposalReview/review/review.services.ts",
            "line": 31,
            "description": "This method is used to get list of reviewers for RFP record in database",
            "itemtype": "method",
            "name": "getReviewTeam",
            "params": [
                {
                    "name": "idRfp",
                    "description": "id of specific RFP record for getting reviewers",
                    "type": "Number"
                }
            ],
            "class": "ReviewServices"
        },
        {
            "file": "src/app/route/addRfp/proposalReview/proposalReview.component.ts",
            "line": 37,
            "description": "feeschedule add/edit form",
            "itemtype": "property",
            "name": "feeschedule",
            "class": "proposalReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/proposalReview/proposalReview.component.ts",
            "line": 44,
            "description": "review add/edit form",
            "itemtype": "property",
            "name": "review",
            "class": "proposalReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/proposalReview/proposalReview.component.ts",
            "line": 52,
            "description": "rfpprogressionnote add/edit form",
            "itemtype": "property",
            "name": "rfpprogressionnote",
            "class": "proposalReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/proposalReview/proposalReview.component.ts",
            "line": 59,
            "description": "proposalForm add/edit form",
            "itemtype": "property",
            "name": "proposalForm",
            "class": "proposalReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/proposalReview/proposalReview.component.ts",
            "line": 198,
            "description": "This method is used to check whether value entered is number or not",
            "itemtype": "method",
            "name": "isNumber",
            "params": [
                {
                    "name": "evt",
                    "description": "evt of input",
                    "type": "Any"
                }
            ],
            "class": "proposalReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/proposalReview/proposalReview.component.ts",
            "line": 213,
            "description": "This method is used to get details of specific RFP",
            "itemtype": "method",
            "name": "getRfpDetail",
            "class": "proposalReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/proposalReview/proposalReview.component.ts",
            "line": 228,
            "description": "This method is used to get all verbiages",
            "itemtype": "method",
            "name": "getVerbiageMaster",
            "class": "proposalReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/proposalReview/proposalReview.component.ts",
            "line": 254,
            "description": "This method is used to set introduction on verbiage selection",
            "itemtype": "method",
            "name": "getIntroduction",
            "params": [
                {
                    "name": "e",
                    "description": "e is used as an event",
                    "type": "Any"
                },
                {
                    "name": "option",
                    "description": "option is which contains details of which introduction we need to set",
                    "type": "Any"
                }
            ],
            "class": "proposalReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/proposalReview/proposalReview.component.ts",
            "line": 273,
            "description": "This method is used to set additional scope on verbiage selection",
            "itemtype": "method",
            "name": "getAdditionalScope",
            "params": [
                {
                    "name": "e",
                    "description": "e is used as an event",
                    "type": "Any"
                },
                {
                    "name": "option",
                    "description": "option is which contains details of which additional scope we need to set",
                    "type": "Any"
                }
            ],
            "class": "proposalReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/proposalReview/proposalReview.component.ts",
            "line": 291,
            "description": "This method is used to set conclusion scope on verbiage selection",
            "itemtype": "method",
            "name": "getConclusion",
            "params": [
                {
                    "name": "e",
                    "description": "e is used as an event",
                    "type": "Any"
                },
                {
                    "name": "option",
                    "description": "option is which contains details of which conclusion scope we need to set",
                    "type": "Any"
                }
            ],
            "class": "proposalReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/proposalReview/proposalReview.component.ts",
            "line": 308,
            "description": "This method is used to set conclusion scope on verbiage selection",
            "itemtype": "method",
            "name": "getSign",
            "params": [
                {
                    "name": "e",
                    "description": "e is used as an event",
                    "type": "Any"
                },
                {
                    "name": "option",
                    "description": "option is which contains details of which conclusion scope we need to set",
                    "type": "Any"
                }
            ],
            "class": "proposalReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/proposalReview/proposalReview.component.ts",
            "line": 327,
            "description": "Get all records from verbiage database",
            "itemtype": "method",
            "name": "getVerbiages",
            "class": "proposalReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/proposalReview/proposalReview.component.ts",
            "line": 340,
            "description": "This method is used to display status of rfp",
            "itemtype": "method",
            "name": "getHeaderStatus",
            "params": [
                {
                    "name": "r",
                    "description": "rfpDetail is an object of rfp",
                    "type": "Any"
                }
            ],
            "class": "proposalReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/proposalReview/proposalReview.component.ts",
            "line": 359,
            "description": "This method is used to get specific proposal",
            "itemtype": "method",
            "name": "getProposal",
            "class": "proposalReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/proposalReview/proposalReview.component.ts",
            "line": 426,
            "description": "This method is used for delete particular section",
            "itemtype": "method",
            "name": "deleteSection",
            "params": [
                {
                    "name": "section",
                    "description": "section is which scope we need to delete",
                    "type": "String"
                }
            ],
            "class": "proposalReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/proposalReview/proposalReview.component.ts",
            "line": 445,
            "description": "This method is used for add particular section, this will push a new section in specific array",
            "itemtype": "method",
            "name": "addSection",
            "class": "proposalReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/proposalReview/proposalReview.component.ts",
            "line": 477,
            "description": "This method is used to save record",
            "itemtype": "method",
            "name": "saveProposalReview",
            "params": [
                {
                    "name": "isSaveAndExit",
                    "description": "isSaveAndExit if it is true than navigate to RFP listing, otherwise it will go to next step",
                    "type": "Boolean"
                },
                {
                    "name": "param",
                    "description": "param it is used to indicate that where we need to navigate",
                    "type": "String"
                }
            ],
            "class": "proposalReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/proposalReview/proposalReview.component.ts",
            "line": 562,
            "description": "This method is used for removing milestone",
            "itemtype": "method",
            "name": "removeCostAndMilestone",
            "class": "proposalReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/proposalReview/proposalReview.component.ts",
            "line": 586,
            "description": "This method is used to display rfp create and update details",
            "itemtype": "method",
            "name": "getRFPCreatorDetail",
            "params": [
                {
                    "name": "rfpDetail",
                    "description": "rfpDetail is an object of rfp",
                    "type": "Any"
                }
            ],
            "class": "proposalReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/proposalReview/proposalReview.component.ts",
            "line": 631,
            "description": "This method is used to reset cost to actual fees schedule cost",
            "itemtype": "method",
            "name": "resetCost",
            "class": "proposalReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/proposalReview/proposalReview.component.ts",
            "line": 639,
            "description": "This method is used to add new milestone",
            "itemtype": "method",
            "name": "addNewMileStone",
            "class": "proposalReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/proposalReview/proposalReview.component.ts",
            "line": 662,
            "class": "proposalReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/proposalReview/proposalReview.component.ts",
            "line": 676,
            "description": "This method is used to delete existing  milestone",
            "itemtype": "method",
            "name": "deleteMilestone",
            "params": [
                {
                    "name": "index",
                    "description": "index for which we are deleting milestone",
                    "type": "Number"
                }
            ],
            "class": "proposalReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/proposalReview/proposalReview.component.ts",
            "line": 688,
            "description": "This method is used to calculate renaining cost and set in milestone",
            "itemtype": "method",
            "name": "valueUpdated",
            "params": [
                {
                    "name": "add",
                    "description": "it is optional",
                    "type": "String"
                }
            ],
            "class": "proposalReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/proposalReview/proposalReview.component.ts",
            "line": 708,
            "description": "This method is used to get RFP fee schedule services",
            "itemtype": "method",
            "name": "getServices",
            "class": "proposalReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/proposalReview/proposalReview.component.ts",
            "line": 728,
            "description": "This method is used to submit reviewer, who can review proposal",
            "itemtype": "method",
            "name": "submitForReview",
            "class": "proposalReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/proposalReview/proposalReview.component.ts",
            "line": 736,
            "description": "This method is used to open modal popup for openModalFeeSchedule",
            "itemtype": "method",
            "name": "openModalFeeSchedule",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of fee schedule module",
                    "type": "Any"
                }
            ],
            "class": "proposalReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/proposalReview/proposalReview.component.ts",
            "line": 745,
            "description": "This method is used to open modal popup for openModalReview",
            "itemtype": "method",
            "name": "openModalReview",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of proposal review module",
                    "type": "Any"
                }
            ],
            "class": "proposalReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/proposalReview/proposalReview.component.ts",
            "line": 754,
            "description": "This method is used check any element in form changed or not",
            "itemtype": "method",
            "name": "isFieldValChange",
            "class": "proposalReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/proposalReview/proposalReview.component.ts",
            "line": 776,
            "description": "This method is used to navigate user to RFP listing screen",
            "itemtype": "method",
            "name": "getBack",
            "class": "proposalReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/proposalReview/proposalReview.component.ts",
            "line": 784,
            "description": "This method is used to check user can enter only numeric value",
            "itemtype": "method",
            "name": "onlyNumberKey",
            "class": "proposalReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/proposalReview/proposalReview.component.ts",
            "line": 792,
            "description": "This method is used to check user can enter only numeric and decimal value",
            "itemtype": "method",
            "name": "isDecimal",
            "class": "proposalReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/proposalReview/proposalReview.component.ts",
            "line": 812,
            "description": "Get selected item from dropdown",
            "itemtype": "method",
            "name": "onItemSelect",
            "class": "proposalReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/proposalReview/proposalReview.component.ts",
            "line": 820,
            "description": "Deselect item from dropdown",
            "itemtype": "method",
            "name": "OnItemDeSelect",
            "class": "proposalReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/proposalReview/proposalReview.component.ts",
            "line": 828,
            "description": "all items are selected from dropdown",
            "itemtype": "method",
            "name": "onSelectAll",
            "class": "proposalReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/proposalReview/proposalReview.component.ts",
            "line": 836,
            "description": "all items are deselected from dropdown",
            "itemtype": "method",
            "name": "onDeSelectAll",
            "class": "proposalReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/proposalReview/proposalReview.component.ts",
            "line": 844,
            "description": "This method is used for adding general notes in RFP",
            "itemtype": "method",
            "name": "addGeneralNote",
            "class": "proposalReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/proposalReview/proposalReview.component.ts",
            "line": 852,
            "description": "This method is used to open modal popup for openModalForm",
            "itemtype": "method",
            "name": "openModalSendEmail",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of email module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains send email module",
                    "type": "Number"
                }
            ],
            "class": "proposalReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/proposalReview/proposalReview.services.ts",
            "line": 24,
            "description": "This method is used to create a new record in database",
            "itemtype": "method",
            "name": "addProposalReview",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                },
                {
                    "name": "idRfp",
                    "description": "idRfp is RFP id",
                    "type": "Number"
                },
                {
                    "name": "isSaveAndExit",
                    "description": "isSaveAndExit if it is true and than navigate to RFP listing, otherwise it will moov on to next step.",
                    "type": "Boolean"
                }
            ],
            "class": "ProposalReviewServices"
        },
        {
            "file": "src/app/route/addRfp/proposalReview/proposalReview.services.ts",
            "line": 36,
            "description": "This method is used to get proposal of specific RFP",
            "itemtype": "method",
            "name": "getProposalReview",
            "params": [
                {
                    "name": "idRfp",
                    "description": "id of proposal review",
                    "type": "Number"
                }
            ],
            "class": "ProposalReviewServices"
        },
        {
            "file": "src/app/route/addRfp/proposalReview/proposalReview.services.ts",
            "line": 45,
            "description": "This method is used to get Fee schedule of specific RFP in dropdown format",
            "itemtype": "method",
            "name": "getRfpFeeScheduleService",
            "params": [
                {
                    "name": "id",
                    "description": "id of {{name}} for getting specific record",
                    "type": "Number"
                }
            ],
            "class": "ProposalReviewServices"
        },
        {
            "file": "src/app/route/addRfp/rfpSubmit/feeschedule/feeschedule.component.ts",
            "line": 40,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "FeeScheduleComponent"
        },
        {
            "file": "src/app/route/addRfp/rfpSubmit/feeschedule/feeschedule.component.ts",
            "line": 142,
            "description": "This method is used for redirecting to project details screen for adding more service",
            "itemtype": "method",
            "name": "addService",
            "class": "FeeScheduleComponent"
        },
        {
            "file": "src/app/route/addRfp/rfpSubmit/feeschedule/feeschedule.services.ts",
            "line": 20,
            "description": "Get all records of fees schedule from database in datatable format",
            "itemtype": "method",
            "name": "",
            "params": [
                {
                    "name": "cfg",
                    "description": "it is a string type which is used for filter data from data table",
                    "type": "String"
                }
            ],
            "class": "FeeScheduleServices"
        },
        {
            "file": "src/app/route/addRfp/rfpSubmit/rfpSubmit.component.ts",
            "line": 151,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "rfpSubmitComponent"
        },
        {
            "file": "src/app/route/addRfp/rfpSubmit/rfpSubmit.component.ts",
            "line": 190,
            "description": "This method is used to make link between RFP and JOB",
            "itemtype": "method",
            "name": "getTobeLinkJobsList",
            "class": "rfpSubmitComponent"
        },
        {
            "file": "src/app/route/addRfp/rfpSubmit/rfpSubmit.component.ts",
            "line": 202,
            "description": "This method is used to make link button enabled if user selects job from dropdown",
            "itemtype": "method",
            "name": "enableLinkBtn",
            "class": "rfpSubmitComponent"
        },
        {
            "file": "src/app/route/addRfp/rfpSubmit/rfpSubmit.component.ts",
            "line": 214,
            "description": "This method is used to link existing job with current RFP details",
            "itemtype": "method",
            "name": "linkRFPWithJob",
            "class": "rfpSubmitComponent"
        },
        {
            "file": "src/app/route/addRfp/rfpSubmit/rfpSubmit.component.ts",
            "line": 230,
            "description": "This method set job object in session and shared service",
            "itemtype": "method",
            "name": "setCommonJobData",
            "params": [
                {
                    "name": "idJob",
                    "description": "ID of Job",
                    "type": "Number"
                }
            ],
            "class": "rfpSubmitComponent"
        },
        {
            "file": "src/app/route/addRfp/rfpSubmit/rfpSubmit.component.ts",
            "line": 239,
            "description": "This method is used to check whether job is already link ot not, if it is linked than job number is displayed\notherwise it will show link job button",
            "itemtype": "method",
            "name": "alreadyGetLinkedJob",
            "params": [
                {
                    "name": "fromJob",
                    "description": "fromJob is used to indicate new job or want to link existing job",
                    "type": "Boolean"
                }
            ],
            "class": "rfpSubmitComponent"
        },
        {
            "file": "src/app/route/addRfp/rfpSubmit/rfpSubmit.component.ts",
            "line": 266,
            "description": "This method is used to open modal popup for downlaod pdf",
            "itemtype": "method",
            "name": "openModalForm",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                }
            ],
            "class": "rfpSubmitComponent"
        },
        {
            "file": "src/app/route/addRfp/rfpSubmit/rfpSubmit.component.ts",
            "line": 281,
            "description": "This method is used to open modal popup for openModalFeeSchedule, which display list of service and its cost",
            "itemtype": "method",
            "name": "openModalFeeSchedule",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of fee schedule in view mode",
                    "type": "Any"
                }
            ],
            "class": "rfpSubmitComponent"
        },
        {
            "file": "src/app/route/addRfp/rfpSubmit/rfpSubmit.component.ts",
            "line": 291,
            "description": "This method is used to open modal popup for openJobModal, for creating a new job",
            "itemtype": "method",
            "name": "openJobModal",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                }
            ],
            "class": "rfpSubmitComponent"
        },
        {
            "file": "src/app/route/addRfp/rfpSubmit/rfpSubmit.component.ts",
            "line": 300,
            "description": "This method is used to get details of specific RFP",
            "itemtype": "method",
            "name": "getRfpDetail",
            "class": "rfpSubmitComponent"
        },
        {
            "file": "src/app/route/addRfp/rfpSubmit/rfpSubmit.component.ts",
            "line": 320,
            "description": "This method is used to display rfp create and update details",
            "itemtype": "method",
            "name": "getRfpDetail",
            "params": [
                {
                    "name": "rfpDetail",
                    "description": "rfpDetail is an object of rfp",
                    "type": "Any"
                }
            ],
            "class": "rfpSubmitComponent"
        },
        {
            "file": "src/app/route/addRfp/rfpSubmit/rfpSubmit.component.ts",
            "line": 353,
            "description": "This method is used to display status of rfp",
            "itemtype": "method",
            "name": "getHeaderStatus",
            "params": [
                {
                    "name": "r",
                    "description": "rfpDetail is an object of rfp",
                    "type": "Any"
                }
            ],
            "class": "rfpSubmitComponent"
        },
        {
            "file": "src/app/route/addRfp/rfpSubmit/rfpSubmit.component.ts",
            "line": 372,
            "description": "This method is used to downaload RFP proposal in PDF format",
            "itemtype": "method",
            "name": "downloadPdf",
            "class": "rfpSubmitComponent"
        },
        {
            "file": "src/app/route/addRfp/rfpSubmit/rfpSubmit.component.ts",
            "line": 388,
            "description": "This method is used to help user for existing current step and move to RFP listing screen",
            "itemtype": "method",
            "name": "exit",
            "class": "rfpSubmitComponent"
        },
        {
            "file": "src/app/route/addRfp/rfpSubmit/rfpSubmit.component.ts",
            "line": 398,
            "description": "This method is used to change RFP status",
            "itemtype": "method",
            "name": "changeRfpStatus",
            "class": "rfpSubmitComponent"
        },
        {
            "file": "src/app/route/addRfp/rfpSubmit/rfpSubmit.component.ts",
            "line": 406,
            "description": "Get all dropdown data of RFP status from database",
            "itemtype": "method",
            "name": "getStatus",
            "class": "rfpSubmitComponent"
        },
        {
            "file": "src/app/route/addRfp/rfpSubmit/rfpSubmit.component.ts",
            "line": 416,
            "description": "This method is used to navigate user to view email history",
            "itemtype": "method",
            "name": "openMailHistory",
            "class": "rfpSubmitComponent"
        },
        {
            "file": "src/app/route/addRfp/rfpSubmit/rfpSubmit.component.ts",
            "line": 424,
            "description": "This method is used to add new progression note",
            "itemtype": "method",
            "name": "addGeneralNote",
            "class": "rfpSubmitComponent"
        },
        {
            "file": "src/app/route/addRfp/rfpSubmit/rfpSubmit.component.ts",
            "line": 433,
            "description": "This method is used to open modal popup for openModalSendEmail (send email)",
            "itemtype": "method",
            "name": "openModalSendEmail",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of send email",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                }
            ],
            "class": "rfpSubmitComponent"
        },
        {
            "file": "src/app/route/addRfp/rfpSubmit/rfpSubmit.component.ts",
            "line": 443,
            "description": "This method is used to get all progression notes are there in specific RFP",
            "itemtype": "method",
            "name": "getAddRfpProgressionNote",
            "class": "rfpSubmitComponent"
        },
        {
            "file": "src/app/route/addRfp/rfpSubmit/rfpSubmit.component.ts",
            "line": 464,
            "description": "This method is used to save progression note for specific RFP record",
            "itemtype": "method",
            "name": "saveProgressionNote",
            "class": "rfpSubmitComponent"
        },
        {
            "file": "src/app/route/addRfp/rfpSubmit/rfpSubmit.component.ts",
            "line": 487,
            "description": "This method is used check permission whether to display job button or not",
            "itemtype": "method",
            "name": "permission",
            "params": [
                {
                    "name": "constantValues",
                    "description": "constantValues is constant file which contains all constants variables",
                    "type": "Any"
                }
            ],
            "class": "rfpSubmitComponent"
        },
        {
            "file": "src/app/route/addRfp/scopeReview/scopeReview.component.ts",
            "line": 35,
            "description": "scopeReviewForm add/edit form",
            "itemtype": "property",
            "name": "scopeReviewForm",
            "class": "scopeReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/scopeReview/scopeReview.component.ts",
            "line": 41,
            "description": "rfpprogressionnote add/edit form",
            "itemtype": "property",
            "name": "rfpprogressionnote",
            "class": "scopeReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/scopeReview/scopeReview.component.ts",
            "line": 96,
            "description": "This method is used check any element in form changed or not",
            "itemtype": "method",
            "name": "isFieldValChange",
            "class": "scopeReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/scopeReview/scopeReview.component.ts",
            "line": 110,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "scopeReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/scopeReview/scopeReview.component.ts",
            "line": 159,
            "description": "This method is used to get rfp detail",
            "itemtype": "method",
            "name": "getRfpDetail",
            "class": "scopeReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/scopeReview/scopeReview.component.ts",
            "line": 172,
            "description": "This method is used to display rfp create and update details",
            "itemtype": "method",
            "name": "getRfpDetail",
            "params": [
                {
                    "name": "rfpDetail",
                    "description": "rfpDetail is an object of rfp",
                    "type": "Any"
                }
            ],
            "class": "scopeReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/scopeReview/scopeReview.component.ts",
            "line": 205,
            "description": "This method is used to display status of rfp",
            "itemtype": "method",
            "name": "getHeaderStatus",
            "params": [
                {
                    "name": "r",
                    "description": "rfpDetail is an object of rfp",
                    "type": "Any"
                }
            ],
            "class": "scopeReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/scopeReview/scopeReview.component.ts",
            "line": 224,
            "description": "This method is used to restrict user from closing dropdown",
            "itemtype": "method",
            "name": "closeDropdown",
            "class": "scopeReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/scopeReview/scopeReview.component.ts",
            "line": 232,
            "description": "Get all dropdown data from contacts",
            "itemtype": "method",
            "name": "getContacts",
            "class": "scopeReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/scopeReview/scopeReview.component.ts",
            "line": 244,
            "description": "This method is used to save record",
            "itemtype": "method",
            "name": "saveScopeReview",
            "params": [
                {
                    "name": "isSaveAndExit",
                    "description": "isSaveAndExit if it is true and redirect to listing RFP and if it is false than move to next step",
                    "type": "Boolean"
                }
            ],
            "class": "scopeReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/scopeReview/scopeReview.component.ts",
            "line": 271,
            "description": "This method is used to navigate user to RFP listing screen",
            "itemtype": "method",
            "name": "getBack",
            "class": "scopeReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/scopeReview/scopeReview.component.ts",
            "line": 279,
            "description": "This method is used to apply filter in company",
            "itemtype": "method",
            "name": "applyCompanyFilter",
            "class": "scopeReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/scopeReview/scopeReview.component.ts",
            "line": 288,
            "description": "Get selected item from dropdown",
            "itemtype": "method",
            "name": "onItemSelect",
            "class": "scopeReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/scopeReview/scopeReview.component.ts",
            "line": 296,
            "description": "Deselect item from dropdown",
            "itemtype": "method",
            "name": "OnItemDeSelect",
            "class": "scopeReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/scopeReview/scopeReview.component.ts",
            "line": 304,
            "description": "all items are selected from dropdown",
            "itemtype": "method",
            "name": "onSelectAll",
            "class": "scopeReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/scopeReview/scopeReview.component.ts",
            "line": 312,
            "description": "all items are deselected from dropdown",
            "itemtype": "method",
            "name": "onDeSelectAll",
            "class": "scopeReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/scopeReview/scopeReview.component.ts",
            "line": 320,
            "description": "This method is used for adding general notes in RFP",
            "itemtype": "method",
            "name": "addGeneralNote",
            "class": "scopeReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/scopeReview/scopeReview.component.ts",
            "line": 328,
            "description": "This method is used to open modal popup for openModalForm",
            "itemtype": "method",
            "name": "openModalForm",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                }
            ],
            "class": "scopeReviewComponent"
        },
        {
            "file": "src/app/route/addRfp/scopeReview/scopeReview.services.ts",
            "line": 27,
            "description": "This method is used to create a new record in database",
            "itemtype": "method",
            "name": "addScopeReview",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                },
                {
                    "name": "idRfp",
                    "description": "idRfp of rfp id number for getting scope reivew details",
                    "type": "Number"
                }
            ],
            "class": "ScopeReviewServices"
        },
        {
            "file": "src/app/route/addRfp/scopeReview/scopeReview.services.ts",
            "line": 38,
            "description": "Get single record from database",
            "itemtype": "method",
            "name": "getScopeReview",
            "params": [
                {
                    "name": "idRfp",
                    "description": "id of scope to get details of scope review",
                    "type": "Number"
                }
            ],
            "class": "ScopeReviewServices"
        },
        {
            "file": "src/app/route/addRfp/scopeReview/scopeReview.services.ts",
            "line": 47,
            "description": "Get all dropdown data from verbiage",
            "itemtype": "method",
            "name": "getAllVerbiages",
            "class": "ScopeReviewServices"
        },
        {
            "file": "src/app/route/addRfp/scopeReview/scopeReview.services.ts",
            "line": 55,
            "description": "Get all dropdown data from verbiage in dropdown format",
            "itemtype": "method",
            "name": "getVerbiagesDropDown",
            "class": "ScopeReviewServices"
        },
        {
            "file": "src/app/route/addRfp/scopeReview/scopeReview.services.ts",
            "line": 63,
            "description": "Get single record from verbiage database",
            "itemtype": "method",
            "name": "getVerbiageById",
            "params": [
                {
                    "name": "id",
                    "description": "id of {{name}} for getting specific record",
                    "type": "Number"
                }
            ],
            "class": "ScopeReviewServices"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.component.ts",
            "line": 58,
            "description": "Site information form",
            "itemtype": "property",
            "name": "siteForm",
            "class": "SiteInformationComponent"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.component.ts",
            "line": 64,
            "description": "It will open new RFP address form popup",
            "itemtype": "property",
            "name": "formAddNewAddress",
            "class": "SiteInformationComponent"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.component.ts",
            "line": 71,
            "description": "It will open view RFP address pouup",
            "itemtype": "property",
            "name": "formAddNewAddress",
            "class": "SiteInformationComponent"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.component.ts",
            "line": 78,
            "description": "It will open popup when click on existing Job",
            "itemtype": "property",
            "name": "addRelatedJob",
            "class": "SiteInformationComponent"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.component.ts",
            "line": 85,
            "description": "It will open RFP progession note popup",
            "itemtype": "property",
            "name": "rfpprogressionnote",
            "class": "SiteInformationComponent"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.component.ts",
            "line": 92,
            "description": "It will open popup on select of get info in add address popup",
            "itemtype": "property",
            "name": "viewAddressList",
            "class": "SiteInformationComponent"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.component.ts",
            "line": 165,
            "description": "This method define all services that requires in whole class",
            "itemtype": "method",
            "name": "constructor",
            "class": "SiteInformationComponent"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.component.ts",
            "line": 198,
            "description": "This method will call when step 1 form loads first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "SiteInformationComponent"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.component.ts",
            "line": 239,
            "description": "This method check permission for address",
            "itemtype": "method",
            "name": "permission",
            "params": [
                {
                    "name": "data",
                    "description": "request Object",
                    "type": "ConstantValues"
                }
            ],
            "class": "SiteInformationComponent"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.component.ts",
            "line": 256,
            "description": "It will check any element in site information form changed or not",
            "itemtype": "method",
            "name": "isFieldValChange",
            "class": "SiteInformationComponent"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.component.ts",
            "line": 267,
            "description": "This method get rfp details from RFPId",
            "itemtype": "method",
            "name": "getRfpByRfpId",
            "class": "SiteInformationComponent"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.component.ts",
            "line": 277,
            "description": "This method will get RFP creator and modified user detail of give RFP record",
            "itemtype": "method",
            "name": "getRFPCreatorDetail",
            "params": [
                {
                    "name": "rfpDetail",
                    "description": "request object",
                    "type": "Object"
                }
            ],
            "class": "SiteInformationComponent"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.component.ts",
            "line": 310,
            "description": "This method will decide that \"Get Info\" button should display or not in add new RFP address form",
            "itemtype": "method",
            "name": "checkBisAddressInfo",
            "class": "SiteInformationComponent"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.component.ts",
            "line": 323,
            "description": "This method will get information from BIS site and display in RFP add new address form",
            "itemtype": "method",
            "name": "getBisAddressInfo",
            "class": "SiteInformationComponent"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.component.ts",
            "line": 345,
            "description": "This method convert given string into pascal case (e.g = Rpo App)",
            "itemtype": "method",
            "name": "toTitleCase",
            "params": [
                {
                    "name": "str",
                    "description": "request string",
                    "type": "String"
                }
            ],
            "class": "SiteInformationComponent"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.component.ts",
            "line": 354,
            "description": "This method updates fields in add address form on click on get info button",
            "itemtype": "method",
            "name": "updateFormFieldsFromGetInfo",
            "params": [
                {
                    "name": "address",
                    "description": "request Object",
                    "type": "Object"
                }
            ],
            "class": "SiteInformationComponent"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.component.ts",
            "line": 382,
            "description": "This method open address list popup if there are multiple matching address while click on get info",
            "itemtype": "method",
            "name": "openModalAddressList",
            "params": [
                {
                    "name": "template",
                    "description": "request Object",
                    "type": "TemplateRef"
                }
            ],
            "class": "SiteInformationComponent"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.component.ts",
            "line": 391,
            "description": "This method get all information on selection of existing job and set in RFP step 1 fields",
            "itemtype": "method",
            "name": "receiveJobId",
            "params": [
                {
                    "name": "jobObj",
                    "description": "response object",
                    "type": "Job"
                }
            ],
            "class": "SiteInformationComponent"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.component.ts",
            "line": 426,
            "description": "This method will get RFP address detail and set in step 1 fields",
            "itemtype": "method",
            "name": "getRfpAddress",
            "class": "SiteInformationComponent"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.component.ts",
            "line": 445,
            "description": "This method will get all comapny list",
            "itemtype": "method",
            "name": "getCompanies",
            "class": "SiteInformationComponent"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.component.ts",
            "line": 456,
            "description": "This method will get rfp info while edit",
            "itemtype": "method",
            "name": "getRfpDetail",
            "class": "SiteInformationComponent"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.component.ts",
            "line": 478,
            "description": "This method will set company contacts while create Rfp from RFP Address",
            "itemtype": "method",
            "name": "setComContactDetailFromAddress",
            "class": "SiteInformationComponent"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.component.ts",
            "line": 500,
            "description": "This method will get all contacts list",
            "itemtype": "method",
            "name": "getAllContacts",
            "class": "SiteInformationComponent"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.component.ts",
            "line": 515,
            "description": "This method get contact list based on company selection",
            "itemtype": "method",
            "name": "getContactsFromCompany",
            "params": [
                {
                    "name": "companyId",
                    "description": "company id",
                    "type": "Number"
                }
            ],
            "class": "SiteInformationComponent"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.component.ts",
            "line": 566,
            "description": "This method apply telephone masking",
            "itemtype": "method",
            "name": "telephoneVal",
            "class": "SiteInformationComponent"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.component.ts",
            "line": 581,
            "description": "This method will get all borough list",
            "itemtype": "method",
            "name": "getBoroughs",
            "class": "SiteInformationComponent"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.component.ts",
            "line": 593,
            "description": "This method will get all states",
            "itemtype": "method",
            "name": "getStates",
            "class": "SiteInformationComponent"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.component.ts",
            "line": 605,
            "description": "This method will open add new address popup",
            "itemtype": "method",
            "name": "openModal",
            "params": [
                {
                    "name": "template",
                    "description": "request object",
                    "type": "TemplateRef"
                }
            ],
            "class": "SiteInformationComponent"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.component.ts",
            "line": 667,
            "description": "This method will open Job popup to select existing job",
            "itemtype": "method",
            "name": "selectJobModal",
            "params": [
                {
                    "name": "template",
                    "description": "request object",
                    "type": "TemplateRef"
                }
            ],
            "class": "SiteInformationComponent"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.component.ts",
            "line": 677,
            "description": "This methos save add new Rfp Address form",
            "itemtype": "method",
            "name": "saveRfpAddress",
            "class": "SiteInformationComponent"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.component.ts",
            "line": 702,
            "description": "This method will set address 1,2 based on company selection",
            "itemtype": "method",
            "name": "setComAddress",
            "params": [
                {
                    "name": "isNew",
                    "description": "request flag that identify record is new or edit",
                    "type": "Boolean"
                }
            ],
            "class": "SiteInformationComponent"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.component.ts",
            "line": 742,
            "description": "This methos Set Telephone and Email based on contact selection",
            "itemtype": "method",
            "name": "setContactDetail",
            "class": "SiteInformationComponent"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.component.ts",
            "line": 803,
            "description": "This methis set step 1 address fields on selection of RFP address",
            "itemtype": "method",
            "name": "setAddressData",
            "class": "SiteInformationComponent"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.component.ts",
            "line": 846,
            "description": "This method will open view address popup on click of icon besides RFP address dropdown",
            "itemtype": "method",
            "name": "viewAddressModal",
            "params": [
                {
                    "name": "template",
                    "description": "request Object",
                    "type": "TemplateRef"
                },
                {
                    "name": "id",
                    "description": "ID of address",
                    "type": "Number"
                }
            ],
            "class": "SiteInformationComponent"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.component.ts",
            "line": 888,
            "description": "This methos save Step1 Site information in database",
            "itemtype": "method",
            "name": "saveStep1SiteInfo",
            "params": [
                {
                    "name": "isSaveAndExit",
                    "description": "save&exist button pressed or not",
                    "type": "Boolean"
                }
            ],
            "class": "SiteInformationComponent"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.component.ts",
            "line": 945,
            "description": "This method gets header status and set class name of progress bar",
            "itemtype": "method",
            "name": "getHeaderStatus",
            "class": "SiteInformationComponent"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.component.ts",
            "line": 963,
            "description": "This method clear job data while select New Job",
            "itemtype": "method",
            "name": "clearJobData",
            "class": "SiteInformationComponent"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.component.ts",
            "line": 992,
            "description": "This method format phone numbers",
            "itemtype": "method",
            "name": "formatPhone",
            "class": "SiteInformationComponent"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.component.ts",
            "line": 1000,
            "description": "This method add general notes",
            "itemtype": "method",
            "name": "addGeneralNote",
            "class": "SiteInformationComponent"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.component.ts",
            "line": 1008,
            "description": "This method open add general notes popup",
            "itemtype": "method",
            "name": "openModalSendEmail",
            "params": [
                {
                    "name": "template",
                    "description": "request Object",
                    "type": "TemplateRef"
                }
            ],
            "class": "SiteInformationComponent"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.component.ts",
            "line": 1017,
            "description": "This method checks given data is number or not",
            "itemtype": "method",
            "name": "isNumber",
            "params": [
                {
                    "name": "evt",
                    "description": "event object",
                    "type": "Any"
                }
            ],
            "class": "SiteInformationComponent"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.component.ts",
            "line": 1031,
            "description": "This method will call on click on document upload",
            "itemtype": "method",
            "name": "documentUpload",
            "params": [
                {
                    "name": "evt",
                    "description": "event object",
                    "type": "Any"
                }
            ],
            "class": "SiteInformationComponent"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.component.ts",
            "line": 1047,
            "description": "This method uploads document in database",
            "itemtype": "method",
            "name": "uploadDocuments",
            "params": [
                {
                    "name": "id",
                    "description": "ID of rfp",
                    "type": "Number"
                }
            ],
            "class": "SiteInformationComponent"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.component.ts",
            "line": 1072,
            "description": "This method delete document from database",
            "itemtype": "method",
            "name": "deleteDocument",
            "params": [
                {
                    "name": "d",
                    "description": "Id of document delete",
                    "type": "Any"
                }
            ],
            "class": "SiteInformationComponent"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.services.ts",
            "line": 26,
            "description": "This method create RFP address record in database",
            "itemtype": "method",
            "name": "createRfpAddress",
            "params": [
                {
                    "name": "data",
                    "description": "request Object",
                    "type": "RfpAddress"
                }
            ],
            "class": "SiteInformationServices"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.services.ts",
            "line": 37,
            "description": "This method get all RFP address record from database",
            "itemtype": "method",
            "name": "getRfpAddress",
            "class": "SiteInformationServices"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.services.ts",
            "line": 46,
            "description": "This method add site information (save step 1) in database",
            "itemtype": "method",
            "name": "addSiteInformation",
            "params": [
                {
                    "name": "data",
                    "description": "request Object",
                    "type": "Rfp"
                }
            ],
            "class": "SiteInformationServices"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.services.ts",
            "line": 57,
            "description": "This method update site information (update step 1) record in database",
            "itemtype": "method",
            "name": "updateSiteInformation",
            "params": [
                {
                    "name": "data",
                    "description": "request Object",
                    "type": "Rfp"
                },
                {
                    "name": "idRfp",
                    "description": "request Object",
                    "type": "Number"
                }
            ],
            "class": "SiteInformationServices"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.services.ts",
            "line": 69,
            "description": "This method get site information data of given id from database",
            "itemtype": "method",
            "name": "getSiteInformation",
            "params": [
                {
                    "name": "idRfp",
                    "description": "request Object",
                    "type": "Number"
                }
            ],
            "class": "SiteInformationServices"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.services.ts",
            "line": 79,
            "description": "This method get address information from bis site",
            "itemtype": "method",
            "name": "getBisAddresInfo",
            "params": [
                {
                    "name": "data",
                    "description": "request Object",
                    "type": "Object"
                }
            ],
            "class": "SiteInformationServices"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.services.ts",
            "line": 89,
            "description": "This method get all dropdown options of RFP addresses from database",
            "itemtype": "method",
            "name": "getRfpAddressDropdown",
            "class": "SiteInformationServices"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.services.ts",
            "line": 98,
            "description": "This method get RFP address of give address id from database",
            "itemtype": "method",
            "name": "getRfpAddressById",
            "params": [
                {
                    "name": "id",
                    "description": "request Object",
                    "type": "Number"
                }
            ],
            "class": "SiteInformationServices"
        },
        {
            "file": "src/app/route/addRfp/siteInformation/siteInformation.services.ts",
            "line": 108,
            "description": "This method save rfp attachment documents from step1",
            "itemtype": "method",
            "name": "saveRfpDocuments",
            "params": [
                {
                    "name": "data",
                    "description": "request Object",
                    "type": "Data"
                }
            ],
            "class": "SiteInformationServices"
        },
        {
            "file": "src/app/route/addressmaster/masterform/masterform.component.ts",
            "line": 96,
            "description": "get all comapny list",
            "class": "AddressMasterComponent"
        },
        {
            "file": "src/app/route/addressmaster/masterform/masterform.component.ts",
            "line": 108,
            "description": "get all contacts list",
            "class": "AddressMasterComponent"
        },
        {
            "file": "src/app/route/addressmaster/masterform/masterform.component.ts",
            "line": 130,
            "description": "get all borough list",
            "class": "AddressMasterComponent"
        },
        {
            "file": "src/app/route/addressmaster/addressmaster.component.ts",
            "line": 28,
            "description": "form add/edit masterform",
            "itemtype": "property",
            "name": "masterform",
            "class": "AddressMasterComponent"
        },
        {
            "file": "src/app/route/addressmaster/addressmaster.component.ts",
            "line": 35,
            "description": "form add/edit formJobAddNewAddress",
            "itemtype": "property",
            "name": "formJobAddNewAddress",
            "class": "AddressMasterComponent"
        },
        {
            "file": "src/app/route/addressmaster/addressmaster.component.ts",
            "line": 42,
            "description": "viewAddress",
            "itemtype": "property",
            "name": "viewAddress",
            "class": "AddressMasterComponent"
        },
        {
            "file": "src/app/route/addressmaster/addressmaster.component.ts",
            "line": 49,
            "description": "form add/edit formJob",
            "itemtype": "property",
            "name": "formJob",
            "class": "AddressMasterComponent"
        },
        {
            "file": "src/app/route/addressmaster/addressmaster.component.ts",
            "line": 94,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "AddressMasterComponent"
        },
        {
            "file": "src/app/route/addressmaster/addressmaster.component.ts",
            "line": 210,
            "description": "This method is used to check permission of component",
            "itemtype": "method",
            "name": "permission",
            "params": [
                {
                    "name": "constantValues",
                    "description": "type request Object",
                    "type": "Any"
                }
            ],
            "class": "AddressMasterComponent"
        },
        {
            "file": "src/app/route/addressmaster/addressmaster.component.ts",
            "line": 265,
            "description": "This method will be destroy all elements and other values from whole module",
            "itemtype": "method",
            "name": "ngOnDestroy",
            "class": "AddressMasterComponent"
        },
        {
            "file": "src/app/route/addressmaster/addressmaster.component.ts",
            "line": 274,
            "description": "This method is used for filter/search records from datatable",
            "itemtype": "method",
            "name": "searchAddress",
            "params": [
                {
                    "name": "srch",
                    "description": "type any which contains string that can be filtered from datatable",
                    "type": "String"
                }
            ],
            "class": "AddressMasterComponent"
        },
        {
            "file": "src/app/route/addressmaster/addressmaster.component.ts",
            "line": 283,
            "description": "This method is used to open modal popup for openModalForm",
            "itemtype": "method",
            "name": "openModalForm",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                },
                {
                    "name": "isNew",
                    "description": "it is optional which contains true if it is new record and false when it is old record",
                    "type": "Boolean"
                }
            ],
            "class": "AddressMasterComponent"
        },
        {
            "file": "src/app/route/addressmaster/addressmaster.component.ts",
            "line": 298,
            "description": "This method is used to reload datatable",
            "itemtype": "method",
            "name": "reload",
            "class": "AddressMasterComponent"
        },
        {
            "file": "src/app/route/addressmaster/addressmaster.component.ts",
            "line": 307,
            "description": "This method is used to delete record",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "type which contains id to delete record",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "type which contains entire selected row",
                    "type": "Any"
                }
            ],
            "class": "AddressMasterComponent"
        },
        {
            "file": "src/app/route/addressmaster/addressmaster.component.ts",
            "line": 324,
            "description": "This method is used to open modal popup for openModalForm",
            "itemtype": "method",
            "name": "openJobModal",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                }
            ],
            "class": "AddressMasterComponent"
        },
        {
            "file": "src/app/route/addressmaster/addressmaster.services.ts",
            "line": 22,
            "description": "Get all records from database in datatable format",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "cfg",
                    "description": "it is a string type which is used for filter data from data table",
                    "type": "String"
                }
            ],
            "class": "AddressMasterServices"
        },
        {
            "file": "src/app/route/addressmaster/addressmaster.services.ts",
            "line": 33,
            "description": "This method is used to create a new record in database",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                }
            ],
            "class": "AddressMasterServices"
        },
        {
            "file": "src/app/route/addressmaster/addressmaster.services.ts",
            "line": 43,
            "description": "This method is used to update existing record in database",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "id of {{name}} for updating specific record",
                    "type": "Number"
                }
            ],
            "class": "AddressMasterServices"
        },
        {
            "file": "src/app/route/addressmaster/addressmaster.services.ts",
            "line": 53,
            "description": "Get single record from database",
            "itemtype": "method",
            "name": "getById",
            "params": [
                {
                    "name": "id",
                    "description": "id of {{name}} for getting specific record",
                    "type": "Number"
                }
            ],
            "class": "AddressMasterServices"
        },
        {
            "file": "src/app/route/addressmaster/addressmaster.services.ts",
            "line": 62,
            "description": "This method is used to delete records from database",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "of {{name}} to delete",
                    "type": "Number"
                }
            ],
            "class": "AddressMasterServices"
        },
        {
            "file": "src/app/route/addressmaster/addressmaster.services.ts",
            "line": 71,
            "description": "This method is used to update existing record in database",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "id of {{name}} for updating specific record",
                    "type": "Number"
                }
            ],
            "class": "AddressMasterServices"
        },
        {
            "file": "src/app/route/addresstype/addresstype.component.ts",
            "line": 24,
            "description": "addressform add/edit form",
            "itemtype": "property",
            "name": "addressform",
            "class": "AddresstypeComponent"
        },
        {
            "file": "src/app/route/addresstype/addresstype.component.ts",
            "line": 72,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "AddresstypeComponent"
        },
        {
            "file": "src/app/route/addresstype/addresstype.component.ts",
            "line": 134,
            "description": "This method will be destroy all elements and other values from whole module",
            "itemtype": "method",
            "name": "ngOnDestroy",
            "class": "AddresstypeComponent"
        },
        {
            "file": "src/app/route/addresstype/addresstype.component.ts",
            "line": 143,
            "description": "This method is used for filter/search records from datatable",
            "itemtype": "method",
            "name": "searchAddress",
            "params": [
                {
                    "name": "srch",
                    "description": "type any which contains string that can be filtered from datatable",
                    "type": "String"
                }
            ],
            "class": "AddresstypeComponent"
        },
        {
            "file": "src/app/route/addresstype/addresstype.component.ts",
            "line": 152,
            "description": "This method is used to open modal popup for openModalForm",
            "itemtype": "method",
            "name": "openModalForm",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                },
                {
                    "name": "isNew",
                    "description": "it is optional which contains true if it is new record and false when it is old record",
                    "type": "Boolean"
                }
            ],
            "class": "AddresstypeComponent"
        },
        {
            "file": "src/app/route/addresstype/addresstype.component.ts",
            "line": 167,
            "description": "This method is used to reload datatable",
            "itemtype": "method",
            "name": "reload",
            "class": "AddresstypeComponent"
        },
        {
            "file": "src/app/route/addresstype/addresstype.component.ts",
            "line": 176,
            "description": "This method is used to delete record",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "type which contains id to delete record",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "type which contains entire selected row",
                    "type": "Any"
                }
            ],
            "class": "AddresstypeComponent"
        },
        {
            "file": "src/app/route/addresstype/addresstype.services.ts",
            "line": 9,
            "description": "Class contains all services related to AddresstypeServices",
            "classname": "AddresstypeServices",
            "class": "AddTaskComponent"
        },
        {
            "file": "src/app/route/addresstype/addresstype.services.ts",
            "line": 19,
            "description": "Get all records from database in datatable format",
            "itemtype": "method",
            "name": "get",
            "class": "AddTaskComponent"
        },
        {
            "file": "src/app/route/addresstype/addresstype.services.ts",
            "line": 29,
            "description": "This method is used to create a new record in database",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                }
            ],
            "class": "AddTaskComponent"
        },
        {
            "file": "src/app/route/addresstype/addresstype.services.ts",
            "line": 39,
            "description": "This method is used to update existing record in database",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "id of Address Type for updating specific record",
                    "type": "Number"
                }
            ],
            "class": "AddTaskComponent"
        },
        {
            "file": "src/app/route/addresstype/addresstype.services.ts",
            "line": 49,
            "description": "Get single record from database",
            "itemtype": "method",
            "name": "getById",
            "params": [
                {
                    "name": "id",
                    "description": "id of Address Type for getting specific record",
                    "type": "Number"
                }
            ],
            "class": "AddTaskComponent"
        },
        {
            "file": "src/app/route/addresstype/addresstype.services.ts",
            "line": 58,
            "description": "This method is used to delete records from database",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "of Address Type to delete",
                    "type": "Number"
                }
            ],
            "class": "AddTaskComponent"
        },
        {
            "file": "src/app/route/addtask/addtask.component.ts",
            "line": 76,
            "description": "This method define all services that requires in whole class",
            "itemtype": "method",
            "name": "constructor",
            "class": "AddTaskComponent"
        },
        {
            "file": "src/app/route/addtask/addtask.component.ts",
            "line": 98,
            "description": "This method will call add/edit task form loads first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "AddTaskComponent"
        },
        {
            "file": "src/app/route/addtask/addtask.component.ts",
            "line": 159,
            "description": "This method set service items dropdown based on billing type selected",
            "itemtype": "method",
            "name": "setServiceItemsDD",
            "class": "AddTaskComponent"
        },
        {
            "file": "src/app/route/addtask/addtask.component.ts",
            "line": 185,
            "description": "This method decide service quantity textbox should display or not based on cost type",
            "itemtype": "method",
            "name": "showServiceQty",
            "params": [
                {
                    "name": "flag",
                    "description": "request data",
                    "type": "String"
                }
            ],
            "class": "AddTaskComponent"
        },
        {
            "file": "src/app/route/addtask/addtask.component.ts",
            "line": 221,
            "description": "This method check that quantity of service item is zero or not",
            "itemtype": "method",
            "name": "checkServiceQty",
            "class": "AddTaskComponent"
        },
        {
            "file": "src/app/route/addtask/addtask.component.ts",
            "line": 233,
            "description": "This method is check given data is number or not",
            "itemtype": "method",
            "name": "isNumber",
            "params": [
                {
                    "name": "evt",
                    "description": "request data",
                    "type": "Any"
                }
            ],
            "class": "AddTaskComponent"
        },
        {
            "file": "src/app/route/addtask/addtask.component.ts",
            "line": 247,
            "description": "This method is check given data is decimal or not",
            "itemtype": "method",
            "name": "isDecimal",
            "params": [
                {
                    "name": "evt",
                    "description": "request data",
                    "type": "Any"
                }
            ],
            "class": "AddTaskComponent"
        },
        {
            "file": "src/app/route/addtask/addtask.component.ts",
            "line": 271,
            "description": "This method gets all contacts for dropdowm list",
            "itemtype": "method",
            "name": "getContacts",
            "class": "AddTaskComponent"
        },
        {
            "file": "src/app/route/addtask/addtask.component.ts",
            "line": 281,
            "description": "This method gets task detail of given task id",
            "itemtype": "method",
            "name": "getTaskById",
            "class": "AddTaskComponent"
        },
        {
            "file": "src/app/route/addtask/addtask.component.ts",
            "line": 360,
            "description": "This method gets application data for dropdown list",
            "itemtype": "method",
            "name": "getApplicationDD",
            "params": [
                {
                    "name": "ele",
                    "description": "application id",
                    "type": "Number"
                }
            ],
            "class": "AddTaskComponent"
        },
        {
            "file": "src/app/route/addtask/addtask.component.ts",
            "line": 387,
            "description": "This method gets work permits from given application id and type",
            "itemtype": "method",
            "name": "getWorkPermits",
            "params": [
                {
                    "name": "e",
                    "description": "application ID",
                    "type": "Any"
                },
                {
                    "name": "type",
                    "description": "request string",
                    "type": "String"
                }
            ],
            "class": "AddTaskComponent"
        },
        {
            "file": "src/app/route/addtask/addtask.component.ts",
            "line": 413,
            "description": "This method gets task types for dropdown list",
            "itemtype": "method",
            "name": "getTaskType",
            "class": "AddTaskComponent"
        },
        {
            "file": "src/app/route/addtask/addtask.component.ts",
            "line": 429,
            "description": "This method gets task status for dropdown list",
            "itemtype": "method",
            "name": "getTaskSatus",
            "class": "AddTaskComponent"
        },
        {
            "file": "src/app/route/addtask/addtask.component.ts",
            "line": 442,
            "description": "This method gets employees data for dropdown list",
            "itemtype": "method",
            "name": "getEmployees",
            "class": "AddTaskComponent"
        },
        {
            "file": "src/app/route/addtask/addtask.component.ts",
            "line": 455,
            "description": "This method will close popup",
            "itemtype": "method",
            "name": "closePopup",
            "class": "AddTaskComponent"
        },
        {
            "file": "src/app/route/addtask/addtask.component.ts",
            "line": 468,
            "description": "This method will save task to database",
            "itemtype": "method",
            "name": "saveTask",
            "class": "AddTaskComponent"
        },
        {
            "file": "src/app/route/addtask/addtask.component.ts",
            "line": 512,
            "description": "This method will set data when job type radio button change",
            "itemtype": "method",
            "name": "onJobTypeSelectionChange",
            "params": [
                {
                    "name": "jobType",
                    "description": "jobType ID",
                    "type": "Number"
                },
                {
                    "name": "type",
                    "description": "flag",
                    "type": "String"
                }
            ],
            "class": "AddTaskComponent"
        },
        {
            "file": "src/app/route/addtask/addtask.component.ts",
            "line": 537,
            "description": "This method will set data when task type is change",
            "itemtype": "method",
            "name": "taskTypechange",
            "params": [
                {
                    "name": "ele",
                    "description": "task type element",
                    "type": "Any"
                }
            ],
            "class": "AddTaskComponent"
        },
        {
            "file": "src/app/route/addtask/addtask.component.ts",
            "line": 565,
            "description": "This method will upload documents in database",
            "itemtype": "method",
            "name": "uploadDocumentsinDB",
            "params": [
                {
                    "name": "id",
                    "description": "Task ID",
                    "type": "Number"
                }
            ],
            "class": "AddTaskComponent"
        },
        {
            "file": "src/app/route/addtask/addtask.component.ts",
            "line": 584,
            "description": "This method call when attach button for upload attachments",
            "itemtype": "method",
            "name": "documentUpload",
            "params": [
                {
                    "name": "evt",
                    "description": "request Object",
                    "type": "Any"
                }
            ],
            "class": "AddTaskComponent"
        },
        {
            "file": "src/app/route/addtask/addtask.component.ts",
            "line": 599,
            "description": "This method will call when delete document icon clicked",
            "itemtype": "method",
            "name": "deleteDocument",
            "params": [
                {
                    "name": "d",
                    "description": "document object",
                    "type": "Any"
                }
            ],
            "class": "AddTaskComponent"
        },
        {
            "file": "src/app/route/addtask/addtask.component.ts",
            "line": 608,
            "description": "This method will delete alredy saved attached document",
            "itemtype": "method",
            "name": "deleteAlreadyAttchedFile",
            "params": [
                {
                    "name": "document",
                    "description": "Document Object",
                    "type": "Any"
                }
            ],
            "class": "AddTaskComponent"
        },
        {
            "file": "src/app/route/company/bisCompanyList/bisCompanyList.component.ts",
            "line": 34,
            "description": "update bis info company form",
            "itemtype": "property",
            "name": "updateBISInfoToCompany",
            "class": "BisCompanyListComponent"
        },
        {
            "file": "src/app/route/company/bisCompanyList/bisCompanyList.component.ts",
            "line": 48,
            "description": "This method define all services that requires in whole class",
            "itemtype": "method",
            "name": "constructor",
            "class": "BisCompanyListComponent"
        },
        {
            "file": "src/app/route/company/bisCompanyList/bisCompanyList.component.ts",
            "line": 64,
            "description": "This method will call when form loads first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "BisCompanyListComponent"
        },
        {
            "file": "src/app/route/company/bisCompanyList/bisCompanyList.component.ts",
            "line": 74,
            "description": "This method get company info from BIS",
            "itemtype": "method",
            "name": "getCompanyBISInfo",
            "params": [
                {
                    "name": "businessName",
                    "description": "company type",
                    "type": "String"
                },
                {
                    "name": "licenceNumber",
                    "description": "licence number",
                    "type": "String"
                }
            ],
            "class": "BisCompanyListComponent"
        },
        {
            "file": "src/app/route/company/bisCompanyList/bisCompanyList.component.ts",
            "line": 111,
            "description": "This method will open company info popup",
            "itemtype": "method",
            "name": "openCompanyInfoModal",
            "params": [
                {
                    "name": "template",
                    "description": "Template Object",
                    "type": "TemplateRef"
                },
                {
                    "name": "id",
                    "description": "ID of Company",
                    "type": "Number"
                }
            ],
            "class": "BisCompanyListComponent"
        },
        {
            "file": "src/app/route/company/bisCompanyList/bisCompanyList.component.ts",
            "line": 121,
            "description": "This method will fetch all detail from BIS",
            "itemtype": "method",
            "name": "getBisDetails",
            "class": "BisCompanyListComponent"
        },
        {
            "file": "src/app/route/company/bisCompanyList/bisCompanyList.component.ts",
            "line": 159,
            "description": "This method will fetch all information about insurance",
            "itemtype": "method",
            "name": "scrapBisPage",
            "params": [
                {
                    "name": "licenseNo",
                    "description": "license Number",
                    "type": "String"
                },
                {
                    "name": "licenseType",
                    "description": "license Type",
                    "type": "String"
                }
            ],
            "class": "BisCompanyListComponent"
        },
        {
            "file": "src/app/route/company/bisCompanyList/bisCompanyList.component.ts",
            "line": 203,
            "description": "This method will convert given string into title case",
            "itemtype": "method",
            "name": "toTitleCase",
            "params": [
                {
                    "name": "str",
                    "description": "request string",
                    "type": "String"
                }
            ],
            "class": "BisCompanyListComponent"
        },
        {
            "file": "src/app/route/company/bisCompanyList/bisCompanyList.component.ts",
            "line": 212,
            "description": "This method save bis info",
            "itemtype": "method",
            "name": "saveBisInfo",
            "class": "BisCompanyListComponent"
        },
        {
            "file": "src/app/route/company/companyDetail/companyDetail.component.ts",
            "line": 47,
            "description": "company form",
            "itemtype": "property",
            "name": "formCompany",
            "class": "CompanyDetailComponent"
        },
        {
            "file": "src/app/route/company/companyDetail/companyDetail.component.ts",
            "line": 54,
            "description": "contact form",
            "itemtype": "property",
            "name": "formContact",
            "class": "CompanyDetailComponent"
        },
        {
            "file": "src/app/route/company/companyDetail/companyDetail.component.ts",
            "line": 61,
            "description": "Job Form",
            "itemtype": "property",
            "name": "formJob",
            "class": "CompanyDetailComponent"
        },
        {
            "file": "src/app/route/company/companyDetail/companyDetail.component.ts",
            "line": 68,
            "description": "Add task form",
            "itemtype": "property",
            "name": "addtask",
            "class": "CompanyDetailComponent"
        },
        {
            "file": "src/app/route/company/companyDetail/companyDetail.component.ts",
            "line": 75,
            "description": "Send email from company",
            "itemtype": "property",
            "name": "sendemailCompany",
            "class": "CompanyDetailComponent"
        },
        {
            "file": "src/app/route/company/companyDetail/companyDetail.component.ts",
            "line": 82,
            "description": "Send email from contact",
            "itemtype": "property",
            "name": "sendemailContact",
            "class": "CompanyDetailComponent"
        },
        {
            "file": "src/app/route/company/companyDetail/companyDetail.component.ts",
            "line": 168,
            "description": "This method define all services that requires in whole class",
            "itemtype": "method",
            "name": "constructor",
            "class": "CompanyDetailComponent"
        },
        {
            "file": "src/app/route/company/companyDetail/companyDetail.component.ts",
            "line": 200,
            "description": "This method will call when form loads first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "CompanyDetailComponent"
        },
        {
            "file": "src/app/route/company/companyDetail/companyDetail.component.ts",
            "line": 245,
            "description": "This method set permission for this module",
            "itemtype": "method",
            "name": "permission",
            "params": [
                {
                    "name": "constantValues",
                    "description": "Rights value which is defined in constant file",
                    "type": "Any"
                }
            ],
            "class": "CompanyDetailComponent"
        },
        {
            "file": "src/app/route/company/companyDetail/companyDetail.component.ts",
            "line": 307,
            "itemtype": "method",
            "name": "getBack",
            "class": "CompanyDetailComponent"
        },
        {
            "file": "src/app/route/company/companyDetail/companyDetail.component.ts",
            "line": 314,
            "description": "This method will open send email popup",
            "itemtype": "method",
            "name": "openModalSendEmail",
            "params": [
                {
                    "name": "template",
                    "description": "TemplateRef Object",
                    "type": "TemplateRef"
                },
                {
                    "name": "id",
                    "description": "ID",
                    "type": "Number"
                }
            ],
            "class": "CompanyDetailComponent"
        },
        {
            "file": "src/app/route/company/companyDetail/companyDetail.component.ts",
            "line": 324,
            "description": "This method will get all job of company",
            "itemtype": "method",
            "name": "getJobsOfCompany",
            "class": "CompanyDetailComponent"
        },
        {
            "file": "src/app/route/company/companyDetail/companyDetail.component.ts",
            "line": 338,
            "description": "This method will manage all click on comapany information box",
            "itemtype": "method",
            "name": "onCompanyWidgetItemClick",
            "params": [
                {
                    "name": "key",
                    "description": "flag for different events",
                    "type": "Number"
                }
            ],
            "class": "CompanyDetailComponent"
        },
        {
            "file": "src/app/route/company/companyDetail/companyDetail.component.ts",
            "line": 368,
            "description": "This method fetch information from  BIS",
            "itemtype": "method",
            "name": "goToBis",
            "params": [
                {
                    "name": "bisTracking",
                    "description": "CompanyID",
                    "type": "Any"
                }
            ],
            "class": "CompanyDetailComponent"
        },
        {
            "file": "src/app/route/company/companyDetail/companyDetail.component.ts",
            "line": 408,
            "description": "This method will open popup for add task",
            "itemtype": "method",
            "name": "openModalFormAddTask",
            "params": [
                {
                    "name": "template",
                    "description": "TemplateRef Object",
                    "type": "TemplateRef"
                },
                {
                    "name": "id",
                    "description": "ID",
                    "type": "Number"
                }
            ],
            "class": "CompanyDetailComponent"
        },
        {
            "file": "src/app/route/company/companyDetail/companyDetail.component.ts",
            "line": 421,
            "description": "This method will delete company",
            "itemtype": "method",
            "name": "deleteCompany",
            "params": [
                {
                    "name": "id",
                    "description": "ID of Company",
                    "type": "Number"
                }
            ],
            "class": "CompanyDetailComponent"
        },
        {
            "file": "src/app/route/company/companyDetail/companyDetail.component.ts",
            "line": 434,
            "description": "This method will manage all click on comapany information box",
            "itemtype": "method",
            "name": "onCompanyWidgetItemClick",
            "params": [
                {
                    "name": "key",
                    "description": "flag for different events",
                    "type": "Number"
                }
            ],
            "class": "CompanyDetailComponent"
        },
        {
            "file": "src/app/route/company/companyDetail/companyDetail.component.ts",
            "line": 457,
            "description": "This method will delete contact",
            "itemtype": "method",
            "name": "deleteContact",
            "params": [
                {
                    "name": "id",
                    "description": "ID of contact",
                    "type": "Number"
                }
            ],
            "class": "CompanyDetailComponent"
        },
        {
            "file": "src/app/route/company/companyDetail/companyDetail.component.ts",
            "line": 473,
            "description": "This method will open popup for contact",
            "itemtype": "method",
            "name": "_openModal",
            "params": [
                {
                    "name": "template",
                    "description": "TemplateRef Object",
                    "type": "TemplateRef"
                }
            ],
            "class": "CompanyDetailComponent"
        },
        {
            "file": "src/app/route/company/companyDetail/companyDetail.component.ts",
            "line": 482,
            "description": "This method will open popup for add contact",
            "itemtype": "method",
            "name": "openModal",
            "params": [
                {
                    "name": "template",
                    "description": "TemplateRef Object",
                    "type": "TemplateRef"
                },
                {
                    "name": "id",
                    "description": "ID",
                    "type": "Number"
                }
            ],
            "class": "CompanyDetailComponent"
        },
        {
            "file": "src/app/route/company/companyDetail/companyDetail.component.ts",
            "line": 515,
            "description": "This method will open popup for job",
            "itemtype": "method",
            "name": "openJobModal",
            "params": [
                {
                    "name": "template",
                    "description": "TemplateRef Object",
                    "type": "TemplateRef"
                },
                {
                    "name": "id",
                    "description": "ID",
                    "type": "Number"
                },
                {
                    "name": "contactId",
                    "description": "ID of Contact",
                    "type": "Number"
                }
            ],
            "class": "CompanyDetailComponent"
        },
        {
            "file": "src/app/route/company/companyDetail/companyDetail.component.ts",
            "line": 530,
            "description": "This method will open popup for add contact",
            "itemtype": "method",
            "name": "_openJobModal",
            "params": [
                {
                    "name": "template",
                    "description": "TemplateRef Object",
                    "type": "TemplateRef"
                }
            ],
            "class": "CompanyDetailComponent"
        },
        {
            "file": "src/app/route/company/companyDetail/companyDetail.component.ts",
            "line": 539,
            "description": "This methos will call when save contact, company or job",
            "itemtype": "method",
            "name": "onSave",
            "params": [
                {
                    "name": "ctt",
                    "description": "record object",
                    "type": "Any"
                },
                {
                    "name": "evt",
                    "description": "event object",
                    "type": "Any"
                }
            ],
            "class": "CompanyDetailComponent"
        },
        {
            "file": "src/app/route/company/companyDetail/companyDetail.component.ts",
            "line": 580,
            "description": "This method will join array into string",
            "itemtype": "method",
            "name": "join",
            "params": [
                {
                    "name": "arr",
                    "description": "array of string",
                    "type": "Array"
                },
                {
                    "name": "s",
                    "description": "join character",
                    "type": "String"
                }
            ],
            "class": "CompanyDetailComponent"
        },
        {
            "file": "src/app/route/company/companyDetail/companyDetail.component.ts",
            "line": 590,
            "description": "This method will open popup for company",
            "itemtype": "method",
            "name": "_openModalCompany",
            "params": [
                {
                    "name": "template",
                    "description": "TemplateRef Object",
                    "type": "TemplateRef"
                }
            ],
            "class": "CompanyDetailComponent"
        },
        {
            "file": "src/app/route/company/companyDetail/companyDetail.component.ts",
            "line": 599,
            "description": "This method will open popup for company",
            "itemtype": "method",
            "name": "openModalCompany",
            "params": [
                {
                    "name": "template",
                    "description": "TemplateRef Object",
                    "type": "TemplateRef"
                },
                {
                    "name": "id",
                    "description": "ID of company",
                    "type": "Number"
                }
            ],
            "class": "CompanyDetailComponent"
        },
        {
            "file": "src/app/route/company/companyDetail/companyDetail.component.ts",
            "line": 625,
            "description": "This method will call when any tab change",
            "itemtype": "method",
            "name": "tabChange",
            "params": [
                {
                    "name": "val",
                    "description": "Tab Value",
                    "type": "Any"
                }
            ],
            "class": "CompanyDetailComponent"
        },
        {
            "file": "src/app/route/company/companyDetail/companyDetail.component.ts",
            "line": 649,
            "description": "This method will call when RFP tab is clicked",
            "itemtype": "method",
            "name": "tabChangeRFP",
            "class": "CompanyDetailComponent"
        },
        {
            "file": "src/app/route/company/companyDetail/companyDetail.component.ts",
            "line": 657,
            "description": "This method will call when Job tab is clicked",
            "itemtype": "method",
            "name": "tabChangeJobs",
            "class": "CompanyDetailComponent"
        },
        {
            "file": "src/app/route/company/companyDetail/companyDetail.component.ts",
            "line": 665,
            "description": "This method set contact box height",
            "itemtype": "method",
            "name": "detailsGridHeight",
            "class": "CompanyDetailComponent"
        },
        {
            "file": "src/app/route/company/companyDetail/companyDetail.component.ts",
            "line": 675,
            "description": "This method reloads datatable",
            "itemtype": "method",
            "name": "reload",
            "class": "CompanyDetailComponent"
        },
        {
            "file": "src/app/route/company/formCompany/formCompany.component.ts",
            "line": 39,
            "description": "View BIS Company List",
            "itemtype": "property",
            "name": "viewBisCompanyList",
            "class": "FormCompanyComponent"
        },
        {
            "file": "src/app/route/company/formCompany/formCompany.component.ts",
            "line": 87,
            "description": "This method define all services that requires in whole class",
            "itemtype": "method",
            "name": "constructor",
            "class": "FormCompanyComponent"
        },
        {
            "file": "src/app/route/company/formCompany/formCompany.component.ts",
            "line": 106,
            "description": "This method will call when form loads first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "FormCompanyComponent"
        },
        {
            "file": "src/app/route/company/formCompany/formCompany.component.ts",
            "line": 206,
            "description": "Get selected item from multiselect dropdown",
            "itemtype": "method",
            "name": "onItemSelect",
            "params": [
                {
                    "name": "item",
                    "description": "selected item",
                    "type": "Any"
                }
            ],
            "class": "FormCompanyComponent"
        },
        {
            "file": "src/app/route/company/formCompany/formCompany.component.ts",
            "line": 215,
            "description": "Deselect item from multiselect dropdown",
            "itemtype": "method",
            "name": "OnItemDeSelect",
            "params": [
                {
                    "name": "item",
                    "description": "deselected item",
                    "type": "Any"
                }
            ],
            "class": "FormCompanyComponent"
        },
        {
            "file": "src/app/route/company/formCompany/formCompany.component.ts",
            "line": 224,
            "description": "select on all in multiselect dropdown",
            "itemtype": "method",
            "name": "onSelectAll",
            "params": [
                {
                    "name": "items",
                    "description": "selected all items",
                    "type": "Any"
                }
            ],
            "class": "FormCompanyComponent"
        },
        {
            "file": "src/app/route/company/formCompany/formCompany.component.ts",
            "line": 233,
            "description": "deselect on all in multiselect dropdown",
            "itemtype": "method",
            "name": "onDeSelectAll",
            "params": [
                {
                    "name": "items",
                    "description": "deselected all items",
                    "type": "Any"
                }
            ],
            "class": "FormCompanyComponent"
        },
        {
            "file": "src/app/route/company/formCompany/formCompany.component.ts",
            "line": 242,
            "description": "This method calls when check or uncheck subtype checkbox push or splice data from rec.companyType",
            "itemtype": "method",
            "name": "OnCheckboxSelect",
            "params": [
                {
                    "name": "id",
                    "description": "ID of Company",
                    "type": "Number"
                },
                {
                    "name": "idParent",
                    "description": "ID of Company Type",
                    "type": "Number"
                },
                {
                    "name": "event",
                    "description": "event object",
                    "type": "Any"
                }
            ],
            "class": "FormCompanyComponent"
        },
        {
            "file": "src/app/route/company/formCompany/formCompany.component.ts",
            "line": 270,
            "description": "This method will set all subtypes based on selection of company type",
            "itemtype": "method",
            "name": "deSelectComType",
            "params": [
                {
                    "name": "id",
                    "description": "ID of Company Type",
                    "type": "Number"
                }
            ],
            "class": "FormCompanyComponent"
        },
        {
            "file": "src/app/route/company/formCompany/formCompany.component.ts",
            "line": 318,
            "description": "This method checks which company type is selected and based on that set subtypes of that type",
            "itemtype": "method",
            "name": "checkCompanyType",
            "params": [
                {
                    "name": "selectedType",
                    "description": "Company Type",
                    "type": "Any"
                },
                {
                    "name": "deSelect",
                    "description": "Flag to identify type is deselected",
                    "type": "Any"
                }
            ],
            "class": "FormCompanyComponent"
        },
        {
            "file": "src/app/route/company/formCompany/formCompany.component.ts",
            "line": 398,
            "description": "This method will call when state is changed from address",
            "itemtype": "method",
            "name": "onStateCityChange",
            "params": [
                {
                    "name": "state",
                    "description": "Selected State",
                    "type": "Boolean"
                }
            ],
            "class": "FormCompanyComponent"
        },
        {
            "file": "src/app/route/company/formCompany/formCompany.component.ts",
            "line": 415,
            "description": "This method add address of company",
            "itemtype": "method",
            "name": "addAddress",
            "class": "FormCompanyComponent"
        },
        {
            "file": "src/app/route/company/formCompany/formCompany.component.ts",
            "line": 442,
            "description": "This method will edit address of company",
            "itemtype": "method",
            "name": "editAddress",
            "params": [
                {
                    "name": "ad",
                    "description": "Address Object",
                    "type": "Address"
                },
                {
                    "name": "idx",
                    "description": "ID of Address",
                    "type": "Number"
                }
            ],
            "class": "FormCompanyComponent"
        },
        {
            "file": "src/app/route/company/formCompany/formCompany.component.ts",
            "line": 453,
            "description": "This method will delete company address",
            "itemtype": "method",
            "name": "deleteAddress",
            "params": [
                {
                    "name": "ad",
                    "description": "Address Object",
                    "type": "Address"
                }
            ],
            "class": "FormCompanyComponent"
        },
        {
            "file": "src/app/route/company/formCompany/formCompany.component.ts",
            "line": 462,
            "description": "This method save company record in database",
            "itemtype": "method",
            "name": "save",
            "class": "FormCompanyComponent"
        },
        {
            "file": "src/app/route/company/formCompany/formCompany.component.ts",
            "line": 518,
            "description": "This method get company information from bis",
            "itemtype": "method",
            "name": "getCompanyInfo",
            "params": [
                {
                    "name": "cInfo",
                    "description": "Company Object",
                    "type": "Any"
                }
            ],
            "class": "FormCompanyComponent"
        },
        {
            "file": "src/app/route/company/formCompany/formCompany.component.ts",
            "line": 566,
            "description": "This method update all fields in company form which is fetched from BIS",
            "itemtype": "method",
            "name": "updateFormFieldsFromBIS",
            "params": [
                {
                    "name": "res",
                    "description": "BIS Result",
                    "type": "Any"
                }
            ],
            "class": "FormCompanyComponent"
        },
        {
            "file": "src/app/route/company/formCompany/formCompany.component.ts",
            "line": 611,
            "description": "This method open popup for matching Company list",
            "itemtype": "method",
            "name": "openModalBisCompanyList",
            "params": [
                {
                    "name": "template",
                    "description": "TemplateRef Object",
                    "type": "TemplateRef"
                }
            ],
            "class": "FormCompanyComponent"
        },
        {
            "file": "src/app/route/company/formCompany/formCompany.component.ts",
            "line": 620,
            "description": "This method select company type",
            "itemtype": "method",
            "name": "selectCompanyTypeFn",
            "params": [
                {
                    "name": "value",
                    "description": "company type",
                    "type": "Any"
                },
                {
                    "name": "event",
                    "description": "Event object",
                    "type": "Any"
                }
            ],
            "class": "FormCompanyComponent"
        },
        {
            "file": "src/app/route/company/formCompany/formCompany.component.ts",
            "line": 636,
            "description": "This method will format phone number",
            "class": "FormCompanyComponent"
        },
        {
            "file": "src/app/route/company/formCompany/formCompany.component.ts",
            "line": 643,
            "description": "This method checks given data is number or not",
            "itemtype": "method",
            "name": "isNumber",
            "params": [
                {
                    "name": "evt",
                    "description": "request data",
                    "type": "Any"
                }
            ],
            "class": "FormCompanyComponent"
        },
        {
            "file": "src/app/route/company/formCompany/formCompany.component.ts",
            "line": 657,
            "description": "This method checks address require fields",
            "itemtype": "method",
            "name": "checkAddressFields",
            "params": [
                {
                    "name": "fieldVal",
                    "description": "Value of Field",
                    "type": "Any"
                }
            ],
            "class": "FormCompanyComponent"
        },
        {
            "file": "src/app/route/company/getinfo/getinfo.component.ts",
            "line": 57,
            "description": "This method define all services that requires in whole class",
            "itemtype": "method",
            "name": "constructor",
            "class": "GetInfoComponent"
        },
        {
            "file": "src/app/route/company/getinfo/getinfo.component.ts",
            "line": 75,
            "description": "This method will call when form loads first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "GetInfoComponent"
        },
        {
            "file": "src/app/route/company/getinfo/getinfo.component.ts",
            "line": 97,
            "description": "This method get company info from BIS fo given company type and licence number",
            "itemtype": "method",
            "name": "getCompanyInfo",
            "params": [
                {
                    "name": "businessName",
                    "description": "Company Type",
                    "type": "String"
                },
                {
                    "name": "licenceNumber",
                    "description": "Company licence number",
                    "type": "Number"
                }
            ],
            "class": "GetInfoComponent"
        },
        {
            "file": "src/app/route/company/getinfo/getinfo.component.ts",
            "line": 146,
            "description": "This method set all BIS detail in to company form",
            "itemtype": "method",
            "name": "getBisDetails",
            "class": "GetInfoComponent"
        },
        {
            "file": "src/app/route/company/getinfo/getinfo.component.ts",
            "line": 180,
            "description": "This method get insurance detail of company",
            "itemtype": "method",
            "name": "scrapBisPage",
            "params": [
                {
                    "name": "licenseNo",
                    "description": "Licence Number",
                    "type": "String"
                },
                {
                    "name": "licenseType",
                    "description": "Licence Type",
                    "type": "String"
                }
            ],
            "class": "GetInfoComponent"
        },
        {
            "file": "src/app/route/company/getinfo/getinfo.component.ts",
            "line": 227,
            "description": "This method converts given string into title case",
            "itemtype": "method",
            "name": "toTitleCase",
            "params": [
                {
                    "name": "str",
                    "description": "request string",
                    "type": "String"
                }
            ],
            "class": "GetInfoComponent"
        },
        {
            "file": "src/app/route/company/getinfo/getinfo.component.ts",
            "line": 236,
            "description": "This method save company bis info",
            "itemtype": "method",
            "name": "saveBisInfo",
            "class": "GetInfoComponent"
        },
        {
            "file": "src/app/route/company/company.component.ts",
            "line": 70,
            "description": "Get info form",
            "itemtype": "property",
            "name": "getinfo",
            "class": "CompanyComponent"
        },
        {
            "file": "src/app/route/company/company.component.ts",
            "line": 77,
            "description": "Form for Company Add/Edit",
            "itemtype": "property",
            "name": "formCompany",
            "class": "CompanyComponent"
        },
        {
            "file": "src/app/route/company/company.component.ts",
            "line": 84,
            "description": "Form for Contact Add/Edit",
            "itemtype": "property",
            "name": "formContact",
            "class": "CompanyComponent"
        },
        {
            "file": "src/app/route/company/company.component.ts",
            "line": 91,
            "description": "Form for Task Add/Edit",
            "itemtype": "property",
            "name": "addtask",
            "class": "CompanyComponent"
        },
        {
            "file": "src/app/route/company/company.component.ts",
            "line": 98,
            "description": "Form for Progression Note Add/Edit",
            "itemtype": "property",
            "name": "progressionnote",
            "class": "CompanyComponent"
        },
        {
            "file": "src/app/route/company/company.component.ts",
            "line": 105,
            "description": "Form for Job Add/Edit",
            "itemtype": "property",
            "name": "formJob",
            "class": "CompanyComponent"
        },
        {
            "file": "src/app/route/company/company.component.ts",
            "line": 112,
            "description": "Form for Send Email",
            "itemtype": "property",
            "name": "sendemail",
            "class": "CompanyComponent"
        },
        {
            "file": "src/app/route/company/company.component.ts",
            "line": 149,
            "description": "This method define all services that requires in whole class",
            "itemtype": "method",
            "name": "constructor",
            "class": "CompanyComponent"
        },
        {
            "file": "src/app/route/company/company.component.ts",
            "line": 195,
            "description": "This method will call when form loads first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "CompanyComponent"
        },
        {
            "file": "src/app/route/company/company.component.ts",
            "line": 239,
            "class": "CompanyComponent"
        },
        {
            "file": "src/app/route/company/company.component.ts",
            "line": 253,
            "description": "This method set permission to this module",
            "itemtype": "method",
            "name": "permission",
            "params": [
                {
                    "name": "constantValues",
                    "description": "Rights value",
                    "type": "Any"
                }
            ],
            "class": "CompanyComponent"
        },
        {
            "file": "src/app/route/company/company.component.ts",
            "line": 315,
            "description": "This method load data table",
            "itemtype": "method",
            "name": "loadDataTable",
            "class": "CompanyComponent"
        },
        {
            "file": "src/app/route/company/company.component.ts",
            "line": 487,
            "description": "This method calls when user moved another component from current coponent",
            "itemtype": "method",
            "name": "ngOnDestroy",
            "class": "CompanyComponent"
        },
        {
            "file": "src/app/route/company/company.component.ts",
            "line": 495,
            "description": "This method export company data",
            "itemtype": "method",
            "name": "exportData",
            "params": [
                {
                    "name": "str",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "CompanyComponent"
        },
        {
            "file": "src/app/route/company/company.component.ts",
            "line": 508,
            "description": "This method reload datatable",
            "itemtype": "method",
            "name": "reload",
            "class": "CompanyComponent"
        },
        {
            "file": "src/app/route/company/company.component.ts",
            "line": 518,
            "description": "This method open send email popup",
            "itemtype": "method",
            "name": "openModalSendEmail",
            "params": [
                {
                    "name": "template",
                    "description": "TemplateRef Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "ID",
                    "type": "Number"
                }
            ],
            "class": "CompanyComponent"
        },
        {
            "file": "src/app/route/company/company.component.ts",
            "line": 528,
            "description": "This method open get info popup",
            "itemtype": "method",
            "name": "openModalGetInfo",
            "params": [
                {
                    "name": "template",
                    "description": "TemplateRef Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "ID",
                    "type": "Number"
                }
            ],
            "class": "CompanyComponent"
        },
        {
            "file": "src/app/route/company/company.component.ts",
            "line": 552,
            "description": "This method will fetch company information from BIS",
            "itemtype": "method",
            "name": "getCompanyInfo",
            "params": [
                {
                    "name": "companyTypes",
                    "description": "All Company Types",
                    "type": "Any"
                },
                {
                    "name": "businessName",
                    "description": "Company Type",
                    "type": "String"
                },
                {
                    "name": "licenceNumber",
                    "description": "Licence Number",
                    "type": "Number"
                },
                {
                    "name": "template",
                    "description": "template ref object",
                    "type": "Any"
                }
            ],
            "class": "CompanyComponent"
        },
        {
            "file": "src/app/route/company/company.component.ts",
            "line": 599,
            "description": "This method open contact popup",
            "itemtype": "method",
            "name": "_openModalContact",
            "params": [
                {
                    "name": "template",
                    "description": "TemplateRef Object",
                    "type": "Any"
                }
            ],
            "class": "CompanyComponent"
        },
        {
            "file": "src/app/route/company/company.component.ts",
            "line": 608,
            "description": "This method open contact popup",
            "itemtype": "method",
            "name": "openModalContact",
            "params": [
                {
                    "name": "template",
                    "description": "TemplateRef Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "ID",
                    "type": "Number"
                }
            ],
            "class": "CompanyComponent"
        },
        {
            "file": "src/app/route/company/company.component.ts",
            "line": 622,
            "description": "This method open company popup",
            "itemtype": "method",
            "name": "_openModal",
            "params": [
                {
                    "name": "template",
                    "description": "TemplateRef Object",
                    "type": "Any"
                }
            ],
            "class": "CompanyComponent"
        },
        {
            "file": "src/app/route/company/company.component.ts",
            "line": 631,
            "description": "This method open company popup",
            "itemtype": "method",
            "name": "openModal",
            "params": [
                {
                    "name": "template",
                    "description": "TemplateRef Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "ID",
                    "type": "Number"
                }
            ],
            "class": "CompanyComponent"
        },
        {
            "file": "src/app/route/company/company.component.ts",
            "line": 657,
            "description": "This method will delete company",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "ID of Company",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "Selected Company Row",
                    "type": "Any"
                }
            ],
            "class": "CompanyComponent"
        },
        {
            "file": "src/app/route/company/company.component.ts",
            "line": 676,
            "description": "This method set search in datatable",
            "itemtype": "method",
            "name": "search",
            "params": [
                {
                    "name": "srch",
                    "description": "Search Criteria",
                    "type": "String"
                }
            ],
            "class": "CompanyComponent"
        },
        {
            "file": "src/app/route/company/company.component.ts",
            "line": 685,
            "description": "This method open company detail page",
            "itemtype": "method",
            "name": "onOpenCompanyDetail",
            "params": [
                {
                    "name": "obj",
                    "description": "Company Object",
                    "type": "Any"
                }
            ],
            "class": "CompanyComponent"
        },
        {
            "file": "src/app/route/company/company.component.ts",
            "line": 694,
            "description": "This method will call when click on View on BIS link of Company",
            "itemtype": "method",
            "name": "goToBis",
            "params": [
                {
                    "name": "bisTracking",
                    "description": "Company ID",
                    "type": "Any"
                }
            ],
            "class": "CompanyComponent"
        },
        {
            "file": "src/app/route/company/company.component.ts",
            "line": 733,
            "description": "This method calls after company record save",
            "itemtype": "method",
            "name": "onSave",
            "params": [
                {
                    "name": "comp",
                    "description": "Company record object",
                    "type": "Company"
                },
                {
                    "name": "evt",
                    "description": "Event Object",
                    "type": "Any"
                }
            ],
            "class": "CompanyComponent"
        },
        {
            "file": "src/app/route/company/company.component.ts",
            "line": 750,
            "description": "This method apply filter and reload datatable",
            "itemtype": "method",
            "name": "applyCompanyFilter",
            "class": "CompanyComponent"
        },
        {
            "file": "src/app/route/company/company.component.ts",
            "line": 764,
            "description": "Get selected item from multiselect dropdown",
            "itemtype": "method",
            "name": "onItemSelect",
            "params": [
                {
                    "name": "item",
                    "description": "selected item",
                    "type": "Any"
                }
            ],
            "class": "CompanyComponent"
        },
        {
            "file": "src/app/route/company/company.component.ts",
            "line": 773,
            "description": "Deselect item from multiselect dropdown",
            "itemtype": "method",
            "name": "OnItemDeSelect",
            "params": [
                {
                    "name": "item",
                    "description": "deselected item",
                    "type": "Any"
                }
            ],
            "class": "CompanyComponent"
        },
        {
            "file": "src/app/route/company/company.component.ts",
            "line": 782,
            "description": "select on all in multiselect dropdown",
            "itemtype": "method",
            "name": "onSelectAll",
            "params": [
                {
                    "name": "items",
                    "description": "selected all items",
                    "type": "Any"
                }
            ],
            "class": "CompanyComponent"
        },
        {
            "file": "src/app/route/company/company.component.ts",
            "line": 791,
            "description": "deselect on all in multiselect dropdown",
            "itemtype": "method",
            "name": "onDeSelectAll",
            "params": [
                {
                    "name": "items",
                    "description": "deselected all items",
                    "type": "Any"
                }
            ],
            "class": "CompanyComponent"
        },
        {
            "file": "src/app/route/company/company.component.ts",
            "line": 800,
            "description": "This method open popup for add task",
            "itemtype": "method",
            "name": "openModalFormAddTask",
            "params": [
                {
                    "name": "template",
                    "description": "TemplateRef Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "ID",
                    "type": "Number"
                }
            ],
            "class": "CompanyComponent"
        },
        {
            "file": "src/app/route/company/company.component.ts",
            "line": 813,
            "description": "This method open popup for job",
            "itemtype": "method",
            "name": "openJobModal",
            "params": [
                {
                    "name": "template",
                    "description": "TemplateRef Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "ID of Company",
                    "type": "Number"
                },
                {
                    "name": "contactId",
                    "description": "ID of Contact",
                    "type": "Number"
                }
            ],
            "class": "CompanyComponent"
        },
        {
            "file": "src/app/route/company/company.component.ts",
            "line": 828,
            "description": "This method open popup for job",
            "itemtype": "method",
            "name": "openJobModal",
            "params": [
                {
                    "name": "template",
                    "description": "TemplateRef Object",
                    "type": "Any"
                }
            ],
            "class": "CompanyComponent"
        },
        {
            "file": "src/app/route/company/company.services.ts",
            "line": 26,
            "description": "This method get all company records for datatable",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "cfg",
                    "description": "Search criteria",
                    "type": "Any"
                }
            ],
            "class": "CompanyServices"
        },
        {
            "file": "src/app/route/company/company.services.ts",
            "line": 37,
            "description": "This method redirect to company list",
            "itemtype": "method",
            "name": "list",
            "class": "CompanyServices"
        },
        {
            "file": "src/app/route/company/company.services.ts",
            "line": 45,
            "description": "This method will create company record",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "data",
                    "description": "company object",
                    "type": "Company"
                }
            ],
            "class": "CompanyServices"
        },
        {
            "file": "src/app/route/company/company.services.ts",
            "line": 55,
            "description": "This method will update company record",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "id",
                    "description": "ID of Company",
                    "type": "Number"
                },
                {
                    "name": "data",
                    "description": "company object",
                    "type": "Company"
                }
            ],
            "class": "CompanyServices"
        },
        {
            "file": "src/app/route/company/company.services.ts",
            "line": 66,
            "description": "This method will get company record from given ID",
            "itemtype": "method",
            "name": "getById",
            "params": [
                {
                    "name": "id",
                    "description": "ID of Company",
                    "type": "Number"
                }
            ],
            "class": "CompanyServices"
        },
        {
            "file": "src/app/route/company/company.services.ts",
            "line": 75,
            "description": "This method will delete company record",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "ID of company",
                    "type": "Number"
                }
            ],
            "class": "CompanyServices"
        },
        {
            "file": "src/app/route/company/company.services.ts",
            "line": 84,
            "description": "This method get BIS coompany information",
            "itemtype": "method",
            "name": "getBusinessFromBis",
            "params": [
                {
                    "name": "name",
                    "description": "Business Name",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "Licence Type",
                    "type": "String"
                },
                {
                    "name": "licenceNumber",
                    "description": "Licence Number",
                    "type": "Any"
                }
            ],
            "class": "CompanyServices"
        },
        {
            "file": "src/app/route/company/company.services.ts",
            "line": 96,
            "description": "This method set bis page",
            "itemtype": "method",
            "name": "getBisPage",
            "params": [
                {
                    "name": "lId",
                    "description": "ID of Company",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "Company Type",
                    "type": "String"
                }
            ],
            "class": "CompanyServices"
        },
        {
            "file": "src/app/route/company/company.services.ts",
            "line": 106,
            "description": "This method get Company data",
            "itemtype": "method",
            "name": "getCompanyData",
            "class": "CompanyServices"
        },
        {
            "file": "src/app/route/company/company.services.ts",
            "line": 114,
            "description": "This method get contacts of company",
            "itemtype": "method",
            "name": "getContacts",
            "params": [
                {
                    "name": "id",
                    "description": "ID of Company",
                    "type": "Number"
                }
            ],
            "class": "CompanyServices"
        },
        {
            "file": "src/app/route/company/company.services.ts",
            "line": 123,
            "description": "This method get jobs of company",
            "itemtype": "method",
            "name": "getJobs",
            "params": [
                {
                    "name": "id",
                    "description": "ID of Company",
                    "type": "Number"
                }
            ],
            "class": "CompanyServices"
        },
        {
            "file": "src/app/route/company/company.services.ts",
            "line": 132,
            "description": "This method get all company types",
            "itemtype": "method",
            "name": "getCompanyTypes",
            "class": "CompanyServices"
        },
        {
            "file": "src/app/route/company/company.services.ts",
            "line": 140,
            "description": "This method get all company types for dropdown",
            "itemtype": "method",
            "name": "getCompanyTypesDD",
            "class": "CompanyServices"
        },
        {
            "file": "src/app/route/company/company.services.ts",
            "line": 148,
            "description": "This method get all company data for dropdown",
            "itemtype": "method",
            "name": "getCompanyDropdown",
            "class": "CompanyServices"
        },
        {
            "file": "src/app/route/company/company.services.ts",
            "line": 156,
            "description": "This method get all contacts data of company for dropdown",
            "itemtype": "method",
            "name": "getContactOfComDD",
            "params": [
                {
                    "name": "companyId",
                    "description": "Company ID",
                    "type": "Number"
                }
            ],
            "class": "CompanyServices"
        },
        {
            "file": "src/app/route/company/company.services.ts",
            "line": 165,
            "description": "This method send email from company",
            "itemtype": "method",
            "name": "sendmail",
            "params": [
                {
                    "name": "data",
                    "description": "Data for Send Email",
                    "type": "Any"
                },
                {
                    "name": "idCompany",
                    "description": "ID of Company",
                    "type": "Number"
                }
            ],
            "class": "CompanyServices"
        },
        {
            "file": "src/app/route/company/company.services.ts",
            "line": 176,
            "description": "This method save extra attchment in email",
            "itemtype": "method",
            "name": "saveExtraAttachment",
            "params": [
                {
                    "name": "data",
                    "description": "Data for Attachment",
                    "type": "Any"
                }
            ],
            "class": "CompanyServices"
        },
        {
            "file": "src/app/route/companytaxtypes/companytaxtypesform/companytaxtypesform.component.ts",
            "line": 44,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "CompanyTaxTypesForm"
        },
        {
            "file": "src/app/route/companytaxtypes/companytaxtypesform/companytaxtypesform.component.ts",
            "line": 75,
            "description": "This method is used to save record",
            "itemtype": "method",
            "name": "saveCompanyTax",
            "class": "CompanyTaxTypesForm"
        },
        {
            "file": "src/app/route/companytaxtypes/companytaxtypes.services.ts",
            "line": 21,
            "description": "Get all records from database in datatable format",
            "itemtype": "method",
            "name": "getRecords",
            "params": [
                {
                    "name": "cfg",
                    "description": "it is a string type which is used for filter data from data table",
                    "type": "String"
                }
            ],
            "class": "CompanyTaxTypesServices"
        },
        {
            "file": "src/app/route/companytaxtypes/companytaxtypes.services.ts",
            "line": 32,
            "description": "This method is used to create a new record in database",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "CompanyTaxTypesany"
                }
            ],
            "class": "CompanyTaxTypesServices"
        },
        {
            "file": "src/app/route/companytaxtypes/companytaxtypes.services.ts",
            "line": 42,
            "description": "This method is used to update existing record in database",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "CompanyTaxTypes"
                },
                {
                    "name": "id",
                    "description": "id of company tax type for updating specific record",
                    "type": "Number"
                }
            ],
            "class": "CompanyTaxTypesServices"
        },
        {
            "file": "src/app/route/companytaxtypes/companytaxtypes.services.ts",
            "line": 52,
            "description": "Get single record from database",
            "itemtype": "method",
            "name": "getById",
            "params": [
                {
                    "name": "id",
                    "description": "id of {{name}} for getting specific record",
                    "type": "Number"
                }
            ],
            "class": "CompanyTaxTypesServices"
        },
        {
            "file": "src/app/route/companytaxtypes/companytaxtypes.services.ts",
            "line": 61,
            "description": "This method is used to delete records from database",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "of {{name}} to delete",
                    "type": "Number"
                }
            ],
            "class": "CompanyTaxTypesServices"
        },
        {
            "file": "src/app/route/companytypes/companytypesform/companytypesform.component.ts",
            "line": 43,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "CompanyTypesForm"
        },
        {
            "file": "src/app/route/companytypes/companytypesform/companytypesform.component.ts",
            "line": 75,
            "description": "This method is used to save record",
            "itemtype": "method",
            "name": "saveCompanyTypes",
            "class": "CompanyTypesForm"
        },
        {
            "file": "src/app/route/companytypes/companytypes.component.ts",
            "line": 23,
            "description": "companytypesform add/edit form",
            "itemtype": "property",
            "name": "companytypesform",
            "class": "CompanyTypesComponent"
        },
        {
            "file": "src/app/route/companytypes/companytypes.component.ts",
            "line": 68,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "CompanyTypesComponent"
        },
        {
            "file": "src/app/route/companytypes/companytypes.component.ts",
            "line": 125,
            "description": "This method will be destroy all elements and other values from whole module",
            "itemtype": "method",
            "name": "ngOnDestroy",
            "class": "CompanyTypesComponent"
        },
        {
            "file": "src/app/route/companytypes/companytypes.component.ts",
            "line": 134,
            "description": "This method is used for filter/search records from datatable",
            "itemtype": "method",
            "name": "searchCompanyTypes",
            "params": [
                {
                    "name": "srch",
                    "description": "type any which contains string that can be filtered from datatable",
                    "type": "String"
                }
            ],
            "class": "CompanyTypesComponent"
        },
        {
            "file": "src/app/route/companytypes/companytypes.component.ts",
            "line": 143,
            "description": "This method is used to open modal popup for openModalForm",
            "itemtype": "method",
            "name": "openModalForm",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                },
                {
                    "name": "isNew",
                    "description": "it is optional which contains true if it is new record and false when it is old record",
                    "type": "Boolean"
                }
            ],
            "class": "CompanyTypesComponent"
        },
        {
            "file": "src/app/route/companytypes/companytypes.component.ts",
            "line": 158,
            "description": "This method is used to reload datatable",
            "itemtype": "method",
            "name": "reload",
            "class": "CompanyTypesComponent"
        },
        {
            "file": "src/app/route/companytypes/companytypes.component.ts",
            "line": 167,
            "description": "This method is used to delete record",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "type which contains id to delete record",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "type which contains entire selected row",
                    "type": "Any"
                }
            ],
            "class": "CompanyTypesComponent"
        },
        {
            "file": "src/app/route/companytypes/companytypes.services.ts",
            "line": 20,
            "description": "Get all records from database in datatable format",
            "itemtype": "method",
            "name": "getRecords",
            "class": "CompanyTypesServices"
        },
        {
            "file": "src/app/route/companytypes/companytypes.services.ts",
            "line": 30,
            "description": "This method is used to create a new record in database",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                }
            ],
            "class": "CompanyTypesServices"
        },
        {
            "file": "src/app/route/companytypes/companytypes.services.ts",
            "line": 40,
            "description": "This method is used to update existing record in database",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "id of Company Types for updating specific record",
                    "type": "Number"
                }
            ],
            "class": "CompanyTypesServices"
        },
        {
            "file": "src/app/route/companytypes/companytypes.services.ts",
            "line": 50,
            "description": "Get single record from database",
            "itemtype": "method",
            "name": "getById",
            "params": [
                {
                    "name": "id",
                    "description": "id of Company Types for getting specific record",
                    "type": "Number"
                }
            ],
            "class": "CompanyTypesServices"
        },
        {
            "file": "src/app/route/companytypes/companytypes.services.ts",
            "line": 59,
            "description": "This method is used to delete records from database",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "of Company Types to delete",
                    "type": "Number"
                }
            ],
            "class": "CompanyTypesServices"
        },
        {
            "file": "src/app/route/constructionclassifications/constructionclassificationsform/constructionclassificationsform.component.ts",
            "line": 43,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "ConstructionClassificationsForm"
        },
        {
            "file": "src/app/route/constructionclassifications/constructionclassificationsform/constructionclassificationsform.component.ts",
            "line": 74,
            "description": "This method is used to save record",
            "itemtype": "method",
            "name": "saveConstruction",
            "class": "ConstructionClassificationsForm"
        },
        {
            "file": "src/app/route/constructionclassifications/constructionclassifications.component.ts",
            "line": 23,
            "description": "constructionclassificationsform add/edit form",
            "itemtype": "property",
            "name": "constructionclassificationsform",
            "class": "ConstructionClassificationsComponent"
        },
        {
            "file": "src/app/route/constructionclassifications/constructionclassifications.component.ts",
            "line": 66,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "ConstructionClassificationsComponent"
        },
        {
            "file": "src/app/route/constructionclassifications/constructionclassifications.component.ts",
            "line": 123,
            "description": "This method will be destroy all elements and other values from whole module",
            "itemtype": "method",
            "name": "ngOnDestroy",
            "class": "ConstructionClassificationsComponent"
        },
        {
            "file": "src/app/route/constructionclassifications/constructionclassifications.component.ts",
            "line": 132,
            "description": "This method is used for filter/search records from datatable",
            "itemtype": "method",
            "name": "searchConstructionClassifications",
            "params": [
                {
                    "name": "srch",
                    "description": "type any which contains string that can be filtered from datatable",
                    "type": "String"
                }
            ],
            "class": "ConstructionClassificationsComponent"
        },
        {
            "file": "src/app/route/constructionclassifications/constructionclassifications.component.ts",
            "line": 141,
            "description": "This method is used to open modal popup for openModalForm",
            "itemtype": "method",
            "name": "openModalForm",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                },
                {
                    "name": "isNew",
                    "description": "it is optional which contains true if it is new record and false when it is old record",
                    "type": "Boolean"
                }
            ],
            "class": "ConstructionClassificationsComponent"
        },
        {
            "file": "src/app/route/constructionclassifications/constructionclassifications.component.ts",
            "line": 156,
            "description": "This method is used to reload datatable",
            "itemtype": "method",
            "name": "reload",
            "class": "ConstructionClassificationsComponent"
        },
        {
            "file": "src/app/route/constructionclassifications/constructionclassifications.component.ts",
            "line": 165,
            "description": "This method is used to delete record",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "type which contains id to delete record",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "type which contains entire selected row",
                    "type": "Any"
                }
            ],
            "class": "ConstructionClassificationsComponent"
        },
        {
            "file": "src/app/route/constructionclassifications/constructionclassifications.services.ts",
            "line": 20,
            "description": "Get all records from database in datatable format",
            "itemtype": "method",
            "name": "getRecords",
            "class": "ConstructionClassificationsServices"
        },
        {
            "file": "src/app/route/constructionclassifications/constructionclassifications.services.ts",
            "line": 30,
            "description": "This method is used to create a new record in database",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                }
            ],
            "class": "ConstructionClassificationsServices"
        },
        {
            "file": "src/app/route/constructionclassifications/constructionclassifications.services.ts",
            "line": 40,
            "description": "This method is used to update existing record in database",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "id of Construction classification for updating specific record",
                    "type": "Number"
                }
            ],
            "class": "ConstructionClassificationsServices"
        },
        {
            "file": "src/app/route/constructionclassifications/constructionclassifications.services.ts",
            "line": 50,
            "description": "Get single record from database",
            "itemtype": "method",
            "name": "getById",
            "params": [
                {
                    "name": "id",
                    "description": "id of Construction classification for getting specific record",
                    "type": "Number"
                }
            ],
            "class": "ConstructionClassificationsServices"
        },
        {
            "file": "src/app/route/constructionclassifications/constructionclassifications.services.ts",
            "line": 59,
            "description": "This method is used to delete records from database",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "of Construction classification to delete",
                    "type": "Number"
                }
            ],
            "class": "ConstructionClassificationsServices"
        },
        {
            "file": "src/app/route/contact/contactDetail/contactDetail.component.ts",
            "line": 35,
            "description": "This property is used when any trigger based action occurs",
            "itemtype": "property",
            "name": "onClose",
            "class": "ContactDetailComponent"
        },
        {
            "file": "src/app/route/contact/contactDetail/contactDetail.component.ts",
            "line": 41,
            "description": "formContact add/edit form",
            "itemtype": "property",
            "name": "formContact",
            "class": "ContactDetailComponent"
        },
        {
            "file": "src/app/route/contact/contactDetail/contactDetail.component.ts",
            "line": 48,
            "description": "formJob add/edit form",
            "itemtype": "property",
            "name": "formJob",
            "class": "ContactDetailComponent"
        },
        {
            "file": "src/app/route/contact/contactDetail/contactDetail.component.ts",
            "line": 55,
            "description": "addtask add/edit form",
            "itemtype": "property",
            "name": "addtask",
            "class": "ContactDetailComponent"
        },
        {
            "file": "src/app/route/contact/contactDetail/contactDetail.component.ts",
            "line": 62,
            "description": "sendemail add/edit form",
            "itemtype": "property",
            "name": "sendemail",
            "class": "ContactDetailComponent"
        },
        {
            "file": "src/app/route/contact/contactDetail/contactDetail.component.ts",
            "line": 143,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "ContactDetailComponent"
        },
        {
            "file": "src/app/route/contact/contactDetail/contactDetail.component.ts",
            "line": 182,
            "description": "This method is used to check permission of component",
            "itemtype": "method",
            "name": "permission",
            "params": [
                {
                    "name": "constantValues",
                    "description": "type request Object",
                    "type": "Any"
                }
            ],
            "class": "ContactDetailComponent"
        },
        {
            "file": "src/app/route/contact/contactDetail/contactDetail.component.ts",
            "line": 228,
            "description": "This method is used for triggering an event to close popup and refresh component",
            "itemtype": "method",
            "name": "getBack",
            "class": "ContactDetailComponent"
        },
        {
            "file": "src/app/route/contact/contactDetail/contactDetail.component.ts",
            "line": 236,
            "description": "This method is used to save record",
            "itemtype": "method",
            "name": "onSave",
            "params": [
                {
                    "name": "object",
                    "description": "object is an contact object",
                    "type": "Any"
                },
                {
                    "name": "evt",
                    "description": "evt is used as an input element",
                    "type": "Any"
                }
            ],
            "class": "ContactDetailComponent"
        },
        {
            "file": "src/app/route/contact/contactDetail/contactDetail.component.ts",
            "line": 279,
            "description": "This method is used to join string",
            "itemtype": "method",
            "name": "join",
            "params": [
                {
                    "name": "arr",
                    "description": "arr is an array which contains various fields",
                    "type": "String"
                },
                {
                    "name": "s",
                    "description": "s is used as seprator from which we need to start append",
                    "type": "String"
                }
            ],
            "class": "ContactDetailComponent"
        },
        {
            "file": "src/app/route/contact/contactDetail/contactDetail.component.ts",
            "line": 289,
            "description": "This method is used to open modal popup for open Modal Form",
            "itemtype": "method",
            "name": "_openModal",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                }
            ],
            "class": "ContactDetailComponent"
        },
        {
            "file": "src/app/route/contact/contactDetail/contactDetail.component.ts",
            "line": 298,
            "description": "This method is used to open modal popup for openModal",
            "itemtype": "method",
            "name": "openModal",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                }
            ],
            "class": "ContactDetailComponent"
        },
        {
            "file": "src/app/route/contact/contactDetail/contactDetail.component.ts",
            "line": 318,
            "description": "This method is used as action of contact widget",
            "itemtype": "method",
            "name": "onContactWidgetItemClick",
            "params": [
                {
                    "name": "key",
                    "description": "key is the id of which the action is to be performed",
                    "type": "Number"
                }
            ],
            "class": "ContactDetailComponent"
        },
        {
            "file": "src/app/route/contact/contactDetail/contactDetail.component.ts",
            "line": 346,
            "description": "This method is used to open modal popup for sending an email",
            "itemtype": "method",
            "name": "openModalSendEmail",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                }
            ],
            "class": "ContactDetailComponent"
        },
        {
            "file": "src/app/route/contact/contactDetail/contactDetail.component.ts",
            "line": 356,
            "description": "This method is used to delete records from database",
            "itemtype": "method",
            "name": "deleteContact",
            "params": [
                {
                    "name": "id",
                    "description": "id of contact",
                    "type": "Number"
                }
            ],
            "class": "ContactDetailComponent"
        },
        {
            "file": "src/app/route/contact/contactDetail/contactDetail.component.ts",
            "line": 370,
            "description": "This method is used to open modal popup for job",
            "itemtype": "method",
            "name": "openJobModal",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                },
                {
                    "name": "contactId",
                    "description": "contact id for prefilling contact",
                    "type": "Number"
                }
            ],
            "class": "ContactDetailComponent"
        },
        {
            "file": "src/app/route/contact/contactDetail/contactDetail.component.ts",
            "line": 385,
            "description": "This method is used to open modal popup for opening job modal",
            "itemtype": "method",
            "name": "_openJobModal",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                }
            ],
            "class": "ContactDetailComponent"
        },
        {
            "file": "src/app/route/contact/contactDetail/contactDetail.component.ts",
            "line": 394,
            "description": "This method is used to open modal popup for contact",
            "itemtype": "method",
            "name": "_openModalContact",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                }
            ],
            "class": "ContactDetailComponent"
        },
        {
            "file": "src/app/route/contact/contactDetail/contactDetail.component.ts",
            "line": 403,
            "description": "This method is used to open modal popup for contact form",
            "itemtype": "method",
            "name": "openModalContact",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                }
            ],
            "class": "ContactDetailComponent"
        },
        {
            "file": "src/app/route/contact/contactDetail/contactDetail.component.ts",
            "line": 430,
            "description": "This method is used for setting the height of grid",
            "itemtype": "method",
            "name": "detailsGridHeight",
            "class": "ContactDetailComponent"
        },
        {
            "file": "src/app/route/contact/contactDetail/contactDetail.component.ts",
            "line": 439,
            "description": "This method is used for switching tabs in contact details",
            "itemtype": "method",
            "name": "tabChange",
            "params": [
                {
                    "name": "val",
                    "description": "val is used to make which tab active and other inactive",
                    "type": "Any"
                }
            ],
            "class": "ContactDetailComponent"
        },
        {
            "file": "src/app/route/contact/contactDetail/contactDetail.component.ts",
            "line": 463,
            "description": "This method is used to open modal popup for opening modal task",
            "itemtype": "method",
            "name": "openModalFormAddTask",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                }
            ],
            "class": "ContactDetailComponent"
        },
        {
            "file": "src/app/route/contact/contactDetail/contactDetail.component.ts",
            "line": 476,
            "description": "This method is used to redirect user to RFP",
            "itemtype": "method",
            "name": "GoToRfp",
            "class": "ContactDetailComponent"
        },
        {
            "file": "src/app/route/contact/formContact/formContact.component.ts",
            "line": 104,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "FormContactComponent"
        },
        {
            "file": "src/app/route/contact/formContact/formContact.component.ts",
            "line": 284,
            "description": "This method will be destroy all elements and other values from whole module",
            "itemtype": "method",
            "name": "ngOnDestroy",
            "class": "FormContactComponent"
        },
        {
            "file": "src/app/route/contact/formContact/formContact.component.ts",
            "line": 294,
            "description": "This method is used to display show warning message",
            "itemtype": "method",
            "name": "showWarning",
            "class": "FormContactComponent"
        },
        {
            "file": "src/app/route/contact/formContact/formContact.component.ts",
            "line": 314,
            "description": "This method is used to get state and city dropdown",
            "itemtype": "method",
            "name": "onStateCityChange",
            "params": [
                {
                    "name": "state",
                    "description": "request for getting state and dropdown",
                    "type": "Boolean"
                }
            ],
            "class": "FormContactComponent"
        },
        {
            "file": "src/app/route/contact/formContact/formContact.component.ts",
            "line": 330,
            "description": "This method is used for adding contact lincense",
            "itemtype": "method",
            "name": "addContactLicense",
            "class": "FormContactComponent"
        },
        {
            "file": "src/app/route/contact/formContact/formContact.component.ts",
            "line": 358,
            "description": "This method is used to update existing contact license",
            "itemtype": "method",
            "name": "editContactLicense",
            "params": [
                {
                    "name": "cl",
                    "description": "contact license object",
                    "type": "ContactLicense"
                },
                {
                    "name": "idx",
                    "description": "id of contact licenese",
                    "type": "Number"
                }
            ],
            "class": "FormContactComponent"
        },
        {
            "file": "src/app/route/contact/formContact/formContact.component.ts",
            "line": 369,
            "description": "This method is used to delete records from model",
            "itemtype": "method",
            "name": "deleteContactLicense",
            "params": [
                {
                    "name": "cl",
                    "description": "cl object that we need to delete",
                    "type": "ContactLicense"
                }
            ],
            "class": "FormContactComponent"
        },
        {
            "file": "src/app/route/contact/formContact/formContact.component.ts",
            "line": 379,
            "description": "This method is used set to set address as main address or not",
            "itemtype": "method",
            "name": "addAddress",
            "class": "FormContactComponent"
        },
        {
            "file": "src/app/route/contact/formContact/formContact.component.ts",
            "line": 420,
            "description": "This method is used to update existing address",
            "itemtype": "method",
            "name": "editAddress",
            "params": [
                {
                    "name": "ad",
                    "description": "type request Object",
                    "type": "Address"
                },
                {
                    "name": "idx",
                    "description": "id of address to be updated",
                    "type": "Number"
                }
            ],
            "class": "FormContactComponent"
        },
        {
            "file": "src/app/route/contact/formContact/formContact.component.ts",
            "line": 431,
            "description": "This method is used to delete records from address",
            "itemtype": "method",
            "name": "deleteAddress",
            "params": [
                {
                    "name": "ad",
                    "description": "object of address",
                    "type": "Address"
                }
            ],
            "class": "FormContactComponent"
        },
        {
            "file": "src/app/route/contact/formContact/formContact.component.ts",
            "line": 440,
            "description": "Get single record from database",
            "itemtype": "method",
            "name": "getDocumentById",
            "params": [
                {
                    "name": "id",
                    "description": "id of {{name}} for getting specific record",
                    "type": "Number"
                }
            ],
            "class": "FormContactComponent"
        },
        {
            "file": "src/app/route/contact/formContact/formContact.component.ts",
            "line": 455,
            "description": "This method is used to delete documents from document object",
            "itemtype": "method",
            "name": "deleteDocument",
            "params": [
                {
                    "name": "d",
                    "description": "d is used as a contact document objec",
                    "type": "ContactDocument"
                }
            ],
            "class": "FormContactComponent"
        },
        {
            "file": "src/app/route/contact/formContact/formContact.component.ts",
            "line": 468,
            "description": "This method is used for saving record in database",
            "itemtype": "method",
            "name": "save",
            "class": "FormContactComponent"
        },
        {
            "file": "src/app/route/contact/formContact/formContact.component.ts",
            "line": 579,
            "description": "This method is used for changing the person type",
            "itemtype": "method",
            "name": "changePersonalType",
            "class": "FormContactComponent"
        },
        {
            "file": "src/app/route/contact/formContact/formContact.component.ts",
            "line": 588,
            "description": "This method is used for selecting file and handling images",
            "itemtype": "method",
            "name": "handleFileSelect",
            "params": [
                {
                    "name": "evt",
                    "description": "evt is an image object which contains image properties",
                    "type": "Any"
                }
            ],
            "class": "FormContactComponent"
        },
        {
            "file": "src/app/route/contact/formContact/formContact.component.ts",
            "line": 602,
            "description": "This method is used to read files from given URL",
            "itemtype": "method",
            "name": "readUrl",
            "params": [
                {
                    "name": "input",
                    "description": "type any which contains string that can be filtered from datatable",
                    "type": "Any"
                },
                {
                    "name": "rec",
                    "description": "rec is used as contact object",
                    "type": "Contact"
                }
            ],
            "class": "FormContactComponent"
        },
        {
            "file": "src/app/route/contact/formContact/formContact.component.ts",
            "line": 620,
            "description": "This method is used to convert image into base64 encode format",
            "itemtype": "method",
            "name": "base64",
            "params": [
                {
                    "name": "file",
                    "description": "file is an object of files which contains files various properties",
                    "type": "Any"
                },
                {
                    "name": "rec",
                    "description": "rec is an object of reader",
                    "type": "Any"
                },
                {
                    "name": "prop",
                    "description": "prop is used as string",
                    "type": "String"
                }
            ],
            "class": "FormContactComponent"
        },
        {
            "file": "src/app/route/contact/formContact/formContact.component.ts",
            "line": 638,
            "description": "This method is used for upload an image to server and database",
            "itemtype": "method",
            "name": "uploadProfileImage",
            "params": [
                {
                    "name": "id",
                    "description": "id of contact",
                    "type": "Number"
                }
            ],
            "class": "FormContactComponent"
        },
        {
            "file": "src/app/route/contact/formContact/formContact.component.ts",
            "line": 673,
            "description": "This method is used for uploading documents",
            "itemtype": "method",
            "name": "uploadDocuments",
            "params": [
                {
                    "name": "id",
                    "description": "id is used as a contact id",
                    "type": "Number"
                }
            ],
            "class": "FormContactComponent"
        },
        {
            "file": "src/app/route/contact/formContact/formContact.component.ts",
            "line": 698,
            "description": "This method is used for uploading documents",
            "itemtype": "method",
            "name": "documentUpload",
            "params": [
                {
                    "name": "evt",
                    "description": "evt is used as a file object",
                    "type": "Any"
                }
            ],
            "class": "FormContactComponent"
        },
        {
            "file": "src/app/route/contact/formContact/formContact.component.ts",
            "line": 714,
            "description": "This method is used for fetching address from company",
            "itemtype": "method",
            "name": "fetchAddressFromCompany",
            "class": "FormContactComponent"
        },
        {
            "file": "src/app/route/contact/formContact/formContact.component.ts",
            "line": 753,
            "description": "This method is used to fill address detal from company",
            "itemtype": "method",
            "name": "fillAddressFromCompany",
            "class": "FormContactComponent"
        },
        {
            "file": "src/app/route/contact/formContact/formContact.component.ts",
            "line": 776,
            "description": "This method is used to check whether entered input contains only digits",
            "itemtype": "method",
            "name": "isNumber",
            "params": [
                {
                    "name": "evt",
                    "description": "evt is an object of element",
                    "type": "Any"
                }
            ],
            "class": "FormContactComponent"
        },
        {
            "file": "src/app/route/contact/formContact/formContact.component.ts",
            "line": 790,
            "description": "This method is used for formatting phone number",
            "itemtype": "method",
            "name": "formatPhone",
            "class": "FormContactComponent"
        },
        {
            "file": "src/app/route/contact/contact.component.ts",
            "line": 35,
            "description": "this component is used for filtering records",
            "itemtype": "property",
            "name": "filterDropdown",
            "class": "ContactComponent"
        },
        {
            "file": "src/app/route/contact/contact.component.ts",
            "line": 42,
            "description": "form add/edit formContact",
            "itemtype": "property",
            "name": "formContact",
            "class": "ContactComponent"
        },
        {
            "file": "src/app/route/contact/contact.component.ts",
            "line": 49,
            "description": "form add/edit addtask",
            "itemtype": "property",
            "name": "addtask",
            "class": "ContactComponent"
        },
        {
            "file": "src/app/route/contact/contact.component.ts",
            "line": 56,
            "description": "form add/edit formJob",
            "itemtype": "property",
            "name": "formJob",
            "class": "ContactComponent"
        },
        {
            "file": "src/app/route/contact/contact.component.ts",
            "line": 63,
            "description": "form add/edit sendemail",
            "itemtype": "property",
            "name": "sendemail",
            "class": "ContactComponent"
        },
        {
            "file": "src/app/route/contact/contact.component.ts",
            "line": 139,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "ContactComponent"
        },
        {
            "file": "src/app/route/contact/contact.component.ts",
            "line": 177,
            "class": "ContactComponent"
        },
        {
            "file": "src/app/route/contact/contact.component.ts",
            "line": 191,
            "description": "This method is used to check permission of this component",
            "itemtype": "method",
            "name": "permission",
            "params": [
                {
                    "name": "constantValues",
                    "description": "type request Object",
                    "type": "Any"
                }
            ],
            "class": "ContactComponent"
        },
        {
            "file": "src/app/route/contact/contact.component.ts",
            "line": 391,
            "description": "This method will be destroy all elements and other values from whole module",
            "itemtype": "method",
            "name": "ngOnDestroy",
            "class": "ContactComponent"
        },
        {
            "file": "src/app/route/contact/contact.component.ts",
            "line": 402,
            "description": "This method is used to reload datatable",
            "itemtype": "method",
            "name": "reload",
            "class": "ContactComponent"
        },
        {
            "file": "src/app/route/contact/contact.component.ts",
            "line": 411,
            "description": "This method is used to check whether valus is undefined or not",
            "itemtype": "method",
            "name": "isUndefined",
            "params": [
                {
                    "name": "v",
                    "description": "type request Object",
                    "type": "Any"
                }
            ],
            "class": "ContactComponent"
        },
        {
            "file": "src/app/route/contact/contact.component.ts",
            "line": 420,
            "description": "This method is used to export data from datatable",
            "itemtype": "method",
            "name": "exportData",
            "params": [
                {
                    "name": "str",
                    "description": "is used to check in which format data should be exported",
                    "type": "String"
                }
            ],
            "class": "ContactComponent"
        },
        {
            "file": "src/app/route/contact/contact.component.ts",
            "line": 433,
            "description": "This method is used to open modal popup for _openModal",
            "itemtype": "method",
            "name": "_openModal",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                }
            ],
            "class": "ContactComponent"
        },
        {
            "file": "src/app/route/contact/contact.component.ts",
            "line": 442,
            "description": "This method is used to open modal popup for openModal",
            "itemtype": "method",
            "name": "openModal",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                }
            ],
            "class": "ContactComponent"
        },
        {
            "file": "src/app/route/contact/contact.component.ts",
            "line": 467,
            "description": "This method is used to open modal popup for openModalSendEmail",
            "itemtype": "method",
            "name": "openModalSendEmail",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                }
            ],
            "class": "ContactComponent"
        },
        {
            "file": "src/app/route/contact/contact.component.ts",
            "line": 476,
            "description": "This method is used to read the file",
            "itemtype": "method",
            "name": "readUrl",
            "params": [
                {
                    "name": "input",
                    "description": "input reader contains object of file",
                    "type": "Any"
                },
                {
                    "name": "rec",
                    "description": "rec is used for contact object",
                    "type": "Contact"
                }
            ],
            "class": "ContactComponent"
        },
        {
            "file": "src/app/route/contact/contact.component.ts",
            "line": 494,
            "description": "This method is used to reload datatable",
            "itemtype": "method",
            "name": "onSave",
            "class": "ContactComponent"
        },
        {
            "file": "src/app/route/contact/contact.component.ts",
            "line": 503,
            "description": "This method is used to delete record",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "type which contains id to delete record",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "type which contains entire selected row",
                    "type": "Any"
                }
            ],
            "class": "ContactComponent"
        },
        {
            "file": "src/app/route/contact/contact.component.ts",
            "line": 521,
            "description": "This method is used for filter/search records from datatable",
            "itemtype": "method",
            "name": "search",
            "params": [
                {
                    "name": "srch",
                    "description": "type any which contains string that can be filtered from datatable",
                    "type": "String"
                }
            ],
            "class": "ContactComponent"
        },
        {
            "file": "src/app/route/contact/contact.component.ts",
            "line": 530,
            "description": "This method is used to navigate onOpenContactDetail",
            "itemtype": "method",
            "name": "onOpenContactDetail",
            "params": [
                {
                    "name": "obj",
                    "description": "contains contact object",
                    "type": "Any"
                }
            ],
            "class": "ContactComponent"
        },
        {
            "file": "src/app/route/contact/contact.component.ts",
            "line": 543,
            "description": "This method is used to clear search",
            "itemtype": "method",
            "name": "clearsearch",
            "class": "ContactComponent"
        },
        {
            "file": "src/app/route/contact/contact.component.ts",
            "line": 556,
            "description": "This method is used to open modal popup for openModalFormAddTask",
            "itemtype": "method",
            "name": "openModalFormAddTask",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                }
            ],
            "class": "ContactComponent"
        },
        {
            "file": "src/app/route/contact/contact.component.ts",
            "line": 569,
            "description": "This method is used to open modal popup for openJobModal",
            "itemtype": "method",
            "name": "openJobModal",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                },
                {
                    "name": "contactId",
                    "description": "it is optional which contains contact id",
                    "type": "Number"
                }
            ],
            "class": "ContactComponent"
        },
        {
            "file": "src/app/route/contact/contact.component.ts",
            "line": 584,
            "description": "This method is used to open modal popup for _openJobModal",
            "itemtype": "method",
            "name": "_openJobModal",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                }
            ],
            "class": "ContactComponent"
        },
        {
            "file": "src/app/route/contact/contact.services.ts",
            "line": 23,
            "description": "Get all records from database in datatable format",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "cfg",
                    "description": "it is a string type which is used for filter data from data table",
                    "type": "String"
                }
            ],
            "class": "ContactServices"
        },
        {
            "file": "src/app/route/contact/contact.services.ts",
            "line": 34,
            "description": "This method is used to create a new record in database",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                }
            ],
            "class": "ContactServices"
        },
        {
            "file": "src/app/route/contact/contact.services.ts",
            "line": 44,
            "description": "This method is used to update existing record in database",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "id of {{name}} for updating specific record",
                    "type": "Number"
                }
            ],
            "class": "ContactServices"
        },
        {
            "file": "src/app/route/contact/contact.services.ts",
            "line": 55,
            "description": "Get single record from database",
            "itemtype": "method",
            "name": "getById",
            "params": [
                {
                    "name": "id",
                    "description": "id of {{name}} for getting specific record",
                    "type": "Number"
                }
            ],
            "class": "ContactServices"
        },
        {
            "file": "src/app/route/contact/contact.services.ts",
            "line": 64,
            "description": "Get single document record from database",
            "itemtype": "method",
            "name": "getDocumentById",
            "params": [
                {
                    "name": "id",
                    "description": "id of {{name}} for getting specific record",
                    "type": "Number"
                }
            ],
            "class": "ContactServices"
        },
        {
            "file": "src/app/route/contact/contact.services.ts",
            "line": 76,
            "description": "This method is used to delete records from database",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "of {{name}} to delete",
                    "type": "Number"
                }
            ],
            "class": "ContactServices"
        },
        {
            "file": "src/app/route/contact/contact.services.ts",
            "line": 85,
            "description": "Get all dropdown data from contact",
            "itemtype": "method",
            "name": "getCotactData",
            "class": "ContactServices"
        },
        {
            "file": "src/app/route/contact/contact.services.ts",
            "line": 93,
            "description": "Get all dropdown data from contact",
            "itemtype": "method",
            "name": "getContactData",
            "class": "ContactServices"
        },
        {
            "file": "src/app/route/contact/contact.services.ts",
            "line": 101,
            "description": "This method is used to get companies list",
            "itemtype": "method",
            "name": "getCompany",
            "params": [
                {
                    "name": "id",
                    "description": "type request Object",
                    "type": "Number"
                }
            ],
            "class": "ContactServices"
        },
        {
            "file": "src/app/route/contact/contact.services.ts",
            "line": 110,
            "description": "Get all dropdown data from Contacts",
            "itemtype": "method",
            "name": "getAllContacts",
            "class": "ContactServices"
        },
        {
            "file": "src/app/route/contact/contact.services.ts",
            "line": 118,
            "description": "This method is used to save image in database",
            "itemtype": "method",
            "name": "saveProfileImage",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                }
            ],
            "class": "ContactServices"
        },
        {
            "file": "src/app/route/contact/contact.services.ts",
            "line": 127,
            "description": "This method is used to save record",
            "itemtype": "method",
            "name": "saveContactDocuments",
            "params": [
                {
                    "name": "type",
                    "description": "request Object",
                    "type": "Data"
                }
            ],
            "class": "ContactServices"
        },
        {
            "file": "src/app/route/contact/contact.services.ts",
            "line": 136,
            "description": "Get all dropdown data from contact",
            "itemtype": "method",
            "name": "getContactDropdown",
            "class": "ContactServices"
        },
        {
            "file": "src/app/route/contact/contact.services.ts",
            "line": 144,
            "description": "This method is used to send email to user",
            "itemtype": "method",
            "name": "sendmail",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                },
                {
                    "name": "idContact",
                    "description": "id of contact to whom email is to be send",
                    "type": "Number"
                }
            ],
            "class": "ContactServices"
        },
        {
            "file": "src/app/route/contact/contact.services.ts",
            "line": 155,
            "description": "This method is used to save attachment",
            "itemtype": "method",
            "name": "saveExtraAttachment",
            "params": [
                {
                    "name": "type",
                    "description": "request Object",
                    "type": "Data"
                }
            ],
            "class": "ContactServices"
        },
        {
            "file": "src/app/route/contacttitle/contacttitleform/contacttitleform.component.ts",
            "line": 40,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "ContactTitleformComponent"
        },
        {
            "file": "src/app/route/contacttitle/contacttitleform/contacttitleform.component.ts",
            "line": 59,
            "description": "This method is used to save record",
            "itemtype": "method",
            "name": "saveContactTitle",
            "class": "ContactTitleformComponent"
        },
        {
            "file": "src/app/route/contacttitle/contacttitle.component.ts",
            "line": 24,
            "description": "contacttitleform add/edit form",
            "itemtype": "property",
            "name": "contacttitleform",
            "class": "ContactTitleComponent"
        },
        {
            "file": "src/app/route/contacttitle/contacttitle.component.ts",
            "line": 70,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "ContactTitleComponent"
        },
        {
            "file": "src/app/route/contacttitle/contacttitle.component.ts",
            "line": 128,
            "description": "This method will be destroy all elements and other values from whole module",
            "itemtype": "method",
            "name": "ngOnDestroy",
            "class": "ContactTitleComponent"
        },
        {
            "file": "src/app/route/contacttitle/contacttitle.component.ts",
            "line": 137,
            "description": "This method is used for filter/search records from datatable",
            "itemtype": "method",
            "name": "searchContactTitle",
            "params": [
                {
                    "name": "srch",
                    "description": "type any which contains string that can be filtered from datatable",
                    "type": "String"
                }
            ],
            "class": "ContactTitleComponent"
        },
        {
            "file": "src/app/route/contacttitle/contacttitle.component.ts",
            "line": 146,
            "description": "This method is used to open modal popup for openModalForm",
            "itemtype": "method",
            "name": "openModalForm",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                },
                {
                    "name": "isNew",
                    "description": "it is optional which contains true if it is new record and false when it is old record",
                    "type": "Boolean"
                }
            ],
            "class": "ContactTitleComponent"
        },
        {
            "file": "src/app/route/contacttitle/contacttitle.component.ts",
            "line": 161,
            "description": "This method is used to reload datatable",
            "itemtype": "method",
            "name": "reload",
            "class": "ContactTitleComponent"
        },
        {
            "file": "src/app/route/contacttitle/contacttitle.component.ts",
            "line": 170,
            "description": "This method is used to delete record",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "type which contains id to delete record",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "type which contains entire selected row",
                    "type": "Any"
                }
            ],
            "class": "ContactTitleComponent"
        },
        {
            "file": "src/app/route/depcostsetting/depcostsettingform/depCostSettingform.component.ts",
            "line": 42,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "DepCostSettingForm"
        },
        {
            "file": "src/app/route/depcostsetting/depcostsettingform/depCostSettingform.component.ts",
            "line": 65,
            "description": "This method check given data is number or not",
            "itemtype": "method",
            "name": "isNumber",
            "params": [
                {
                    "name": "evt",
                    "description": "event object",
                    "type": "Any"
                }
            ],
            "class": "DepCostSettingForm"
        },
        {
            "file": "src/app/route/depcostsetting/depcostsettingform/depCostSettingform.component.ts",
            "line": 79,
            "description": "This method check given data is decimal or not",
            "itemtype": "method",
            "name": "isDecimal",
            "params": [
                {
                    "name": "evt",
                    "description": "event object",
                    "type": "Any"
                }
            ],
            "class": "DepCostSettingForm"
        },
        {
            "file": "src/app/route/depcostsetting/depcostsettingform/depCostSettingform.component.ts",
            "line": 99,
            "description": "This method is used to save record",
            "itemtype": "method",
            "name": "saveDEPCost",
            "class": "DepCostSettingForm"
        },
        {
            "file": "src/app/route/depcostsetting/depCostSetting.component.ts",
            "line": 24,
            "description": "depCostSettingform add/edit form",
            "itemtype": "property",
            "name": "depCostSettingform",
            "class": "DepCostSettingComponent"
        },
        {
            "file": "src/app/route/depcostsetting/depCostSetting.component.ts",
            "line": 68,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "DepCostSettingComponent"
        },
        {
            "file": "src/app/route/depcostsetting/depCostSetting.component.ts",
            "line": 134,
            "description": "This method will be destroy all elements and other values from whole module",
            "itemtype": "method",
            "name": "ngOnDestroy",
            "class": "DepCostSettingComponent"
        },
        {
            "file": "src/app/route/depcostsetting/depCostSetting.component.ts",
            "line": 143,
            "description": "This method is used for filter/search records from datatable",
            "itemtype": "method",
            "name": "searchDepCostSetting",
            "params": [
                {
                    "name": "srch",
                    "description": "type any which contains string that can be filtered from datatable",
                    "type": "String"
                }
            ],
            "class": "DepCostSettingComponent"
        },
        {
            "file": "src/app/route/depcostsetting/depCostSetting.component.ts",
            "line": 152,
            "description": "This method is used to open modal popup for DEP cost setting",
            "itemtype": "method",
            "name": "openModalForm",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                },
                {
                    "name": "isNew",
                    "description": "it is optional which contains true if it is new record and false when it is old record",
                    "type": "Boolean"
                }
            ],
            "class": "DepCostSettingComponent"
        },
        {
            "file": "src/app/route/depcostsetting/depCostSetting.component.ts",
            "line": 167,
            "description": "This method is used to reload datatable",
            "itemtype": "method",
            "name": "reload",
            "class": "DepCostSettingComponent"
        },
        {
            "file": "src/app/route/depcostsetting/depCostSetting.component.ts",
            "line": 176,
            "description": "This method is used to delete record",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "type which contains id to delete record",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "type which contains entire selected row",
                    "type": "Any"
                }
            ],
            "class": "DepCostSettingComponent"
        },
        {
            "file": "src/app/route/depcostsetting/depCostSetting.services.ts",
            "line": 22,
            "description": "Get all records from database in datatable format",
            "itemtype": "method",
            "name": "getRecords",
            "params": [
                {
                    "name": "cfg",
                    "description": "it is a string type which is used for filter data from data table",
                    "type": "String"
                }
            ],
            "class": "DepCostSettingServices"
        },
        {
            "file": "src/app/route/depcostsetting/depCostSetting.services.ts",
            "line": 33,
            "description": "This method is used to create a new record in database",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "DepCostSetting"
                }
            ],
            "class": "DepCostSettingServices"
        },
        {
            "file": "src/app/route/depcostsetting/depCostSetting.services.ts",
            "line": 43,
            "description": "This method is used to update existing record in database",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "DepCostSetting"
                },
                {
                    "name": "id",
                    "description": "id of {{name}} for updating specific record",
                    "type": "Number"
                }
            ],
            "class": "DepCostSettingServices"
        },
        {
            "file": "src/app/route/depcostsetting/depCostSetting.services.ts",
            "line": 53,
            "description": "Get single record from database",
            "itemtype": "method",
            "name": "getById",
            "params": [
                {
                    "name": "id",
                    "description": "id of {{name}} for getting specific record",
                    "type": "Number"
                }
            ],
            "class": "DepCostSettingServices"
        },
        {
            "file": "src/app/route/depcostsetting/depCostSetting.services.ts",
            "line": 62,
            "description": "This method is used to delete records from database",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "of {{name}} to delete",
                    "type": "Number"
                }
            ],
            "class": "DepCostSettingServices"
        },
        {
            "file": "src/app/route/documenttypes/documenttypesform/documenttypesform.component.ts",
            "line": 43,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "DocumentTypesForm"
        },
        {
            "file": "src/app/route/documenttypes/documenttypesform/documenttypesform.component.ts",
            "line": 74,
            "description": "This method is used to save record",
            "itemtype": "method",
            "name": "saveDocumentType",
            "class": "DocumentTypesForm"
        },
        {
            "file": "src/app/route/documenttypes/documenttypes.component.ts",
            "line": 23,
            "description": "documenttypesform add/edit form",
            "itemtype": "property",
            "name": "documenttypesform",
            "class": "DocumentTypesComponent"
        },
        {
            "file": "src/app/route/documenttypes/documenttypes.component.ts",
            "line": 66,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "DocumentTypesComponent"
        },
        {
            "file": "src/app/route/documenttypes/documenttypes.component.ts",
            "line": 123,
            "description": "This method will be destroy all elements and other values from whole module",
            "itemtype": "method",
            "name": "ngOnDestroy",
            "class": "DocumentTypesComponent"
        },
        {
            "file": "src/app/route/documenttypes/documenttypes.component.ts",
            "line": 133,
            "description": "This method is used for filter/search records from datatable",
            "itemtype": "method",
            "name": "searchDocumentTypes",
            "params": [
                {
                    "name": "srch",
                    "description": "type any which contains string that can be filtered from datatable",
                    "type": "String"
                }
            ],
            "class": "DocumentTypesComponent"
        },
        {
            "file": "src/app/route/documenttypes/documenttypes.component.ts",
            "line": 142,
            "description": "This method is used to open modal popup for openModalForm",
            "itemtype": "method",
            "name": "openModalForm",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                },
                {
                    "name": "isNew",
                    "description": "it is optional which contains true if it is new record and false when it is old record",
                    "type": "Boolean"
                }
            ],
            "class": "DocumentTypesComponent"
        },
        {
            "file": "src/app/route/documenttypes/documenttypes.component.ts",
            "line": 157,
            "description": "This method is used to reload datatable",
            "itemtype": "method",
            "name": "reload",
            "class": "DocumentTypesComponent"
        },
        {
            "file": "src/app/route/documenttypes/documenttypes.component.ts",
            "line": 166,
            "description": "This method is used to delete record",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "type which contains id to delete record",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "type which contains entire selected row",
                    "type": "Any"
                }
            ],
            "class": "DocumentTypesComponent"
        },
        {
            "file": "src/app/route/documenttypes/documenttypes.services.ts",
            "line": 20,
            "description": "Get all records from database in datatable format",
            "itemtype": "method",
            "name": "getRecords",
            "class": "DocumentTypesServices"
        },
        {
            "file": "src/app/route/documenttypes/documenttypes.services.ts",
            "line": 30,
            "description": "This method is used to create a new record in database",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                }
            ],
            "class": "DocumentTypesServices"
        },
        {
            "file": "src/app/route/documenttypes/documenttypes.services.ts",
            "line": 40,
            "description": "This method is used to update existing record in database",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "id of Document Types for updating specific record",
                    "type": "Number"
                }
            ],
            "class": "DocumentTypesServices"
        },
        {
            "file": "src/app/route/documenttypes/documenttypes.services.ts",
            "line": 50,
            "description": "Get single record from database",
            "itemtype": "method",
            "name": "getById",
            "params": [
                {
                    "name": "id",
                    "description": "id of Document Types for getting specific record",
                    "type": "Number"
                }
            ],
            "class": "DocumentTypesServices"
        },
        {
            "file": "src/app/route/documenttypes/documenttypes.services.ts",
            "line": 59,
            "description": "This method is used to delete records from database",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "of Document Types to delete",
                    "type": "Number"
                }
            ],
            "class": "DocumentTypesServices"
        },
        {
            "file": "src/app/route/dwellingclassification/dwellingclassificationform/dwellingclassificationform.component.ts",
            "line": 44,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "DwellingClassificationForm"
        },
        {
            "file": "src/app/route/dwellingclassification/dwellingclassificationform/dwellingclassificationform.component.ts",
            "line": 75,
            "description": "This method is used to save record",
            "itemtype": "method",
            "name": "saveDwelling",
            "class": "DwellingClassificationForm"
        },
        {
            "file": "src/app/route/dwellingclassification/dwellingclassification.component.ts",
            "line": 24,
            "description": "dwellingclassificationform add/edit form",
            "itemtype": "property",
            "name": "dwellingclassificationform",
            "class": "DwellingClassificationComponent"
        },
        {
            "file": "src/app/route/dwellingclassification/dwellingclassification.component.ts",
            "line": 67,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "DwellingClassificationComponent"
        },
        {
            "file": "src/app/route/dwellingclassification/dwellingclassification.component.ts",
            "line": 124,
            "description": "This method will be destroy all elements and other values from whole module",
            "itemtype": "method",
            "name": "ngOnDestroy",
            "class": "DwellingClassificationComponent"
        },
        {
            "file": "src/app/route/dwellingclassification/dwellingclassification.component.ts",
            "line": 133,
            "description": "This method is used for filter/search records from datatable",
            "itemtype": "method",
            "name": "searchDwellingClassification",
            "params": [
                {
                    "name": "srch",
                    "description": "type any which contains string that can be filtered from datatable",
                    "type": "String"
                }
            ],
            "class": "DwellingClassificationComponent"
        },
        {
            "file": "src/app/route/dwellingclassification/dwellingclassification.component.ts",
            "line": 142,
            "description": "This method is used to open modal popup for openModalForm",
            "itemtype": "method",
            "name": "openModalForm",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                },
                {
                    "name": "isNew",
                    "description": "it is optional which contains true if it is new record and false when it is old record",
                    "type": "Boolean"
                }
            ],
            "class": "DwellingClassificationComponent"
        },
        {
            "file": "src/app/route/dwellingclassification/dwellingclassification.component.ts",
            "line": 157,
            "description": "This method is used to reload datatable",
            "itemtype": "method",
            "name": "reload",
            "class": "DwellingClassificationComponent"
        },
        {
            "file": "src/app/route/dwellingclassification/dwellingclassification.component.ts",
            "line": 166,
            "description": "This method is used to delete record",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "type which contains id to delete record",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "type which contains entire selected row",
                    "type": "Any"
                }
            ],
            "class": "DwellingClassificationComponent"
        },
        {
            "file": "src/app/route/dwellingclassification/dwellingclassification.services.ts",
            "line": 20,
            "description": "Get all records from database in datatable format",
            "itemtype": "method",
            "name": "getRecords",
            "class": "DwellingClassificationServices"
        },
        {
            "file": "src/app/route/dwellingclassification/dwellingclassification.services.ts",
            "line": 30,
            "description": "This method is used to create a new record in database",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                }
            ],
            "class": "DwellingClassificationServices"
        },
        {
            "file": "src/app/route/dwellingclassification/dwellingclassification.services.ts",
            "line": 40,
            "description": "This method is used to update existing record in database",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "id of Multiple Dwelling Classifications for updating specific record",
                    "type": "Number"
                }
            ],
            "class": "DwellingClassificationServices"
        },
        {
            "file": "src/app/route/dwellingclassification/dwellingclassification.services.ts",
            "line": 50,
            "description": "Get single record from database",
            "itemtype": "method",
            "name": "getById",
            "params": [
                {
                    "name": "id",
                    "description": "id of Multiple Dwelling Classifications for getting specific record",
                    "type": "Number"
                }
            ],
            "class": "DwellingClassificationServices"
        },
        {
            "file": "src/app/route/dwellingclassification/dwellingclassification.services.ts",
            "line": 59,
            "description": "This method is used to delete records from database",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "of Multiple Dwelling Classifications to delete",
                    "type": "Number"
                }
            ],
            "class": "DwellingClassificationServices"
        },
        {
            "file": "src/app/route/emailtype/emailtypeform/emailtypeform.component.ts",
            "line": 44,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "EmailtypeformComponent"
        },
        {
            "file": "src/app/route/emailtype/emailtypeform/emailtypeform.component.ts",
            "line": 84,
            "description": "This method is used to save record",
            "itemtype": "method",
            "name": "saveEmailType",
            "class": "EmailtypeformComponent"
        },
        {
            "file": "src/app/route/emailtype/emailtypeform/emailtypeform.component.ts",
            "line": 112,
            "description": "This method is used to check email type",
            "itemtype": "method",
            "name": "checkEmailType",
            "class": "EmailtypeformComponent"
        },
        {
            "file": "src/app/route/emailtype/emailtypeform/emailtypeform.component.ts",
            "line": 127,
            "description": "Get selected item from dropdown",
            "itemtype": "method",
            "name": "onItemSelect",
            "class": "EmailtypeformComponent"
        },
        {
            "file": "src/app/route/emailtype/emailtypeform/emailtypeform.component.ts",
            "line": 135,
            "description": "Deselect item from dropdown",
            "itemtype": "method",
            "name": "OnItemDeSelect",
            "class": "EmailtypeformComponent"
        },
        {
            "file": "src/app/route/emailtype/emailtypeform/emailtypeform.component.ts",
            "line": 143,
            "description": "all items are selected from dropdown",
            "itemtype": "method",
            "name": "onSelectAll",
            "class": "EmailtypeformComponent"
        },
        {
            "file": "src/app/route/emailtype/emailtypeform/emailtypeform.component.ts",
            "line": 152,
            "description": "all items are deselected from dropdown",
            "itemtype": "method",
            "name": "onDeSelectAll",
            "class": "EmailtypeformComponent"
        },
        {
            "file": "src/app/route/emailtype/emailtype.component.ts",
            "line": 23,
            "description": "emailtypeform add/edit form",
            "itemtype": "property",
            "name": "emailtypeform",
            "class": "EmailTypeComponent"
        },
        {
            "file": "src/app/route/emailtype/emailtype.component.ts",
            "line": 68,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "EmailTypeComponent"
        },
        {
            "file": "src/app/route/emailtype/emailtype.component.ts",
            "line": 160,
            "description": "This method will be destroy all elements and other values from whole module",
            "itemtype": "method",
            "name": "ngOnDestroy",
            "class": "EmailTypeComponent"
        },
        {
            "file": "src/app/route/emailtype/emailtype.component.ts",
            "line": 169,
            "description": "This method is used for filter/search records from datatable",
            "itemtype": "method",
            "name": "searchEmailType",
            "params": [
                {
                    "name": "srch",
                    "description": "type any which contains string that can be filtered from datatable",
                    "type": "String"
                }
            ],
            "class": "EmailTypeComponent"
        },
        {
            "file": "src/app/route/emailtype/emailtype.component.ts",
            "line": 178,
            "description": "This method is used to open modal popup for openModalForm",
            "itemtype": "method",
            "name": "openModalForm",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                },
                {
                    "name": "isNew",
                    "description": "it is optional which contains true if it is new record and false when it is old record",
                    "type": "Boolean"
                }
            ],
            "class": "EmailTypeComponent"
        },
        {
            "file": "src/app/route/emailtype/emailtype.component.ts",
            "line": 193,
            "description": "This method is used to reload datatable",
            "itemtype": "method",
            "name": "reload",
            "class": "EmailTypeComponent"
        },
        {
            "file": "src/app/route/emailtype/emailtype.component.ts",
            "line": 202,
            "description": "This method is used to delete record",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "type which contains id to delete record",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "type which contains entire selected row",
                    "type": "Any"
                }
            ],
            "class": "EmailTypeComponent"
        },
        {
            "file": "src/app/route/emailtype/emailtype.services.ts",
            "line": 20,
            "description": "Get all records from database in datatable format",
            "itemtype": "method",
            "name": "getRecords",
            "class": "EmailtypeServices"
        },
        {
            "file": "src/app/route/emailtype/emailtype.services.ts",
            "line": 30,
            "description": "This method is used to create a new record in database",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                }
            ],
            "class": "EmailtypeServices"
        },
        {
            "file": "src/app/route/emailtype/emailtype.services.ts",
            "line": 40,
            "description": "This method is used to update existing record in database",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "id of Email Type for updating specific record",
                    "type": "Number"
                }
            ],
            "class": "EmailtypeServices"
        },
        {
            "file": "src/app/route/emailtype/emailtype.services.ts",
            "line": 50,
            "description": "Get single record from database",
            "itemtype": "method",
            "name": "getById",
            "params": [
                {
                    "name": "id",
                    "description": "id of Email Type for getting specific record",
                    "type": "Number"
                }
            ],
            "class": "EmailtypeServices"
        },
        {
            "file": "src/app/route/emailtype/emailtype.services.ts",
            "line": 59,
            "description": "This method is used to delete records from database",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "of Email Type to delete",
                    "type": "Number"
                }
            ],
            "class": "EmailtypeServices"
        },
        {
            "file": "src/app/route/employee/employee.component.ts",
            "line": 41,
            "description": "formEmployeeTpl add/edit form",
            "itemtype": "property",
            "name": "formEmployeeTpl",
            "class": "EmployeeComponent"
        },
        {
            "file": "src/app/route/employee/employee.component.ts",
            "line": 47,
            "description": "changePasswordTpl add/edit form",
            "itemtype": "property",
            "name": "changePasswordTpl",
            "class": "EmployeeComponent"
        },
        {
            "file": "src/app/route/employee/employee.component.ts",
            "line": 53,
            "description": "permissionsTpl add/edit form",
            "itemtype": "property",
            "name": "permissionsTpl",
            "class": "EmployeeComponent"
        },
        {
            "file": "src/app/route/employee/employee.component.ts",
            "line": 59,
            "description": "permissionUsergroup add/edit form",
            "itemtype": "property",
            "name": "permissionUsergroup",
            "class": "EmployeeComponent"
        },
        {
            "file": "src/app/route/employee/employee.component.ts",
            "line": 254,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "EmployeeComponent"
        },
        {
            "file": "src/app/route/employee/employee.component.ts",
            "line": 442,
            "description": "This method is used to check that data contains only number",
            "itemtype": "method",
            "name": "isNumber",
            "params": [
                {
                    "name": "evt",
                    "description": "evt is used to get event of that input",
                    "type": "Any"
                }
            ],
            "class": "EmployeeComponent"
        },
        {
            "file": "src/app/route/employee/employee.component.ts",
            "line": 456,
            "description": "This method will be destroy all elements and other values from whole module",
            "itemtype": "method",
            "name": "ngOnDestroy",
            "class": "EmployeeComponent"
        },
        {
            "file": "src/app/route/employee/employee.component.ts",
            "line": 465,
            "description": "This method will be used for validating new password and confirm password",
            "itemtype": "method",
            "name": "validatePassword",
            "params": [
                {
                    "name": "newPassword",
                    "description": "new Password",
                    "type": "Any"
                },
                {
                    "name": "confirmPassword",
                    "description": "confirm Password  for matching new password",
                    "type": "Any"
                }
            ],
            "class": "EmployeeComponent"
        },
        {
            "file": "src/app/route/employee/employee.component.ts",
            "line": 481,
            "description": "This method will be used for changing password",
            "itemtype": "method",
            "name": "changePassword",
            "params": [
                {
                    "name": "apply",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "EmployeeComponent"
        },
        {
            "file": "src/app/route/employee/employee.component.ts",
            "line": 512,
            "description": "This method will be used for changing status of employee",
            "itemtype": "method",
            "name": "toggleStatus",
            "class": "EmployeeComponent"
        },
        {
            "file": "src/app/route/employee/employee.component.ts",
            "line": 545,
            "description": "This method is used for editing permission of employee",
            "itemtype": "method",
            "name": "editPermissions",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "isNew",
                    "description": "it is optional which contains true if it is new record and false when it is old record",
                    "type": "Apply"
                }
            ],
            "class": "EmployeeComponent"
        },
        {
            "file": "src/app/route/employee/employee.component.ts",
            "line": 583,
            "description": "This method is used while changing city or state",
            "itemtype": "method",
            "name": "onStateCityChange",
            "params": [
                {
                    "name": "state",
                    "description": "state is true if we are changing state",
                    "type": "Boolean"
                }
            ],
            "class": "EmployeeComponent"
        },
        {
            "file": "src/app/route/employee/employee.component.ts",
            "line": 602,
            "description": "This method is used when document type is changed",
            "itemtype": "method",
            "name": "onChangeDocumentType",
            "class": "EmployeeComponent"
        },
        {
            "file": "src/app/route/employee/employee.component.ts",
            "line": 611,
            "description": "This method is used for converting documents into base64",
            "itemtype": "method",
            "name": "base64",
            "params": [
                {
                    "name": "doc",
                    "description": "doc is used to get whole documents for read",
                    "type": "Any"
                }
            ],
            "class": "EmployeeComponent"
        },
        {
            "file": "src/app/route/employee/employee.component.ts",
            "line": 629,
            "description": "This method is used to open modal popup for openModalForm",
            "itemtype": "method",
            "name": "_openModal",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                }
            ],
            "class": "EmployeeComponent"
        },
        {
            "file": "src/app/route/employee/employee.component.ts",
            "line": 769,
            "description": "This method is used to change password type either text or password",
            "itemtype": "method",
            "name": "togglePassword",
            "params": [
                {
                    "name": "p",
                    "description": "p which contains template of password",
                    "type": "Any"
                },
                {
                    "name": "obj",
                    "description": "it contains input element",
                    "type": "Any"
                }
            ],
            "class": "EmployeeComponent"
        },
        {
            "file": "src/app/route/employee/employee.component.ts",
            "line": 780,
            "description": "This method is used to open modal popup for openModalForm",
            "itemtype": "method",
            "name": "openModalForm",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                }
            ],
            "class": "EmployeeComponent"
        },
        {
            "file": "src/app/route/employee/employee.component.ts",
            "line": 828,
            "description": "This method is used to add agency certificate",
            "itemtype": "method",
            "name": "addAgentCertificate",
            "class": "EmployeeComponent"
        },
        {
            "file": "src/app/route/employee/employee.component.ts",
            "line": 857,
            "description": "This method is used to delete agency certificate",
            "itemtype": "method",
            "name": "editAgentCertificate",
            "params": [
                {
                    "name": "a",
                    "description": "agent certificate record that we want to update",
                    "type": "Any"
                },
                {
                    "name": "idx",
                    "description": "index which we need to update",
                    "type": "Number"
                }
            ],
            "class": "EmployeeComponent"
        },
        {
            "file": "src/app/route/employee/employee.component.ts",
            "line": 868,
            "description": "This method is used to delete agency certificate",
            "itemtype": "method",
            "name": "deleteAgentCertificate",
            "params": [
                {
                    "name": "a",
                    "description": "agent certificate record that we want to delete",
                    "type": "Any"
                }
            ],
            "class": "EmployeeComponent"
        },
        {
            "file": "src/app/route/employee/employee.component.ts",
            "line": 877,
            "description": "This method is used to get specific document",
            "itemtype": "method",
            "name": "getDocumentById",
            "params": [
                {
                    "name": "id",
                    "description": "id of document",
                    "type": "Number"
                }
            ],
            "class": "EmployeeComponent"
        },
        {
            "file": "src/app/route/employee/employee.component.ts",
            "line": 891,
            "description": "This method is used to delete documents from database",
            "itemtype": "method",
            "name": "deleteDocument",
            "params": [
                {
                    "name": "d",
                    "description": "d which contains documents",
                    "type": "Any"
                }
            ],
            "class": "EmployeeComponent"
        },
        {
            "file": "src/app/route/employee/employee.component.ts",
            "line": 927,
            "description": "This method is used to save record",
            "itemtype": "method",
            "name": "save",
            "class": "EmployeeComponent"
        },
        {
            "file": "src/app/route/employee/employee.component.ts",
            "line": 976,
            "description": "This method is used to delete record",
            "itemtype": "method",
            "name": "delete",
            "class": "EmployeeComponent"
        },
        {
            "file": "src/app/route/employee/employee.component.ts",
            "line": 993,
            "description": "This method is used for filter/search records from datatable",
            "itemtype": "method",
            "name": "search",
            "params": [
                {
                    "name": "srch",
                    "description": "type any which contains string that can be filtered from datatable",
                    "type": "String"
                }
            ],
            "class": "EmployeeComponent"
        },
        {
            "file": "src/app/route/employee/employee.component.ts",
            "line": 1002,
            "description": "This method is used to close modal popup",
            "itemtype": "method",
            "name": "closePopup",
            "class": "EmployeeComponent"
        },
        {
            "file": "src/app/route/employee/employee.component.ts",
            "line": 1012,
            "description": "This method is used to make div visible when field is required",
            "itemtype": "method",
            "name": "setRequireMsg",
            "class": "EmployeeComponent"
        },
        {
            "file": "src/app/route/employee/employee.component.ts",
            "line": 1022,
            "description": "This method is used to reload datatable",
            "itemtype": "method",
            "name": "reload",
            "class": "EmployeeComponent"
        },
        {
            "file": "src/app/route/employee/employee.component.ts",
            "line": 1031,
            "description": "This method is used to upload documents",
            "itemtype": "method",
            "name": "uploadDocuments",
            "params": [
                {
                    "name": "id",
                    "description": "id is used as employee id",
                    "type": "Number"
                }
            ],
            "class": "EmployeeComponent"
        },
        {
            "file": "src/app/route/employee/employee.component.ts",
            "line": 1056,
            "description": "This method is used to push documents in one array",
            "itemtype": "method",
            "name": "documentUpload",
            "params": [
                {
                    "name": "evt",
                    "description": "evt is used to insert document in array",
                    "type": "Any"
                }
            ],
            "class": "EmployeeComponent"
        },
        {
            "file": "src/app/route/employee/employee.component.ts",
            "line": 1075,
            "description": "This method is used to set filter for employee is active,in-active,All",
            "itemtype": "method",
            "name": "changeStatus",
            "params": [
                {
                    "name": "filter",
                    "description": "filter is used to get list of employee having status i.e. in filter and datatable is reload",
                    "type": "Any"
                }
            ],
            "class": "EmployeeComponent"
        },
        {
            "file": "src/app/route/employee/employee.component.ts",
            "line": 1092,
            "description": "This method is used to check permssions of Employee",
            "itemtype": "method",
            "name": "checkPermissionValues",
            "params": [
                {
                    "name": "evt",
                    "description": "evt which includes event of javascript",
                    "type": "Any"
                },
                {
                    "name": "permissionId",
                    "description": "permissionId is used to check whether the permission is exsits for employee or not",
                    "type": "Number"
                }
            ],
            "class": "EmployeeComponent"
        },
        {
            "file": "src/app/route/employee/employee.component.ts",
            "line": 1110,
            "description": "This method is used to save new permssion of Employee",
            "itemtype": "method",
            "name": "savePermission",
            "class": "EmployeeComponent"
        },
        {
            "file": "src/app/route/employee/employee.services.ts",
            "line": 22,
            "description": "Get all records from database in datatable format",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "search",
                    "description": "it is a string type which is used for filter data from data table",
                    "type": "String"
                }
            ],
            "class": "EmployeeServices"
        },
        {
            "file": "src/app/route/employee/employee.services.ts",
            "line": 33,
            "description": "This method is used to create a new record in database",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                }
            ],
            "class": "EmployeeServices"
        },
        {
            "file": "src/app/route/employee/employee.services.ts",
            "line": 52,
            "description": "This method is used to update existing record in database",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "id of Employee for updating specific record",
                    "type": "Number"
                }
            ],
            "class": "EmployeeServices"
        },
        {
            "file": "src/app/route/employee/employee.services.ts",
            "line": 76,
            "description": "Get single record from database",
            "itemtype": "method",
            "name": "getById",
            "params": [
                {
                    "name": "id",
                    "description": "id of Employee for getting specific record",
                    "type": "Number"
                }
            ],
            "class": "EmployeeServices"
        },
        {
            "file": "src/app/route/employee/employee.services.ts",
            "line": 85,
            "description": "This method is used to delete records from database",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "of Employee to delete",
                    "type": "Number"
                }
            ],
            "class": "EmployeeServices"
        },
        {
            "file": "src/app/route/employee/employee.services.ts",
            "line": 94,
            "description": "Get single record along with specific document from database",
            "itemtype": "method",
            "name": "getDocumentById",
            "params": [
                {
                    "name": "id",
                    "description": "id of Employee for getting specific record",
                    "type": "Number"
                },
                {
                    "name": "idDocument",
                    "description": "idDocument of Employee for getting specific document record",
                    "type": "Number"
                }
            ],
            "class": "EmployeeServices"
        },
        {
            "file": "src/app/route/employee/employee.services.ts",
            "line": 107,
            "description": "This method is used for changing password in database",
            "itemtype": "method",
            "name": "changePassword",
            "params": [
                {
                    "name": "id",
                    "description": "id of Employee for getting specific record",
                    "type": "Number"
                },
                {
                    "name": "password",
                    "description": "password is used to set new passsword",
                    "type": "String"
                }
            ],
            "class": "EmployeeServices"
        },
        {
            "file": "src/app/route/employee/employee.services.ts",
            "line": 117,
            "description": "This method is used to make user inactive in database",
            "itemtype": "method",
            "name": "statusInactive",
            "params": [
                {
                    "name": "id",
                    "description": "id of Employee for getting specific record",
                    "type": "Number"
                }
            ],
            "class": "EmployeeServices"
        },
        {
            "file": "src/app/route/employee/employee.services.ts",
            "line": 126,
            "description": "This method is used to make user active in database",
            "itemtype": "method",
            "name": "statusActive",
            "params": [
                {
                    "name": "id",
                    "description": "id of Employee for getting specific record",
                    "type": "Number"
                },
                {
                    "name": "password",
                    "description": "password of Employee for getting specific record",
                    "type": "String"
                }
            ],
            "class": "EmployeeServices"
        },
        {
            "file": "src/app/route/employee/employee.services.ts",
            "line": 136,
            "description": "This method is used to get grants of specific employee",
            "itemtype": "method",
            "name": "grants",
            "params": [
                {
                    "name": "id",
                    "description": "id of Employee for getting specific record",
                    "type": "Number"
                }
            ],
            "class": "EmployeeServices"
        },
        {
            "file": "src/app/route/employee/employee.services.ts",
            "line": 145,
            "description": "This method is used to update grants of specific employee",
            "itemtype": "method",
            "name": "grants",
            "params": [
                {
                    "name": "id",
                    "description": "id of Employee for getting specific record",
                    "type": "Number"
                },
                {
                    "name": "grants",
                    "description": "grants of Employee for updating specific record",
                    "type": "Any"
                }
            ],
            "class": "EmployeeServices"
        },
        {
            "file": "src/app/route/employee/employee.services.ts",
            "line": 155,
            "description": "Get all records from database",
            "itemtype": "method",
            "name": "getAllEmployee",
            "class": "EmployeeServices"
        },
        {
            "file": "src/app/route/employee/employee.services.ts",
            "line": 163,
            "description": "This method is used to save documents in database",
            "itemtype": "method",
            "name": "saveEmployeeDocuments",
            "params": [
                {
                    "name": "data",
                    "description": "here file is passed in body",
                    "type": "Any"
                }
            ],
            "class": "EmployeeServices"
        },
        {
            "file": "src/app/route/employee/employee.services.ts",
            "line": 172,
            "description": "Get all dropdown data from",
            "itemtype": "method",
            "name": "getEmpDropdown",
            "class": "EmployeeServices"
        },
        {
            "file": "src/app/route/holidaycalendar/holidaycalendarform/holidayCalendarform.component.ts",
            "line": 43,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "HolidayCalendarForm"
        },
        {
            "file": "src/app/route/holidaycalendar/holidaycalendarform/holidayCalendarform.component.ts",
            "line": 65,
            "description": "This method is used to save record",
            "itemtype": "method",
            "name": "saveHoldiay",
            "class": "HolidayCalendarForm"
        },
        {
            "file": "src/app/route/holidaycalendar/holidayCalendar.component.ts",
            "line": 26,
            "description": "holidaycalendarform add/edit form",
            "itemtype": "property",
            "name": "Form",
            "class": "HolidayCalendarComponent"
        },
        {
            "file": "src/app/route/holidaycalendar/holidayCalendar.component.ts",
            "line": 70,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "HolidayCalendarComponent"
        },
        {
            "file": "src/app/route/holidaycalendar/holidayCalendar.component.ts",
            "line": 125,
            "description": "This method will be destroy all elements and other values from whole module",
            "itemtype": "method",
            "name": "ngOnDestroy",
            "class": "HolidayCalendarComponent"
        },
        {
            "file": "src/app/route/holidaycalendar/holidayCalendar.component.ts",
            "line": 134,
            "description": "This method is used for filter/search records from datatable",
            "itemtype": "method",
            "name": "searchHoldiays",
            "params": [
                {
                    "name": "srch",
                    "description": "type any which contains string that can be filtered from datatable",
                    "type": "String"
                }
            ],
            "class": "HolidayCalendarComponent"
        },
        {
            "file": "src/app/route/holidaycalendar/holidayCalendar.component.ts",
            "line": 143,
            "description": "This method is used to open modal popup for holiday form",
            "itemtype": "method",
            "name": "openModalForm",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                },
                {
                    "name": "isNew",
                    "description": "it is optional which contains true if it is new record and false when it is old record",
                    "type": "Boolean"
                }
            ],
            "class": "HolidayCalendarComponent"
        },
        {
            "file": "src/app/route/holidaycalendar/holidayCalendar.component.ts",
            "line": 158,
            "description": "This method is used to reload datatable",
            "itemtype": "method",
            "name": "reload",
            "class": "HolidayCalendarComponent"
        },
        {
            "file": "src/app/route/holidaycalendar/holidayCalendar.component.ts",
            "line": 166,
            "description": "This method is used to delete record",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "type which contains id to delete record",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "type which contains entire selected row",
                    "type": "Any"
                }
            ],
            "class": "HolidayCalendarComponent"
        },
        {
            "file": "src/app/route/holidaycalendar/holidayCalendar.services.ts",
            "line": 20,
            "description": "Get all records from database in datatable format",
            "itemtype": "method",
            "name": "getRecords",
            "params": [
                {
                    "name": "cfg",
                    "description": "it is a string type which is used for filter data from data table",
                    "type": "String"
                }
            ],
            "class": "HolidayCalendarServices"
        },
        {
            "file": "src/app/route/holidaycalendar/holidayCalendar.services.ts",
            "line": 31,
            "description": "This method is used to create a new record in database",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "HolidayCalendar"
                }
            ],
            "class": "HolidayCalendarServices"
        },
        {
            "file": "src/app/route/holidaycalendar/holidayCalendar.services.ts",
            "line": 41,
            "description": "This method is used to update existing record in database",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "HolidayCalendar"
                },
                {
                    "name": "id",
                    "description": "id of {{name}} for updating specific record",
                    "type": "Number"
                }
            ],
            "class": "HolidayCalendarServices"
        },
        {
            "file": "src/app/route/holidaycalendar/holidayCalendar.services.ts",
            "line": 51,
            "description": "Get single record from database",
            "itemtype": "method",
            "name": "getById",
            "params": [
                {
                    "name": "id",
                    "description": "id of {{name}} for getting specific record",
                    "type": "Number"
                }
            ],
            "class": "HolidayCalendarServices"
        },
        {
            "file": "src/app/route/holidaycalendar/holidayCalendar.services.ts",
            "line": 60,
            "description": "This method is used to delete records from database",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "of holiday that we want to delete",
                    "type": "Number"
                }
            ],
            "class": "HolidayCalendarServices"
        },
        {
            "file": "src/app/route/job/formAdvanceSearch/formAdvanceSearch.component.ts",
            "line": 58,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "FormAdvanceSearchComponent"
        },
        {
            "file": "src/app/route/job/formAdvanceSearch/formAdvanceSearch.component.ts",
            "line": 73,
            "description": "Get all dropdown data from",
            "itemtype": "method",
            "name": "getBoroughs",
            "class": "FormAdvanceSearchComponent"
        },
        {
            "file": "src/app/route/job/formAdvanceSearch/formAdvanceSearch.component.ts",
            "line": 85,
            "description": "Get all dropdown data from",
            "itemtype": "method",
            "name": "getAllEmployee",
            "class": "FormAdvanceSearchComponent"
        },
        {
            "file": "src/app/route/job/formAdvanceSearch/formAdvanceSearch.component.ts",
            "line": 101,
            "description": "Get all dropdown data from",
            "itemtype": "method",
            "name": "getContacts",
            "class": "FormAdvanceSearchComponent"
        },
        {
            "file": "src/app/route/job/formAdvanceSearch/formAdvanceSearch.component.ts",
            "line": 117,
            "description": "Get all dropdown data from",
            "itemtype": "method",
            "name": "getCompanies",
            "class": "FormAdvanceSearchComponent"
        },
        {
            "file": "src/app/route/job/formAdvanceSearch/formAdvanceSearch.component.ts",
            "line": 130,
            "description": "This method is used for filter/search records from datatable",
            "itemtype": "method",
            "name": "searchJobs",
            "params": [
                {
                    "name": "clearSearch",
                    "description": "type any which contains string that can be filtered from datatable",
                    "type": "Boolean"
                }
            ],
            "class": "FormAdvanceSearchComponent"
        },
        {
            "file": "src/app/route/job/formJob/formJob.component.ts",
            "line": 65,
            "description": "addJobForm add/edit form",
            "itemtype": "property",
            "name": "addJobForm",
            "class": "FormJobComponent"
        },
        {
            "file": "src/app/route/job/formJob/formJob.component.ts",
            "line": 71,
            "description": "formJobAddNewAddress add/edit form",
            "itemtype": "property",
            "name": "formJobAddNewAddress",
            "class": "FormJobComponent"
        },
        {
            "file": "src/app/route/job/formJob/formJob.component.ts",
            "line": 78,
            "description": "viewAddress add/edit form",
            "itemtype": "property",
            "name": "viewAddress",
            "class": "FormJobComponent"
        },
        {
            "file": "src/app/route/job/formJob/formJob.component.ts",
            "line": 150,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "FormJobComponent"
        },
        {
            "file": "src/app/route/job/formJob/formJob.component.ts",
            "line": 260,
            "description": "This method is used to set job Form data",
            "itemtype": "method",
            "name": "setJobFromRFP",
            "params": [
                {
                    "name": "rfpObj",
                    "description": "rfpObj is used as a RFP object",
                    "type": "Rfp"
                }
            ],
            "class": "FormJobComponent"
        },
        {
            "file": "src/app/route/job/formJob/formJob.component.ts",
            "line": 284,
            "description": "This method is used to open modal popup for _openModalFormAddApplication",
            "itemtype": "method",
            "name": "_openModalFormAddApplication",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                }
            ],
            "class": "FormJobComponent"
        },
        {
            "file": "src/app/route/job/formJob/formJob.component.ts",
            "line": 293,
            "description": "This method is used to open modal popup for openModalJobAddNewAddress",
            "itemtype": "method",
            "name": "openModalJobAddNewAddress",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                }
            ],
            "class": "FormJobComponent"
        },
        {
            "file": "src/app/route/job/formJob/formJob.component.ts",
            "line": 303,
            "description": "This method is used to open modal popup for _openModalAddAdress",
            "itemtype": "method",
            "name": "_openModalAddAdress",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                }
            ],
            "class": "FormJobComponent"
        },
        {
            "file": "src/app/route/job/formJob/formJob.component.ts",
            "line": 312,
            "description": "This method is used to open modal popup for openModalAddAdress",
            "itemtype": "method",
            "name": "openModalAddAdress",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                }
            ],
            "class": "FormJobComponent"
        },
        {
            "file": "src/app/route/job/formJob/formJob.component.ts",
            "line": 322,
            "description": "This method is used to open modal popup for view address modal",
            "itemtype": "method",
            "name": "viewAddressModal",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                }
            ],
            "class": "FormJobComponent"
        },
        {
            "file": "src/app/route/job/formJob/formJob.component.ts",
            "line": 332,
            "description": "This method is used to set address data",
            "itemtype": "method",
            "name": "setAddressData",
            "class": "FormJobComponent"
        },
        {
            "file": "src/app/route/job/formJob/formJob.component.ts",
            "line": 350,
            "description": "This method is used to set address type",
            "itemtype": "method",
            "name": "setAddressType",
            "class": "FormJobComponent"
        },
        {
            "file": "src/app/route/job/formJob/formJob.component.ts",
            "line": 358,
            "description": "Get all dropdown data from getCompanies",
            "itemtype": "method",
            "name": "getCompanies",
            "class": "FormJobComponent"
        },
        {
            "file": "src/app/route/job/formJob/formJob.component.ts",
            "line": 370,
            "description": "Get all dropdown data from getAddress",
            "itemtype": "method",
            "name": "getAddress",
            "class": "FormJobComponent"
        },
        {
            "file": "src/app/route/job/formJob/formJob.component.ts",
            "line": 393,
            "description": "This method is used to set contact details",
            "itemtype": "method",
            "name": "setContacts",
            "class": "FormJobComponent"
        },
        {
            "file": "src/app/route/job/formJob/formJob.component.ts",
            "line": 413,
            "description": "Get all dropdown data from Employees",
            "itemtype": "method",
            "name": "getEmployee",
            "class": "FormJobComponent"
        },
        {
            "file": "src/app/route/job/formJob/formJob.component.ts",
            "line": 426,
            "description": "Get all dropdown data from Contact Titles",
            "itemtype": "method",
            "name": "getContactTitles",
            "class": "FormJobComponent"
        },
        {
            "file": "src/app/route/job/formJob/formJob.component.ts",
            "line": 438,
            "description": "Get all dropdown data from Contact Types",
            "itemtype": "method",
            "name": "getContactTypes",
            "class": "FormJobComponent"
        },
        {
            "file": "src/app/route/job/formJob/formJob.component.ts",
            "line": 450,
            "description": "Get all dropdown data from Boroughs",
            "itemtype": "method",
            "name": "getBoroughs",
            "class": "FormJobComponent"
        },
        {
            "file": "src/app/route/job/formJob/formJob.component.ts",
            "line": 462,
            "description": "This method is used to remove job type",
            "itemtype": "method",
            "name": "removeJobType",
            "params": [
                {
                    "name": "jobId",
                    "description": "jobid is Id of job @param {number} jobId jobid is Id of job",
                    "type": "Number"
                },
                {
                    "name": "event",
                    "description": "event is an object of job type",
                    "type": "Any"
                }
            ],
            "class": "FormJobComponent"
        },
        {
            "file": "src/app/route/job/formJob/formJob.component.ts",
            "line": 502,
            "description": "This method is used to get all job application types",
            "itemtype": "method",
            "name": "getJobApplicationTypes",
            "class": "FormJobComponent"
        },
        {
            "file": "src/app/route/job/formJob/formJob.component.ts",
            "line": 547,
            "description": "This method is used to save record",
            "itemtype": "method",
            "name": "saveJob",
            "class": "FormJobComponent"
        },
        {
            "file": "src/app/route/job/formJob/formJob.component.ts",
            "line": 631,
            "description": "This method is used to call focus out of input element occurs",
            "itemtype": "method",
            "name": "focusOutFunction",
            "params": [
                {
                    "name": "e",
                    "description": "e is an object",
                    "type": "Any"
                }
            ],
            "class": "FormJobComponent"
        },
        {
            "file": "src/app/route/job/formJob/formJob.component.ts",
            "line": 643,
            "description": "This method is used to call event when alerting user to check warning message",
            "itemtype": "method",
            "name": "fireEvent",
            "params": [
                {
                    "name": "e",
                    "description": "e is an object",
                    "type": "Any"
                }
            ],
            "class": "FormJobComponent"
        },
        {
            "file": "src/app/route/job/formJob/formJob.component.ts",
            "line": 658,
            "description": "Get selected item from multiselect dropdown",
            "itemtype": "method",
            "name": "onItemSelect",
            "params": [
                {
                    "name": "item",
                    "description": "selected item",
                    "type": "Any"
                }
            ],
            "class": "FormJobComponent"
        },
        {
            "file": "src/app/route/job/formJob/formJob.component.ts",
            "line": 668,
            "description": "Deselect item from multiselect dropdown",
            "itemtype": "method",
            "name": "OnItemDeSelect",
            "params": [
                {
                    "name": "item",
                    "description": "deselected item",
                    "type": "Any"
                }
            ],
            "class": "FormJobComponent"
        },
        {
            "file": "src/app/route/job/formJob/formJob.component.ts",
            "line": 677,
            "description": "select on all in multiselect dropdown",
            "itemtype": "method",
            "name": "onSelectAll",
            "params": [
                {
                    "name": "items",
                    "description": "selected all items",
                    "type": "Any"
                }
            ],
            "class": "FormJobComponent"
        },
        {
            "file": "src/app/route/job/formJob/formJob.component.ts",
            "line": 686,
            "description": "deselect on all in multiselect dropdown",
            "itemtype": "method",
            "name": "onDeSelectAll",
            "params": [
                {
                    "name": "items",
                    "description": "deselected all items",
                    "type": "Any"
                }
            ],
            "class": "FormJobComponent"
        },
        {
            "file": "src/app/route/job/formJobAddNewAddress/formJobAddNewAddress.component.ts",
            "line": 58,
            "description": "viewAddressList add/edit form",
            "itemtype": "property",
            "name": "viewAddressList",
            "class": "FormJobAddNewAddressComponent"
        },
        {
            "file": "src/app/route/job/formJobAddNewAddress/formJobAddNewAddress.component.ts",
            "line": 109,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "FormJobAddNewAddressComponent"
        },
        {
            "file": "src/app/route/job/formJobAddNewAddress/formJobAddNewAddress.component.ts",
            "line": 180,
            "description": "Get all dropdown data from RFP address data",
            "itemtype": "method",
            "name": "getRfpAddress",
            "class": "FormJobAddNewAddressComponent"
        },
        {
            "file": "src/app/route/job/formJobAddNewAddress/formJobAddNewAddress.component.ts",
            "line": 195,
            "description": "This method is used check BIS Info",
            "itemtype": "method",
            "name": "checkBisAddressInfo",
            "class": "FormJobAddNewAddressComponent"
        },
        {
            "file": "src/app/route/job/formJobAddNewAddress/formJobAddNewAddress.component.ts",
            "line": 208,
            "description": "This method is used get BIS Address Info",
            "itemtype": "method",
            "name": "getBisAddressInfo",
            "class": "FormJobAddNewAddressComponent"
        },
        {
            "file": "src/app/route/job/formJobAddNewAddress/formJobAddNewAddress.component.ts",
            "line": 232,
            "description": "This method is used convert value or label to Title case",
            "itemtype": "method",
            "name": "toTitleCase",
            "params": [
                {
                    "name": "str",
                    "description": "str is a string which is used to convert string to Title case",
                    "type": "String"
                }
            ],
            "class": "FormJobAddNewAddressComponent"
        },
        {
            "file": "src/app/route/job/formJobAddNewAddress/formJobAddNewAddress.component.ts",
            "line": 241,
            "description": "This method is used to update form fields from get info",
            "itemtype": "method",
            "name": "updateFormFieldsFromGetInfo",
            "params": [
                {
                    "name": "address",
                    "description": "address is an object which is used to update form fields from get info",
                    "type": "Any"
                }
            ],
            "class": "FormJobAddNewAddressComponent"
        },
        {
            "file": "src/app/route/job/formJobAddNewAddress/formJobAddNewAddress.component.ts",
            "line": 269,
            "description": "This method is used to open modal popup for openModalAddressList",
            "itemtype": "method",
            "name": "openModalAddressList",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                }
            ],
            "class": "FormJobAddNewAddressComponent"
        },
        {
            "file": "src/app/route/job/formJobAddNewAddress/formJobAddNewAddress.component.ts",
            "line": 278,
            "description": "This method is used make formatting of phone number",
            "itemtype": "method",
            "name": "telephoneVal",
            "class": "FormJobAddNewAddressComponent"
        },
        {
            "file": "src/app/route/job/formJobAddNewAddress/formJobAddNewAddress.component.ts",
            "line": 294,
            "description": "Get all dropdown data from Boroughs",
            "itemtype": "method",
            "name": "getBoroughs",
            "class": "FormJobAddNewAddressComponent"
        },
        {
            "file": "src/app/route/job/formJobAddNewAddress/formJobAddNewAddress.component.ts",
            "line": 306,
            "description": "Get all dropdown data from Companies",
            "itemtype": "method",
            "name": "getCompanies",
            "class": "FormJobAddNewAddressComponent"
        },
        {
            "file": "src/app/route/job/formJobAddNewAddress/formJobAddNewAddress.component.ts",
            "line": 318,
            "description": "Get all dropdown data from Contacts",
            "itemtype": "method",
            "name": "getContacts",
            "class": "FormJobAddNewAddressComponent"
        },
        {
            "file": "src/app/route/job/formJobAddNewAddress/formJobAddNewAddress.component.ts",
            "line": 330,
            "description": "This method is used to save address record",
            "itemtype": "method",
            "name": "saveRfpAddress",
            "class": "FormJobAddNewAddressComponent"
        },
        {
            "file": "src/app/route/job/formJobAddNewAddress/formJobAddNewAddress.component.ts",
            "line": 349,
            "description": "This method is used to update existing address record in database",
            "itemtype": "method",
            "name": "updateAddress",
            "params": [
                {
                    "name": "rec",
                    "description": "type request Object",
                    "type": "Any"
                }
            ],
            "class": "FormJobAddNewAddressComponent"
        },
        {
            "file": "src/app/route/job/formJobAddNewAddress/formJobAddNewAddress.component.ts",
            "line": 363,
            "description": "This method is used to create a new address record in database",
            "itemtype": "method",
            "name": "createAddress",
            "params": [
                {
                    "name": "rec",
                    "description": "address request Object",
                    "type": "Any"
                }
            ],
            "class": "FormJobAddNewAddressComponent"
        },
        {
            "file": "src/app/route/job/formJobAddNewAddress/formJobAddNewAddress.component.ts",
            "line": 400,
            "description": "This method is used to set company data",
            "itemtype": "method",
            "name": "setCompany",
            "class": "FormJobAddNewAddressComponent"
        },
        {
            "file": "src/app/route/job/formJobAddNewAddress/formJobAddNewAddress.component.ts",
            "line": 408,
            "description": "This method is used to set contact data",
            "itemtype": "method",
            "name": "setContact",
            "class": "FormJobAddNewAddressComponent"
        },
        {
            "file": "src/app/route/job/formJobAddNewAddress/formJobAddNewAddress.component.ts",
            "line": 416,
            "description": "This method is used to set Occupancy Classification data",
            "itemtype": "method",
            "name": "setOccupancyClassification",
            "class": "FormJobAddNewAddressComponent"
        },
        {
            "file": "src/app/route/job/formJobAddNewAddress/formJobAddNewAddress.component.ts",
            "line": 424,
            "description": "This method is used to set Construction Classification data",
            "itemtype": "method",
            "name": "setConstructionClassifications",
            "class": "FormJobAddNewAddressComponent"
        },
        {
            "file": "src/app/route/job/formJobAddNewAddress/formJobAddNewAddress.component.ts",
            "line": 432,
            "description": "This method is used to set Multiple Dwelling Classification data",
            "itemtype": "method",
            "name": "setmultipleDwellingClassifications",
            "class": "FormJobAddNewAddressComponent"
        },
        {
            "file": "src/app/route/job/formJobAddNewAddress/formJobAddNewAddress.component.ts",
            "line": 440,
            "description": "This method is used to set Primary Structural Systems data",
            "itemtype": "method",
            "name": "setprimaryStructuralSystems",
            "class": "FormJobAddNewAddressComponent"
        },
        {
            "file": "src/app/route/job/formJobAddNewAddress/formJobAddNewAddress.component.ts",
            "line": 448,
            "description": "This method is used to set Structure Occupancy Categories data",
            "itemtype": "method",
            "name": "setstructureOccupancyCategories",
            "class": "FormJobAddNewAddressComponent"
        },
        {
            "file": "src/app/route/job/formJobAddNewAddress/formJobAddNewAddress.component.ts",
            "line": 456,
            "description": "This method is used to set Seismic Design Categories data",
            "itemtype": "method",
            "name": "setseismicDesignCategories",
            "class": "FormJobAddNewAddressComponent"
        },
        {
            "file": "src/app/route/job/formJobReason/jobReason.component.ts",
            "line": 51,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "JobReasonForm"
        },
        {
            "file": "src/app/route/job/formJobReason/jobReason.component.ts",
            "line": 61,
            "description": "This method is used to save reason in database, an event emitter is executed which update other components",
            "itemtype": "method",
            "name": "saveReason",
            "class": "JobReasonForm"
        },
        {
            "file": "src/app/route/job/formJobReason/jobReason.services.ts",
            "line": 19,
            "description": "This method is used to create a new reason record for specific job",
            "itemtype": "method",
            "name": "CreateReason",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                }
            ],
            "class": "JobReasonServices"
        },
        {
            "file": "src/app/route/job/jobDetail/basicInfo/addtimenotes/addtimenotes.component.ts",
            "line": 48,
            "description": "This method define all services that requires in whole class",
            "itemtype": "method",
            "name": "constructor",
            "class": "AddTimeNotesComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/basicInfo/addtimenotes/addtimenotes.component.ts",
            "line": 66,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "AddTimeNotesComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/basicInfo/addtimenotes/addtimenotes.component.ts",
            "line": 87,
            "description": "This method will get all sevice items for dropdown",
            "itemtype": "method",
            "name": "setServiceItemsDD",
            "class": "AddTimeNotesComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/basicInfo/addtimenotes/addtimenotes.component.ts",
            "line": 114,
            "description": "This method is used to check whether value entered is number or not",
            "itemtype": "method",
            "name": "isNumber",
            "params": [
                {
                    "name": "evt",
                    "description": "evt of input",
                    "type": "Any"
                }
            ],
            "class": "AddTimeNotesComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/basicInfo/addtimenotes/addtimenotes.component.ts",
            "line": 128,
            "description": "This method is used to check whether value entered is decimal or not",
            "itemtype": "method",
            "name": "isDecimal",
            "params": [
                {
                    "name": "evt",
                    "description": "evt of input",
                    "type": "Any"
                }
            ],
            "class": "AddTimeNotesComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/basicInfo/addtimenotes/addtimenotes.component.ts",
            "line": 151,
            "description": "This method will save time note entry",
            "itemtype": "method",
            "name": "save",
            "class": "AddTimeNotesComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDep/formAddDepApplication/formAddDepApplication.component.ts",
            "line": 45,
            "description": "This method define all services that requires in whole class",
            "itemtype": "method",
            "name": "constructor",
            "class": "FormAddDepApplication"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDep/formAddDepApplication/formAddDepApplication.component.ts",
            "line": 58,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "FormAddDepApplication"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDep/formAddDepApplication/formAddDepApplication.component.ts",
            "line": 104,
            "description": "This method check calcualted days are valid or not",
            "itemtype": "method",
            "name": "ChecktheValidDays",
            "class": "FormAddDepApplication"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDep/formAddDepApplication/formAddDepApplication.component.ts",
            "line": 122,
            "description": "This method check given data is number or not",
            "itemtype": "method",
            "name": "isNumber",
            "params": [
                {
                    "name": "evt",
                    "description": "event object",
                    "type": "Any"
                }
            ],
            "class": "FormAddDepApplication"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDep/formAddDepApplication/formAddDepApplication.component.ts",
            "line": 136,
            "description": "This method calculate Dep end date based on start date and number of days",
            "itemtype": "method",
            "name": "getCalculationDep",
            "class": "FormAddDepApplication"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDep/formAddDepApplication/formAddDepApplication.component.ts",
            "line": 169,
            "description": "This method get application status",
            "itemtype": "method",
            "name": "getAppStatus",
            "class": "FormAddDepApplication"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDep/formAddDepApplication/formAddDepApplication.component.ts",
            "line": 202,
            "description": "This method save Dep Job Application",
            "itemtype": "method",
            "name": "saveDepJobApplication",
            "class": "FormAddDepApplication"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDep/jobApplicationDep.component.ts",
            "line": 37,
            "description": "Add Dep Application Form",
            "itemtype": "property",
            "name": "formAddDepApplication",
            "class": "JobApplicationDepComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDep/jobApplicationDep.component.ts",
            "line": 66,
            "description": "This method define all services that requires in whole class",
            "itemtype": "method",
            "name": "constructor",
            "class": "JobApplicationDepComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDep/jobApplicationDep.component.ts",
            "line": 112,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "JobApplicationDepComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDep/jobApplicationDep.component.ts",
            "line": 273,
            "description": "This method distroy all object value when user moves from this component",
            "itemtype": "method",
            "name": "ngOnDestroy",
            "class": "JobApplicationDepComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDep/jobApplicationDep.component.ts",
            "line": 283,
            "description": "This method will set job detail",
            "itemtype": "method",
            "name": "setDataIfJobDetail",
            "class": "JobApplicationDepComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDep/jobApplicationDep.component.ts",
            "line": 296,
            "description": "This method set buttons on job status",
            "itemtype": "method",
            "name": "setBtnBasedonStatus",
            "params": [
                {
                    "name": "jobDetail",
                    "description": "Job Object",
                    "type": "Any"
                }
            ],
            "class": "JobApplicationDepComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDep/jobApplicationDep.component.ts",
            "line": 320,
            "description": "This method will open add application popup",
            "itemtype": "method",
            "name": "_openModalFormAddApplication",
            "params": [
                {
                    "name": "template",
                    "description": "TemplateRef object",
                    "type": "Any"
                }
            ],
            "class": "JobApplicationDepComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDep/jobApplicationDep.component.ts",
            "line": 329,
            "description": "This method will open add application popup",
            "itemtype": "method",
            "name": "_openModalFormAddApplication",
            "params": [
                {
                    "name": "template",
                    "description": "TemplateRef object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "ID of Job Application",
                    "type": "Number"
                }
            ],
            "class": "JobApplicationDepComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDep/jobApplicationDep.component.ts",
            "line": 342,
            "description": "This method will search in datatable",
            "itemtype": "method",
            "name": "search",
            "params": [
                {
                    "name": "srch",
                    "description": "Search Criteria",
                    "type": "String"
                }
            ],
            "class": "JobApplicationDepComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDep/jobApplicationDep.component.ts",
            "line": 351,
            "description": "This method will reload datatable",
            "itemtype": "method",
            "name": "reload",
            "class": "JobApplicationDepComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDep/jobApplicationDep.component.ts",
            "line": 360,
            "description": "This method will delete dep job application",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "ID of Application",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "Row of Application",
                    "type": "Any"
                }
            ],
            "class": "JobApplicationDepComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDob/formAddApplication/formAddApplication.component.ts",
            "line": 41,
            "description": "This method define all services that requires in whole class",
            "itemtype": "method",
            "name": "constructor",
            "class": "FormAddApplication"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDob/formAddApplication/formAddApplication.component.ts",
            "line": 54,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "FormAddApplication"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDob/formAddApplication/formAddApplication.component.ts",
            "line": 78,
            "description": "This method get application status",
            "itemtype": "method",
            "name": "getAppStatus",
            "class": "FormAddApplication"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDob/formAddApplication/formAddApplication.component.ts",
            "line": 112,
            "description": "This method save DOB Job Application",
            "itemtype": "method",
            "name": "saveDepJobApplication",
            "class": "FormAddApplication"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDob/formAddApplication/formAddApplication.component.ts",
            "line": 138,
            "description": "This method delete DOB Job Application",
            "itemtype": "method",
            "name": "deleteApplication",
            "class": "FormAddApplication"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDob/formAddPermit/formAddPermit.component.ts",
            "line": 45,
            "description": "This method define all services that requires in whole class",
            "itemtype": "method",
            "name": "constructor",
            "class": "FormAddPermit"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDob/formAddPermit/formAddPermit.component.ts",
            "line": 59,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "FormAddPermit"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDob/formAddPermit/formAddPermit.component.ts",
            "line": 94,
            "description": "This method disable person responsible",
            "itemtype": "method",
            "name": "disablePersonResposible",
            "class": "FormAddPermit"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDob/formAddPermit/formAddPermit.component.ts",
            "line": 107,
            "description": "This method get contacts list",
            "itemtype": "method",
            "name": "contacts",
            "params": [
                {
                    "name": "idJob",
                    "description": "ID of Job",
                    "type": "Number"
                }
            ],
            "class": "FormAddPermit"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDob/formAddPermit/formAddPermit.component.ts",
            "line": 122,
            "description": "This method will call when work permit type changed",
            "itemtype": "method",
            "name": "onChangeWorkPermitType",
            "params": [
                {
                    "name": "event",
                    "description": "Event object",
                    "type": "Any"
                }
            ],
            "class": "FormAddPermit"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDob/formAddPermit/formAddPermit.component.ts",
            "line": 138,
            "description": "This method will get Work Permit list",
            "itemtype": "method",
            "name": "getWorkPermit",
            "class": "FormAddPermit"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDob/formAddPermit/formAddPermit.component.ts",
            "line": 173,
            "description": "This method will save permit",
            "itemtype": "method",
            "name": "savePermit",
            "class": "FormAddPermit"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDob/formAddPermit/formAddPermit.component.ts",
            "line": 204,
            "description": "This method will get company list",
            "itemtype": "method",
            "name": "getCompany",
            "params": [
                {
                    "name": "e",
                    "description": "company object",
                    "type": "Any"
                }
            ],
            "class": "FormAddPermit"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDob/formAddPermit/formAddPermit.component.ts",
            "line": 221,
            "description": "This method will check given number is decimal or not",
            "itemtype": "method",
            "name": "isDecimal",
            "params": [
                {
                    "name": "evt",
                    "description": "Event Object",
                    "type": "Any"
                }
            ],
            "class": "FormAddPermit"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDob/formAddPermit/formAddPermit.component.ts",
            "line": 241,
            "description": "This method converts string date into date object",
            "itemtype": "method",
            "name": "getTheDateObject",
            "params": [
                {
                    "name": "date",
                    "description": "String Date",
                    "type": "Any"
                }
            ],
            "class": "FormAddPermit"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDob/jobApplicationDob.component.ts",
            "line": 38,
            "description": "Form Document",
            "itemtype": "property",
            "name": "formDocument",
            "class": "JobApplicationDobComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDob/jobApplicationDob.component.ts",
            "line": 45,
            "description": "Form Add Application",
            "itemtype": "property",
            "name": "formAddApplication",
            "class": "JobApplicationDobComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDob/jobApplicationDob.component.ts",
            "line": 52,
            "description": "Form Add Task",
            "itemtype": "property",
            "name": "addtask",
            "class": "JobApplicationDobComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDob/jobApplicationDob.component.ts",
            "line": 84,
            "description": "This method define all services that requires in whole class",
            "itemtype": "method",
            "name": "constructor",
            "class": "JobApplicationDobComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDob/jobApplicationDob.component.ts",
            "line": 130,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "JobApplicationDobComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDob/jobApplicationDob.component.ts",
            "line": 281,
            "description": "This method destroy object from component",
            "itemtype": "method",
            "name": "ngOnDestroy",
            "class": "JobApplicationDobComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDob/jobApplicationDob.component.ts",
            "line": 291,
            "description": "This method set job detail",
            "itemtype": "method",
            "name": "setDataIfJobDetail",
            "class": "JobApplicationDobComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDob/jobApplicationDob.component.ts",
            "line": 304,
            "description": "This method set buttons on job status",
            "itemtype": "method",
            "name": "setBtnBasedonStatus",
            "params": [
                {
                    "name": "jobDetail",
                    "description": "Job Object",
                    "type": "Any"
                }
            ],
            "class": "JobApplicationDobComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDob/jobApplicationDob.component.ts",
            "line": 329,
            "description": "This method will open add application popup",
            "itemtype": "method",
            "name": "_openModalFormAddApplication",
            "params": [
                {
                    "name": "template",
                    "description": "TemplateRef object",
                    "type": "Any"
                }
            ],
            "class": "JobApplicationDobComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDob/jobApplicationDob.component.ts",
            "line": 338,
            "description": "This method will open add application popup",
            "itemtype": "method",
            "name": "_openModalFormAddApplication",
            "params": [
                {
                    "name": "template",
                    "description": "TemplateRef object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "ID of Job Application",
                    "type": "Number"
                }
            ],
            "class": "JobApplicationDobComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDob/jobApplicationDob.component.ts",
            "line": 351,
            "description": "This method will search in datatable",
            "itemtype": "method",
            "name": "search",
            "params": [
                {
                    "name": "srch",
                    "description": "Search Criteria",
                    "type": "String"
                }
            ],
            "class": "JobApplicationDobComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDob/jobApplicationDob.component.ts",
            "line": 360,
            "description": "This method will reload datatable",
            "itemtype": "method",
            "name": "reload",
            "class": "JobApplicationDobComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDob/jobApplicationDob.component.ts",
            "line": 369,
            "description": "This method will delete dep job application",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "ID of Application",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "Row of Application",
                    "type": "Any"
                }
            ],
            "class": "JobApplicationDobComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDob/jobApplicationPermit.component.ts",
            "line": 30,
            "description": "Form Add Permit",
            "itemtype": "property",
            "name": "formAddPermit",
            "class": "JobApplicationPermitComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDob/jobApplicationPermit.component.ts",
            "line": 37,
            "description": "Form Upload Permit",
            "itemtype": "property",
            "name": "formUploadPermit",
            "class": "JobApplicationPermitComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDob/jobApplicationPermit.component.ts",
            "line": 68,
            "description": "This method define all services that requires in whole class",
            "itemtype": "method",
            "name": "constructor",
            "class": "JobApplicationPermitComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDob/jobApplicationPermit.component.ts",
            "line": 92,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "JobApplicationPermitComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDob/jobApplicationPermit.component.ts",
            "line": 128,
            "description": "This method destroy all object when user moves from component",
            "itemtype": "method",
            "name": "ngOnDestroy",
            "class": "JobApplicationPermitComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDob/jobApplicationPermit.component.ts",
            "line": 136,
            "description": "This method will set button based on status",
            "itemtype": "method",
            "name": "setBtnBasedonStatus",
            "params": [
                {
                    "name": "jobDetail",
                    "description": "Job Object",
                    "type": "Any"
                }
            ],
            "class": "JobApplicationPermitComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDob/jobApplicationPermit.component.ts",
            "line": 151,
            "description": "This method will get Application",
            "itemtype": "method",
            "name": "getApplication",
            "params": [
                {
                    "name": "vm",
                    "description": "Table Object",
                    "type": "Any"
                }
            ],
            "class": "JobApplicationPermitComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDob/jobApplicationPermit.component.ts",
            "line": 188,
            "description": "This method will load data table",
            "itemtype": "method",
            "name": "loadDataTable",
            "params": [
                {
                    "name": "vm",
                    "description": "Table Object",
                    "type": "Any"
                }
            ],
            "class": "JobApplicationPermitComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDob/jobApplicationPermit.component.ts",
            "line": 323,
            "description": "This method will reload datatable",
            "itemtype": "method",
            "name": "reload",
            "class": "JobApplicationPermitComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDob/jobApplicationPermit.component.ts",
            "line": 332,
            "description": "This method will delete work permit",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "ID of work pemit",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "WorkPermit Row",
                    "type": "Any"
                }
            ],
            "class": "JobApplicationPermitComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDob/jobApplicationPermit.component.ts",
            "line": 350,
            "description": "This method will search permit",
            "itemtype": "method",
            "name": "searchPermit",
            "params": [
                {
                    "name": "searchpermit",
                    "description": "Search Criteria",
                    "type": "String"
                }
            ],
            "class": "JobApplicationPermitComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDob/jobApplicationPermit.component.ts",
            "line": 359,
            "description": "This method will open Add permit model",
            "itemtype": "method",
            "name": "_openModalFormAddPermit",
            "params": [
                {
                    "name": "template",
                    "description": "TemplateRef Object",
                    "type": "Any"
                }
            ],
            "class": "JobApplicationPermitComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDob/jobApplicationPermit.component.ts",
            "line": 368,
            "description": "This method will open Add permit model",
            "itemtype": "method",
            "name": "openModalFormAddPermit",
            "params": [
                {
                    "name": "template",
                    "description": "TemplateRef Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "Id of permit",
                    "type": "Number"
                }
            ],
            "class": "JobApplicationPermitComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDob/jobApplicationPermit.component.ts",
            "line": 384,
            "description": "This method will open popup for upload permit",
            "itemtype": "method",
            "name": "openModalUploadPermit",
            "params": [
                {
                    "name": "template",
                    "description": "TemplateRef Object",
                    "type": "Any"
                }
            ],
            "class": "JobApplicationPermitComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDot/formAddDot/formAddDot.component.ts",
            "line": 40,
            "description": "This method define all services that requires in whole class",
            "itemtype": "method",
            "name": "constructor",
            "class": "FormAddDot"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDot/formAddDot/formAddDot.component.ts",
            "line": 53,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "FormAddDot"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDot/formAddDot/formAddDot.component.ts",
            "line": 77,
            "description": "This method get application status",
            "itemtype": "method",
            "name": "getAppStatus",
            "class": "FormAddDot"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDot/formAddDot/formAddDot.component.ts",
            "line": 110,
            "description": "This method save job application",
            "itemtype": "method",
            "name": "saveJobApplication",
            "class": "FormAddDot"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDot/formAddDot/formAddDot.component.ts",
            "line": 138,
            "description": "This method delete job application",
            "itemtype": "method",
            "name": "deleteApplication",
            "class": "FormAddDot"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDot/formAddDotPermit/formAddDotPermit.component.ts",
            "line": 45,
            "description": "This method define all services that requires in whole class",
            "itemtype": "method",
            "name": "constructor",
            "class": "FormAddDotPermit"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDot/formAddDotPermit/formAddDotPermit.component.ts",
            "line": 60,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "FormAddDotPermit"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDot/formAddDotPermit/formAddDotPermit.component.ts",
            "line": 101,
            "description": "This method disable person responsible",
            "itemtype": "method",
            "name": "disablePersonResposible",
            "class": "FormAddDotPermit"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDot/formAddDotPermit/formAddDotPermit.component.ts",
            "line": 114,
            "description": "This method get all contacts",
            "itemtype": "method",
            "name": "contacts",
            "params": [
                {
                    "name": "idJob",
                    "description": "ID of Job",
                    "type": "Number"
                }
            ],
            "class": "FormAddDotPermit"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDot/formAddDotPermit/formAddDotPermit.component.ts",
            "line": 129,
            "description": "This method get all work permits",
            "itemtype": "method",
            "name": "getWorkPermit",
            "class": "FormAddDotPermit"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDot/formAddDotPermit/formAddDotPermit.component.ts",
            "line": 167,
            "description": "This method save work permit",
            "itemtype": "method",
            "name": "savePermit",
            "class": "FormAddDotPermit"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDot/formAddDotPermit/formAddDotPermit.component.ts",
            "line": 197,
            "description": "This method get company list",
            "itemtype": "method",
            "name": "getCompany",
            "params": [
                {
                    "name": "e",
                    "description": "Event Object",
                    "type": "Any"
                }
            ],
            "class": "FormAddDotPermit"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDot/formAddDotPermit/formAddDotPermit.component.ts",
            "line": 214,
            "description": "This method convert string date to object",
            "itemtype": "method",
            "name": "getTheDateObject",
            "params": [
                {
                    "name": "date",
                    "description": "Date String",
                    "type": "Any"
                }
            ],
            "class": "FormAddDotPermit"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDot/formAddDotPermit/formAddDotPermit.component.ts",
            "line": 223,
            "description": "This method check given number is decimal or not",
            "itemtype": "method",
            "name": "isDecimal",
            "params": [
                {
                    "name": "evt",
                    "description": "Event Object",
                    "type": "Any"
                }
            ],
            "class": "FormAddDotPermit"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDot/formUploadDotPermit/formUploadDotPermit.component.ts",
            "line": 36,
            "description": "This method define all services that requires in whole class",
            "itemtype": "method",
            "name": "constructor",
            "class": "FormUploadDotPermit"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDot/formUploadDotPermit/formUploadDotPermit.component.ts",
            "line": 52,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "FormUploadDotPermit"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDot/formUploadDotPermit/formUploadDotPermit.component.ts",
            "line": 63,
            "description": "This method call when attach document",
            "itemtype": "method",
            "name": "documentUpload",
            "params": [
                {
                    "name": "evt",
                    "description": "Event Object",
                    "type": "Any"
                }
            ],
            "class": "FormUploadDotPermit"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDot/formUploadDotPermit/formUploadDotPermit.component.ts",
            "line": 84,
            "description": "This method checks that value is in array or not",
            "itemtype": "method",
            "name": "isInArray",
            "params": [
                {
                    "name": "array",
                    "description": "Array in which want to search",
                    "type": "Any"
                },
                {
                    "name": "word",
                    "description": "Search String",
                    "type": "String"
                }
            ],
            "class": "FormUploadDotPermit"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDot/formUploadDotPermit/formUploadDotPermit.component.ts",
            "line": 94,
            "description": "This method read PDF File",
            "itemtype": "method",
            "name": "readPDFFile",
            "class": "FormUploadDotPermit"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDot/formUploadDotPermit/formUploadDotPermit.component.ts",
            "line": 112,
            "description": "This method save permit",
            "itemtype": "method",
            "name": "savePermit",
            "class": "FormUploadDotPermit"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDot/formUploadDotPermit/formUploadDotPermit.component.ts",
            "line": 161,
            "description": "This method convert given string into pascal case (e.g = Rpo App)",
            "itemtype": "method",
            "name": "toTitleCase",
            "params": [
                {
                    "name": "str",
                    "description": "request string",
                    "type": "String"
                }
            ],
            "class": "FormUploadDotPermit"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDot/jobApplicationDot.component.ts",
            "line": 40,
            "description": "Form Document",
            "itemtype": "property",
            "name": "formDocument",
            "class": "JobApplicationDotComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDot/jobApplicationDot.component.ts",
            "line": 47,
            "description": "Form Add DOT Application",
            "itemtype": "property",
            "name": "formAddDot",
            "class": "JobApplicationDotComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDot/jobApplicationDot.component.ts",
            "line": 54,
            "description": "Add Task Form",
            "itemtype": "property",
            "name": "addtask",
            "class": "JobApplicationDotComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDot/jobApplicationDot.component.ts",
            "line": 86,
            "description": "This method define all services that requires in whole class",
            "itemtype": "method",
            "name": "constructor",
            "class": "JobApplicationDotComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDot/jobApplicationDot.component.ts",
            "line": 131,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "JobApplicationDotComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDot/jobApplicationDot.component.ts",
            "line": 304,
            "description": "This method will destroy all object when user moves from this component",
            "itemtype": "method",
            "name": "ngOnDestroy",
            "class": "JobApplicationDotComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDot/jobApplicationDot.component.ts",
            "line": 314,
            "description": "This method set job detail",
            "itemtype": "method",
            "name": "setDataIfJobDetail",
            "class": "JobApplicationDotComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDot/jobApplicationDot.component.ts",
            "line": 326,
            "description": "This method set buttons on job status",
            "itemtype": "method",
            "name": "setBtnBasedonStatus",
            "params": [
                {
                    "name": "jobDetail",
                    "description": "Job Object",
                    "type": "Any"
                }
            ],
            "class": "JobApplicationDotComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDot/jobApplicationDot.component.ts",
            "line": 350,
            "description": "This method will open add application popup",
            "itemtype": "method",
            "name": "_openModalFormAddApplication",
            "params": [
                {
                    "name": "template",
                    "description": "TemplateRef object",
                    "type": "Any"
                }
            ],
            "class": "JobApplicationDotComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDot/jobApplicationDot.component.ts",
            "line": 359,
            "description": "This method will open add application popup",
            "itemtype": "method",
            "name": "_openModalFormAddApplication",
            "params": [
                {
                    "name": "template",
                    "description": "TemplateRef object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "ID of Job Application",
                    "type": "Number"
                }
            ],
            "class": "JobApplicationDotComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDot/jobApplicationDot.component.ts",
            "line": 372,
            "description": "This method will search in datatable",
            "itemtype": "method",
            "name": "search",
            "params": [
                {
                    "name": "srch",
                    "description": "Search Criteria",
                    "type": "String"
                }
            ],
            "class": "JobApplicationDotComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDot/jobApplicationDot.component.ts",
            "line": 381,
            "description": "This method will reload datatable",
            "itemtype": "method",
            "name": "reload",
            "class": "JobApplicationDotComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDot/jobApplicationDot.component.ts",
            "line": 390,
            "description": "This method will delete dep job application",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "ID of Application",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "Row of Application",
                    "type": "Any"
                }
            ],
            "class": "JobApplicationDotComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDot/jobDotPermit.component.ts",
            "line": 29,
            "description": "DOT Add Permit Form",
            "itemtype": "property",
            "name": "formAddDotPermit",
            "class": "JobDotPermitComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDot/jobDotPermit.component.ts",
            "line": 36,
            "description": "Upload DOT Permit Form",
            "itemtype": "property",
            "name": "formUploadDotPermit",
            "class": "JobDotPermitComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDot/jobDotPermit.component.ts",
            "line": 68,
            "description": "This method define all services that requires in whole class",
            "itemtype": "method",
            "name": "constructor",
            "class": "JobDotPermitComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDot/jobDotPermit.component.ts",
            "line": 92,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "JobDotPermitComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDot/jobDotPermit.component.ts",
            "line": 126,
            "description": "This method calls when user moves from another component",
            "itemtype": "method",
            "name": "ngOnDestroy",
            "class": "JobDotPermitComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDot/jobDotPermit.component.ts",
            "line": 134,
            "description": "This method will set button based on status",
            "itemtype": "method",
            "name": "setBtnBasedonStatus",
            "params": [
                {
                    "name": "jobDetail",
                    "description": "Job Object",
                    "type": "Any"
                }
            ],
            "class": "JobDotPermitComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDot/jobDotPermit.component.ts",
            "line": 149,
            "description": "This method will get Application",
            "itemtype": "method",
            "name": "getApplication",
            "params": [
                {
                    "name": "vm",
                    "description": "Table Object",
                    "type": "Any"
                }
            ],
            "class": "JobDotPermitComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDot/jobDotPermit.component.ts",
            "line": 190,
            "description": "This method will load data table",
            "itemtype": "method",
            "name": "loadDataTable",
            "params": [
                {
                    "name": "vm",
                    "description": "Table Object",
                    "type": "Any"
                }
            ],
            "class": "JobDotPermitComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDot/jobDotPermit.component.ts",
            "line": 345,
            "description": "This method will reload datatable",
            "itemtype": "method",
            "name": "reload",
            "class": "JobDotPermitComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDot/jobDotPermit.component.ts",
            "line": 354,
            "description": "This method will delete work permit",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "ID of work pemit",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "WorkPermit Row",
                    "type": "Any"
                }
            ],
            "class": "JobDotPermitComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDot/jobDotPermit.component.ts",
            "line": 372,
            "description": "This method will search permit",
            "itemtype": "method",
            "name": "searchPermit",
            "params": [
                {
                    "name": "searchpermit",
                    "description": "Search Criteria",
                    "type": "String"
                }
            ],
            "class": "JobDotPermitComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDot/jobDotPermit.component.ts",
            "line": 381,
            "description": "This method will open Add permit model",
            "itemtype": "method",
            "name": "_openModalFormAddPermit",
            "params": [
                {
                    "name": "template",
                    "description": "TemplateRef Object",
                    "type": "Any"
                }
            ],
            "class": "JobDotPermitComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDot/jobDotPermit.component.ts",
            "line": 390,
            "description": "This method will open Add permit model",
            "itemtype": "method",
            "name": "openModalFormAddPermit",
            "params": [
                {
                    "name": "template",
                    "description": "TemplateRef Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "Id of permit",
                    "type": "Number"
                }
            ],
            "class": "JobDotPermitComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobApplicationDot/jobDotPermit.component.ts",
            "line": 406,
            "description": "This method will open popup for upload permit",
            "itemtype": "method",
            "name": "openModalUploadPermit",
            "params": [
                {
                    "name": "template",
                    "description": "TemplateRef Object",
                    "type": "Any"
                }
            ],
            "class": "JobDotPermitComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobContact/addJobContact/addJobContact.component.ts",
            "line": 53,
            "description": "This method define all services that requires in whole class",
            "itemtype": "method",
            "name": "constructor",
            "class": "AddJobContactComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobContact/addJobContact/addJobContact.component.ts",
            "line": 65,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "AddJobContactComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobContact/addJobContact/addJobContact.component.ts",
            "line": 91,
            "description": "This method get all job contacts",
            "itemtype": "method",
            "name": "getJobContact",
            "class": "AddJobContactComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobContact/addJobContact/addJobContact.component.ts",
            "line": 114,
            "description": "This method get all job contact Type - selectContact",
            "itemtype": "method",
            "name": "getJobContactTypes",
            "class": "AddJobContactComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobContact/addJobContact/addJobContact.component.ts",
            "line": 126,
            "description": "This method get all company list - selectCompany",
            "itemtype": "method",
            "name": "getCompany",
            "class": "AddJobContactComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobContact/addJobContact/addJobContact.component.ts",
            "line": 146,
            "description": "This method get all contact list of company - selectContact",
            "itemtype": "method",
            "name": "getContact",
            "params": [
                {
                    "name": "selectCompany",
                    "description": "CompanyID",
                    "type": "Number"
                }
            ],
            "class": "AddJobContactComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobContact/addJobContact/addJobContact.component.ts",
            "line": 174,
            "description": "This method will get already added job contacts",
            "itemtype": "method",
            "name": "getPreviouslyAddedJobContact",
            "class": "AddJobContactComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobContact/addJobContact/addJobContact.component.ts",
            "line": 189,
            "description": "This method get all address list of contact",
            "itemtype": "method",
            "name": "getContactAddress",
            "params": [
                {
                    "name": "selectContact",
                    "description": "Contact ID",
                    "type": "Number"
                }
            ],
            "class": "AddJobContactComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobContact/addJobContact/addJobContact.component.ts",
            "line": 230,
            "description": "This method save job contact",
            "itemtype": "method",
            "name": "save",
            "class": "AddJobContactComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobContact/editJobContact/editJobContact.component.ts",
            "line": 268,
            "description": "get all job contact Type - selectContact",
            "class": "JobContactServices"
        },
        {
            "file": "src/app/route/job/jobDetail/jobContact/editJobContact/editJobContact.component.ts",
            "line": 279,
            "description": "get all company list - selectCompany",
            "class": "JobContactServices"
        },
        {
            "file": "src/app/route/job/jobDetail/jobContact/editJobContact/editJobContact.component.ts",
            "line": 293,
            "description": "get all contact list - selectContact",
            "class": "JobContactServices"
        },
        {
            "file": "src/app/route/job/jobDetail/jobContact/editJobContact/editJobContact.component.ts",
            "line": 306,
            "description": "get all address list of contact",
            "class": "JobContactServices"
        },
        {
            "file": "src/app/route/job/jobDetail/jobContact/JobContact.service.ts",
            "line": 30,
            "description": "This method get list of all job contacts for data table",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "idJob",
                    "description": "ID of Job",
                    "type": "Number"
                }
            ],
            "class": "JobContactServices"
        },
        {
            "file": "src/app/route/job/jobDetail/jobContact/JobContact.service.ts",
            "line": 41,
            "description": "This method get all jobs list of given job",
            "itemtype": "method",
            "name": "getAllJobContactById",
            "params": [
                {
                    "name": "idJob",
                    "description": "ID of Job",
                    "type": "Number"
                }
            ],
            "class": "JobContactServices"
        },
        {
            "file": "src/app/route/job/jobDetail/jobContact/JobContact.service.ts",
            "line": 50,
            "description": "This method will delete job contact",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "idJob",
                    "description": "ID of Job",
                    "type": "Number"
                },
                {
                    "name": "idJobContact",
                    "description": "ID of Job Contact",
                    "type": "Number"
                }
            ],
            "class": "JobContactServices"
        },
        {
            "file": "src/app/route/job/jobDetail/jobContact/JobContact.service.ts",
            "line": 62,
            "description": "This method get all job contacts type",
            "itemtype": "method",
            "name": "getAllJobContactType",
            "class": "JobContactServices"
        },
        {
            "file": "src/app/route/job/jobDetail/jobContact/JobContact.service.ts",
            "line": 70,
            "description": "This method get all company list",
            "itemtype": "method",
            "name": "getAllCompany",
            "class": "JobContactServices"
        },
        {
            "file": "src/app/route/job/jobDetail/jobContact/JobContact.service.ts",
            "line": 78,
            "description": "This method get contacts of given company",
            "itemtype": "method",
            "name": "getAllContact",
            "params": [
                {
                    "name": "idCompany",
                    "description": "ID of Company",
                    "type": "Number"
                }
            ],
            "class": "JobContactServices"
        },
        {
            "file": "src/app/route/job/jobDetail/jobContact/JobContact.service.ts",
            "line": 87,
            "description": "This method get all contacts address list",
            "itemtype": "method",
            "name": "getAllContactAddress",
            "params": [
                {
                    "name": "idContact",
                    "description": "ID of Contact",
                    "type": "Number"
                }
            ],
            "class": "JobContactServices"
        },
        {
            "file": "src/app/route/job/jobDetail/jobContact/JobContact.service.ts",
            "line": 96,
            "description": "This method will add job contact",
            "itemtype": "method",
            "name": "addJobContact",
            "params": [
                {
                    "name": "data",
                    "description": "Job Contact data",
                    "type": "Any"
                },
                {
                    "name": "idJob",
                    "description": "Id of Job",
                    "type": "Number"
                }
            ],
            "class": "JobContactServices"
        },
        {
            "file": "src/app/route/job/jobDetail/jobContact/jobContact.component.ts",
            "line": 30,
            "description": "Add Job Contact Form",
            "itemtype": "property",
            "name": "addJobContact",
            "class": "JobContactComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobContact/jobContact.component.ts",
            "line": 39,
            "description": "Add Task Form",
            "itemtype": "property",
            "name": "addtask",
            "class": "JobContactComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobContact/jobContact.component.ts",
            "line": 68,
            "description": "This method define all services that requires in whole class",
            "itemtype": "method",
            "name": "constructor",
            "class": "JobContactComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobContact/jobContact.component.ts",
            "line": 131,
            "description": "This method set button based on job status",
            "itemtype": "method",
            "name": "setBtnBasedonStatus",
            "params": [
                {
                    "name": "jobDetail",
                    "description": "Job object",
                    "type": "Any"
                }
            ],
            "class": "JobContactComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobContact/jobContact.component.ts",
            "line": 147,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "JobContactComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobContact/jobContact.component.ts",
            "line": 265,
            "description": "This method get job status",
            "itemtype": "method",
            "name": "getJobStatus",
            "class": "JobContactComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobContact/jobContact.component.ts",
            "line": 281,
            "description": "This method open job detail page",
            "itemtype": "method",
            "name": "onOpenJobDetail",
            "params": [
                {
                    "name": "data",
                    "description": "Job Object",
                    "type": "Any"
                }
            ],
            "class": "JobContactComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobContact/jobContact.component.ts",
            "line": 290,
            "description": "This method open contact detail page",
            "itemtype": "method",
            "name": "onOpenContactDetail",
            "params": [
                {
                    "name": "obj",
                    "description": "Contact Object",
                    "type": "Any"
                }
            ],
            "class": "JobContactComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobContact/jobContact.component.ts",
            "line": 299,
            "description": "This method call when selection change",
            "itemtype": "method",
            "name": "onSelectionChange",
            "params": [
                {
                    "name": "entry",
                    "description": "JobType Entry",
                    "type": "Any"
                }
            ],
            "class": "JobContactComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobContact/jobContact.component.ts",
            "line": 311,
            "description": "This method open add job contact method",
            "itemtype": "method",
            "name": "_openModalAddJobContact",
            "params": [
                {
                    "name": "template",
                    "description": "TemplateRef Object",
                    "type": "Any"
                }
            ],
            "class": "JobContactComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobContact/jobContact.component.ts",
            "line": 320,
            "description": "This method open add job contact method",
            "itemtype": "method",
            "name": "openModalAddJobContact",
            "params": [
                {
                    "name": "template",
                    "description": "TemplateRef Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "ID",
                    "type": "Number"
                }
            ],
            "class": "JobContactComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobContact/jobContact.component.ts",
            "line": 334,
            "description": "This method open edit job contact method",
            "itemtype": "method",
            "name": "openEditModal",
            "params": [
                {
                    "name": "template",
                    "description": "TemplateRef Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "ID",
                    "type": "Number"
                }
            ],
            "class": "JobContactComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobContact/jobContact.component.ts",
            "line": 347,
            "description": "This method open edit job contact method",
            "itemtype": "method",
            "name": "_openEditModal",
            "params": [
                {
                    "name": "template",
                    "description": "TemplateRef Object",
                    "type": "Any"
                }
            ],
            "class": "JobContactComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobContact/jobContact.component.ts",
            "line": 356,
            "description": "This method will delete job contact",
            "params": [
                {
                    "name": "idJob",
                    "description": "ID of Job",
                    "type": "Number"
                },
                {
                    "name": "id",
                    "description": "Id of Job Contact",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "selected job contact",
                    "type": "Any"
                }
            ],
            "class": "JobContactComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobContact/jobContact.component.ts",
            "line": 374,
            "description": "This method will reload data table",
            "itemtype": "method",
            "name": "reload",
            "class": "JobContactComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobContact/jobContact.component.ts",
            "line": 385,
            "description": "This method search in datatable",
            "itemtype": "method",
            "name": "search",
            "params": [
                {
                    "name": "srch",
                    "description": "Search criteria",
                    "type": "String"
                }
            ],
            "class": "JobContactComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobContact/jobContact.component.ts",
            "line": 394,
            "description": "This method open add task popup",
            "itemtype": "method",
            "name": "openModalForm",
            "params": [
                {
                    "name": "template",
                    "description": "TemplateRef Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "If of Job Contact",
                    "type": "Number"
                }
            ],
            "class": "JobContactComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobDocument/addJobDocument/addJobDocument.component.ts",
            "line": 84,
            "description": "This method is used to get the list of the documents",
            "itemtype": "method",
            "name": "documentsList",
            "class": "JobHistoryComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobDocument/addJobDocument/addJobDocument.component.ts",
            "line": 102,
            "description": "This method is used to Dependency value of the dropdowns",
            "itemtype": "method",
            "name": "Dropdownvalues",
            "params": [
                {
                    "name": "FieldObj",
                    "description": "FieldObj is the element to be search",
                    "type": "Any"
                },
                {
                    "name": "field",
                    "description": "field is the value to be search",
                    "type": "Any"
                }
            ],
            "class": "JobHistoryComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobDocument/addJobDocument/addJobDocument.component.ts",
            "line": 119,
            "description": "This method is used to fileds of currently selected Doc(on creating)",
            "itemtype": "method",
            "name": "GetFields",
            "params": [
                {
                    "name": "idOfDoc",
                    "description": "idOfDoc is the id of the document",
                    "type": "Any"
                }
            ],
            "class": "JobHistoryComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobDocument/addJobDocument/addJobDocument.component.ts",
            "line": 171,
            "description": "This method is used to get the Fields of document(after create)",
            "itemtype": "method",
            "name": "documentFileds",
            "class": "JobHistoryComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobDocument/addJobDocument/addJobDocument.component.ts",
            "line": 242,
            "description": "This method is used to Save & update the job document",
            "itemtype": "method",
            "name": "savechanges",
            "class": "JobHistoryComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobDocument/addJobDocument/addJobDocument.component.ts",
            "line": 322,
            "description": "This method is used to select the file",
            "itemtype": "method",
            "name": "fileSelection",
            "params": [
                {
                    "name": "file",
                    "description": "file contains the data of selected document",
                    "type": "Any"
                }
            ],
            "class": "JobHistoryComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobDocument/addJobDocument/addJobDocument.component.ts",
            "line": 342,
            "description": "This method is used to Delete the Selected document",
            "itemtype": "method",
            "name": "document",
            "class": "JobHistoryComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobDocument/addJobDocument/addJobDocument.component.ts",
            "line": 350,
            "description": "This method is used to check that data contains only number",
            "itemtype": "method",
            "name": "isNumber",
            "params": [
                {
                    "name": "evt",
                    "description": "evt is used to get event of that input",
                    "type": "Any"
                }
            ],
            "class": "JobHistoryComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobDocument/addJobDocument/addJobDocument.component.ts",
            "line": 364,
            "description": "This method is used to get Dependency Dropdownvalues",
            "itemtype": "method",
            "name": "Dropdownvalues",
            "params": [
                {
                    "name": "FieldObj",
                    "description": "FieldObj is the element to be search",
                    "type": "Any"
                },
                {
                    "name": "field",
                    "description": "field is the value to be search",
                    "type": "Any"
                }
            ],
            "class": "JobHistoryComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobHistory/filterhistory/filterhistory.component.ts",
            "line": 77,
            "description": "get all Employee",
            "class": "JobHistoryComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobHistory/filterhistory/filterhistory.component.ts",
            "line": 89,
            "description": "get all Types",
            "class": "JobHistoryComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobHistory/jobHistory.component.ts",
            "line": 24,
            "description": "Filter History View",
            "itemtype": "property",
            "name": "filterhistory",
            "class": "JobHistoryComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobHistory/jobHistory.component.ts",
            "line": 42,
            "description": "This method define all services that requires in whole class",
            "itemtype": "method",
            "name": "constructor",
            "class": "JobHistoryComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobHistory/jobHistory.component.ts",
            "line": 58,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "JobHistoryComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobHistory/jobHistory.component.ts",
            "line": 87,
            "description": "This method cancel filter",
            "itemtype": "method",
            "name": "cancelFilter",
            "class": "JobHistoryComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobHistory/jobHistory.component.ts",
            "line": 95,
            "description": "This method reload page based on criteria",
            "itemtype": "method",
            "name": "reloadFilter",
            "params": [
                {
                    "name": "idJob",
                    "description": "ID of Job",
                    "type": "Number"
                },
                {
                    "name": "selectedType",
                    "description": "Type",
                    "type": "Any"
                },
                {
                    "name": "selectedEmp",
                    "description": "Employee",
                    "type": "Any"
                },
                {
                    "name": "selectedStartDate",
                    "description": "Startdate",
                    "type": "Any"
                },
                {
                    "name": "selectedEndDate",
                    "description": "EndDate",
                    "type": "Any"
                }
            ],
            "class": "JobHistoryComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobHistory/jobHistory.component.ts",
            "line": 152,
            "description": "This method open filter history popup",
            "itemtype": "method",
            "name": "_openModalFilterHistory",
            "params": [
                {
                    "name": "template",
                    "description": "TemplateRef Object",
                    "type": "Any"
                }
            ],
            "class": "JobHistoryComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobHistory/jobHistory.component.ts",
            "line": 161,
            "description": "This method open filter history popup",
            "itemtype": "method",
            "name": "openModalFilterHistory",
            "params": [
                {
                    "name": "template",
                    "description": "TemplateRef Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "ID of record of job history",
                    "type": "Number"
                }
            ],
            "class": "JobHistoryComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobHistory/jobHistory.service.ts",
            "line": 20,
            "description": "This method get job history data based on criteria",
            "itemtype": "method",
            "name": "getJobHistoryById",
            "params": [
                {
                    "name": "idJob",
                    "description": "ID of Job",
                    "type": "Number"
                },
                {
                    "name": "params",
                    "description": "Search Criteria",
                    "type": "Any"
                }
            ],
            "class": "JobHistoryServices"
        },
        {
            "file": "src/app/route/job/jobDetail/jobMilestone/jobMilestone.component.ts",
            "line": 33,
            "description": "tpldeletemilestone add/edit form",
            "itemtype": "property",
            "name": "tpldeletemilestone",
            "class": "JobMilestoneComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobMilestone/jobMilestone.component.ts",
            "line": 109,
            "description": "This method set buttons on job status",
            "itemtype": "method",
            "name": "setBtnBasedonStatus",
            "params": [
                {
                    "name": "jobDetail",
                    "description": "Job Object",
                    "type": "Any"
                }
            ],
            "class": "JobMilestoneComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobMilestone/jobMilestone.component.ts",
            "line": 124,
            "description": "This method will be destroy all elements and other values from whole module",
            "itemtype": "method",
            "name": "ngOnDestroy",
            "class": "JobMilestoneComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobMilestone/jobMilestone.component.ts",
            "line": 134,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "JobMilestoneComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobMilestone/jobMilestone.component.ts",
            "line": 185,
            "description": "This method is used to get milestone status",
            "itemtype": "method",
            "name": "getMilestoneStatus",
            "class": "JobMilestoneComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobMilestone/jobMilestone.component.ts",
            "line": 197,
            "description": "This method is used to check whether enetered number is numeric or not",
            "itemtype": "method",
            "name": "isNumber",
            "params": [
                {
                    "name": "evt",
                    "description": "evt is used as object of input element",
                    "type": "Any"
                }
            ],
            "class": "JobMilestoneComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobMilestone/jobMilestone.component.ts",
            "line": 211,
            "description": "This method is used to get all milestone records from database",
            "itemtype": "method",
            "name": "getMilestoneRecords",
            "class": "JobMilestoneComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobMilestone/jobMilestone.component.ts",
            "line": 261,
            "description": "This method is used when dropdown should not close",
            "itemtype": "method",
            "name": "dropdownPropagation",
            "class": "JobMilestoneComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobMilestone/jobMilestone.component.ts",
            "line": 269,
            "description": "This method is used to check user can enter only numeric value",
            "itemtype": "method",
            "name": "onlyNumberKey",
            "class": "JobMilestoneComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobMilestone/jobMilestone.component.ts",
            "line": 277,
            "description": "This method check given data is decimal or not",
            "itemtype": "method",
            "name": "isDecimal",
            "params": [
                {
                    "name": "evt",
                    "description": "event object",
                    "type": "Any"
                }
            ],
            "class": "JobMilestoneComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobMilestone/jobMilestone.component.ts",
            "line": 301,
            "description": "Get selected item from dropdown",
            "itemtype": "method",
            "name": "onItemSelect",
            "class": "JobMilestoneComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobMilestone/jobMilestone.component.ts",
            "line": 308,
            "description": "Deselect item from dropdown",
            "itemtype": "method",
            "name": "OnItemDeSelect",
            "class": "JobMilestoneComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobMilestone/jobMilestone.component.ts",
            "line": 315,
            "description": "all items are selected from dropdown",
            "itemtype": "method",
            "name": "onSelectAll",
            "class": "JobMilestoneComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobMilestone/jobMilestone.component.ts",
            "line": 323,
            "description": "all items are deselected from dropdown",
            "itemtype": "method",
            "name": "onDeSelectAll",
            "class": "JobMilestoneComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobMilestone/jobMilestone.component.ts",
            "line": 332,
            "description": "This method is used to get new services",
            "itemtype": "method",
            "name": "getNewServices",
            "params": [
                {
                    "name": "idMilestone",
                    "description": "id of milestone",
                    "type": "Number"
                }
            ],
            "class": "JobMilestoneComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobMilestone/jobMilestone.component.ts",
            "line": 349,
            "description": "This method is used to update existing milestone record in array/object",
            "itemtype": "method",
            "name": "editMilestone",
            "params": [
                {
                    "name": "item",
                    "description": "item request Object",
                    "type": "Any"
                },
                {
                    "name": "milestoneId",
                    "description": "id of milestone",
                    "type": "Number"
                },
                {
                    "name": "index",
                    "description": "index of milestone which should be updated",
                    "type": "Number"
                }
            ],
            "class": "JobMilestoneComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobMilestone/jobMilestone.component.ts",
            "line": 436,
            "description": "This method is used to make cancel changes from existing milestone record in array/object",
            "itemtype": "method",
            "name": "cancelMilestone",
            "params": [
                {
                    "name": "item",
                    "description": "item request Object",
                    "type": "Any"
                },
                {
                    "name": "milestoneId",
                    "description": "id of milestone",
                    "type": "Number"
                },
                {
                    "name": "index",
                    "description": "index of milestone which should be updated",
                    "type": "Number"
                }
            ],
            "class": "JobMilestoneComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobMilestone/jobMilestone.component.ts",
            "line": 485,
            "description": "This method is used to make confirmation with user whether to delete milesone or not",
            "itemtype": "method",
            "name": "ConfirmationDelete",
            "class": "JobMilestoneComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobMilestone/jobMilestone.component.ts",
            "line": 510,
            "description": "This method is used to delete existing milestone record in array/object",
            "itemtype": "method",
            "name": "deleteMilestone",
            "params": [
                {
                    "name": "item",
                    "description": "item request Object",
                    "type": "Any"
                },
                {
                    "name": "milestoneId",
                    "description": "id of milestone",
                    "type": "Number"
                },
                {
                    "name": "index",
                    "description": "index of milestone which should be updated",
                    "type": "Number"
                }
            ],
            "class": "JobMilestoneComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobMilestone/jobMilestone.component.ts",
            "line": 525,
            "description": "This method is used to add new milestone record in array/object",
            "itemtype": "method",
            "name": "addMileStone",
            "params": [
                {
                    "name": "myForm",
                    "description": "myForm contains milestone object",
                    "type": "NgForm"
                }
            ],
            "class": "JobMilestoneComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobMilestone/jobMilestone.component.ts",
            "line": 549,
            "description": "This method is used to update existing milestone record in database",
            "itemtype": "method",
            "name": "deleteMilestone",
            "params": [
                {
                    "name": "item",
                    "description": "item request Object",
                    "type": "Any"
                },
                {
                    "name": "milestoneId",
                    "description": "id of milestone",
                    "type": "Number"
                }
            ],
            "class": "JobMilestoneComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobMilestone/jobMilestone.service.ts",
            "line": 23,
            "description": "This method is used to save new milestone record",
            "itemtype": "method",
            "name": "saveMilestone",
            "params": [
                {
                    "name": "type",
                    "description": "request Object",
                    "type": "Data"
                },
                {
                    "name": "idJob",
                    "description": "id of job",
                    "type": "Number"
                }
            ],
            "class": "JobMilestoneServices"
        },
        {
            "file": "src/app/route/job/jobDetail/jobMilestone/jobMilestone.service.ts",
            "line": 34,
            "description": "This method is used to update existing record in database",
            "itemtype": "method",
            "name": "editMilestone",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                },
                {
                    "name": "idJob",
                    "description": "id of job",
                    "type": "Number"
                },
                {
                    "name": "idMilestone",
                    "description": "id of milestone",
                    "type": "Number"
                }
            ],
            "class": "JobMilestoneServices"
        },
        {
            "file": "src/app/route/job/jobDetail/jobMilestone/jobMilestone.service.ts",
            "line": 46,
            "description": "This method is used to delete records from database",
            "itemtype": "method",
            "name": "deleteMilestone",
            "params": [
                {
                    "name": "idMilestone",
                    "description": "id of milestone",
                    "type": "Number"
                }
            ],
            "class": "JobMilestoneServices"
        },
        {
            "file": "src/app/route/job/jobDetail/jobMilestone/jobMilestone.service.ts",
            "line": 55,
            "description": "Get all record of milestone from database",
            "itemtype": "method",
            "name": "getMilestone",
            "params": [
                {
                    "name": "idJob",
                    "description": "id of job for getting all record",
                    "type": "Number"
                }
            ],
            "class": "JobMilestoneServices"
        },
        {
            "file": "src/app/route/job/jobDetail/jobMilestone/jobMilestone.service.ts",
            "line": 64,
            "description": "Get single record from database",
            "itemtype": "method",
            "name": "getJobById",
            "params": [
                {
                    "name": "idJob",
                    "description": "id of job for getting specific record",
                    "type": "Number"
                }
            ],
            "class": "JobMilestoneServices"
        },
        {
            "file": "src/app/route/job/jobDetail/jobMilestone/jobMilestone.service.ts",
            "line": 73,
            "description": "This method is used to get fee services list",
            "itemtype": "method",
            "name": "getFeeServices",
            "params": [
                {
                    "name": "idJob",
                    "description": "id of job",
                    "type": "Number"
                },
                {
                    "name": "idMilestone",
                    "description": "id of milestone",
                    "type": "Number"
                }
            ],
            "class": "JobMilestoneServices"
        },
        {
            "file": "src/app/route/job/jobDetail/jobMilestone/jobMilestone.service.ts",
            "line": 83,
            "description": "This method is used to get specific milestone details",
            "itemtype": "method",
            "name": "getMilestoneDetail",
            "params": [
                {
                    "name": "idJob",
                    "description": "id of job",
                    "type": "Number"
                },
                {
                    "name": "idMilestone",
                    "description": "id of milestone",
                    "type": "Number"
                }
            ],
            "class": "JobMilestoneServices"
        },
        {
            "file": "src/app/route/job/jobDetail/jobMilestone/jobMilestone.service.ts",
            "line": 93,
            "description": "This method is used to update existing milestone record in database",
            "itemtype": "method",
            "name": "updateMilestone",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                },
                {
                    "name": "idMilestone",
                    "description": "id of milestone",
                    "type": "Number"
                }
            ],
            "class": "JobMilestoneServices"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/addScope/addScope.component.ts",
            "line": 40,
            "description": "This method define all services that requires in whole class",
            "itemtype": "method",
            "name": "constructor",
            "class": "AddScopeComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/addScope/addScope.component.ts",
            "line": 55,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "AddScopeComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/addScope/addScope.component.ts",
            "line": 65,
            "description": "This method get Job types",
            "itemtype": "method",
            "name": "getJobTypes",
            "class": "AddScopeComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/addScope/addScope.component.ts",
            "line": 79,
            "description": "This method get job type description list",
            "itemtype": "method",
            "name": "setJobTypeDesc",
            "class": "AddScopeComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/addScope/addScope.component.ts",
            "line": 100,
            "description": "This method get job sub type",
            "itemtype": "method",
            "name": "setJobSubType",
            "class": "AddScopeComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/addScope/addScope.component.ts",
            "line": 116,
            "description": "This method get service listfrom job type",
            "itemtype": "method",
            "name": "setSevicesData",
            "params": [
                {
                    "name": "id",
                    "description": "Id of job Type",
                    "type": "Number"
                }
            ],
            "class": "AddScopeComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/addScope/addScope.component.ts",
            "line": 130,
            "description": "This method get service items from group",
            "itemtype": "method",
            "name": "getServiceItemsFromGroup",
            "params": [
                {
                    "name": "serviceGroups",
                    "description": "Service Groups",
                    "type": "Any"
                }
            ],
            "class": "AddScopeComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/addScope/addScope.component.ts",
            "line": 153,
            "description": "This method check given data is number or not",
            "itemtype": "method",
            "name": "isNumber",
            "params": [
                {
                    "name": "evt",
                    "description": "Event Object",
                    "type": "Any"
                }
            ],
            "class": "AddScopeComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/addScope/addScope.component.ts",
            "line": 167,
            "description": "This method check given data is decimal or not",
            "itemtype": "method",
            "name": "isDecimal",
            "params": [
                {
                    "name": "evt",
                    "description": "Event Object",
                    "type": "Any"
                }
            ],
            "class": "AddScopeComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/addScope/addScope.component.ts",
            "line": 187,
            "description": "This method add new job scope",
            "itemtype": "method",
            "name": "saveJobScope",
            "class": "AddScopeComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/scopeHistory/scopeHistory.component.ts",
            "line": 23,
            "description": "This method define all services that requires in whole class",
            "itemtype": "method",
            "name": "constructor",
            "class": "ScopeHistoryComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/scopeHistory/scopeHistory.component.ts",
            "line": 33,
            "description": "This method will be called once only when module is call for first time and get task history of selected scope",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "ScopeHistoryComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/jobScope.component.ts",
            "line": 78,
            "description": "This method define all services that requires in whole class",
            "itemtype": "method",
            "name": "constructor",
            "class": "JobScopeComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/jobScope.component.ts",
            "line": 135,
            "description": "This method set button based on job status",
            "itemtype": "method",
            "name": "setBtnBasedonStatus",
            "params": [
                {
                    "name": "jobDetail",
                    "description": "Job Object",
                    "type": "Any"
                }
            ],
            "class": "JobScopeComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/jobScope.component.ts",
            "line": 150,
            "description": "This method distroy all object when user moves from this component",
            "itemtype": "method",
            "name": "ngOnDestroy",
            "class": "JobScopeComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/jobScope.component.ts",
            "line": 160,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "JobScopeComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/jobScope.component.ts",
            "line": 185,
            "description": "This method get linked RFP List",
            "itemtype": "method",
            "name": "getLinkedRFPList",
            "class": "JobScopeComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/jobScope.component.ts",
            "line": 195,
            "description": "This method download RFP Proposal",
            "itemtype": "method",
            "name": "downloadRFPProposal",
            "class": "JobScopeComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/jobScope.component.ts",
            "line": 210,
            "description": "This method get already saved scope",
            "itemtype": "method",
            "name": "getJobScope",
            "params": [
                {
                    "name": "fromAdd",
                    "description": "Flag to identify for newly added scope",
                    "type": "Boolean"
                }
            ],
            "class": "JobScopeComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/jobScope.component.ts",
            "line": 296,
            "description": "This method update PO Number",
            "itemtype": "method",
            "name": "updatePONUmber",
            "params": [
                {
                    "name": "poNumber",
                    "description": "PO Number Value",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "ID of Scope",
                    "type": "Number"
                },
                {
                    "name": "isMileStone",
                    "description": "Flag to identify is it milestone or scope",
                    "type": "Boolean"
                }
            ],
            "class": "JobScopeComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/jobScope.component.ts",
            "line": 325,
            "description": "This method update Invoice Number",
            "itemtype": "method",
            "name": "updateInvoiceNumber",
            "params": [
                {
                    "name": "invoiceNumber",
                    "description": "Invoice Number Value",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "ID of Scope",
                    "type": "Number"
                },
                {
                    "name": "isMileStone",
                    "description": "Flag to identify is it milestone or scope",
                    "type": "Boolean"
                }
            ],
            "class": "JobScopeComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/jobScope.component.ts",
            "line": 354,
            "description": "This method update Invoice Date",
            "itemtype": "method",
            "name": "updateInvoiceDate",
            "params": [
                {
                    "name": "invoiceDate",
                    "description": "Invoice Date Value",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "ID of Scope",
                    "type": "Number"
                },
                {
                    "name": "isMileStone",
                    "description": "Flag to identify is it milestone or scope",
                    "type": "Boolean"
                }
            ],
            "class": "JobScopeComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/jobScope.component.ts",
            "line": 400,
            "description": "This method update status",
            "itemtype": "method",
            "name": "updateStatus",
            "params": [
                {
                    "name": "status",
                    "description": "Status Value",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "ID of Scope",
                    "type": "Number"
                },
                {
                    "name": "isMileStone",
                    "description": "Flag to identify is it milestone or scope",
                    "type": "Boolean"
                }
            ],
            "class": "JobScopeComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/jobScope.component.ts",
            "line": 417,
            "description": "This method open Task History Popup",
            "itemtype": "method",
            "name": "openHistoryModal",
            "params": [
                {
                    "name": "idJobFeeSchedule",
                    "description": "Id of Fee Schedule",
                    "type": "Number"
                },
                {
                    "name": "template",
                    "description": "TemplateRef object",
                    "type": "Any"
                },
                {
                    "name": "costType",
                    "description": "Cost Type Value",
                    "type": "Number"
                }
            ],
            "class": "JobScopeComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/jobScope.component.ts",
            "line": 447,
            "description": "This method delete scope",
            "itemtype": "method",
            "name": "deleteScope",
            "params": [
                {
                    "name": "scopeId",
                    "description": "Id of Job Scope",
                    "type": "Number"
                }
            ],
            "class": "JobScopeComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/jobScope.component.ts",
            "line": 460,
            "description": "This method open add job scope popup",
            "itemtype": "method",
            "name": "openAddScopeModalForm",
            "params": [
                {
                    "name": "template",
                    "description": "TemplateRef object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "RecordID",
                    "type": "Number"
                }
            ],
            "class": "JobScopeComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/jobScope.component.ts",
            "line": 472,
            "description": "This method get Job types",
            "itemtype": "method",
            "name": "getJobTypes",
            "class": "JobScopeComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/jobScope.component.ts",
            "line": 486,
            "description": "This method get job type description list",
            "itemtype": "method",
            "name": "setJobTypeDesc",
            "class": "JobScopeComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/jobScope.component.ts",
            "line": 510,
            "description": "This method get job sub type",
            "itemtype": "method",
            "name": "setJobSubType",
            "class": "JobScopeComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/jobScope.component.ts",
            "line": 531,
            "description": "This method get service listfrom job type",
            "itemtype": "method",
            "name": "setSevicesData",
            "params": [
                {
                    "name": "id",
                    "description": "Id of job Type",
                    "type": "Number"
                }
            ],
            "class": "JobScopeComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/jobScope.component.ts",
            "line": 552,
            "description": "This method get service items from group",
            "itemtype": "method",
            "name": "getServiceItemsFromGroup",
            "params": [
                {
                    "name": "serviceGroups",
                    "description": "Service Groups",
                    "type": "Any"
                }
            ],
            "class": "JobScopeComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/jobScope.component.ts",
            "line": 587,
            "description": "This method check given data is number or not",
            "itemtype": "method",
            "name": "isNumber",
            "params": [
                {
                    "name": "evt",
                    "description": "Event Object",
                    "type": "Any"
                }
            ],
            "class": "JobScopeComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/jobScope.component.ts",
            "line": 601,
            "description": "This method check given data is decimal or not",
            "itemtype": "method",
            "name": "isDecimal",
            "params": [
                {
                    "name": "evt",
                    "description": "Event Object",
                    "type": "Any"
                }
            ],
            "class": "JobScopeComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/jobScope.component.ts",
            "line": 621,
            "description": "This method add new job scope",
            "itemtype": "method",
            "name": "saveJobScope",
            "class": "JobScopeComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/jobScope.service.ts",
            "line": 21,
            "description": "This method save scope in database",
            "itemtype": "method",
            "name": "saveScope",
            "params": [
                {
                    "name": "data",
                    "description": "Scope Data",
                    "type": "Any"
                },
                {
                    "name": "idJob",
                    "description": "Id of Job",
                    "type": "Number"
                }
            ],
            "class": "JobScopeServices"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/jobScope.service.ts",
            "line": 32,
            "description": "This method edit scope in database",
            "itemtype": "method",
            "name": "editScope",
            "params": [
                {
                    "name": "data",
                    "description": "Scope Data",
                    "type": "Any"
                },
                {
                    "name": "idJob",
                    "description": "Id of Job",
                    "type": "Number"
                },
                {
                    "name": "idScope",
                    "description": "Id of JobScope",
                    "type": "Number"
                }
            ],
            "class": "JobScopeServices"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/jobScope.service.ts",
            "line": 44,
            "description": "This method get all scope list of job",
            "itemtype": "method",
            "name": "getScope",
            "params": [
                {
                    "name": "idJob",
                    "description": "ID of Job",
                    "type": "Number"
                }
            ],
            "class": "JobScopeServices"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/jobScope.service.ts",
            "line": 53,
            "description": "This method save general notes",
            "itemtype": "method",
            "name": "saveGeneralNotes",
            "params": [
                {
                    "name": "note",
                    "description": "Note Content",
                    "type": "String"
                },
                {
                    "name": "idJob",
                    "description": "Id of Job",
                    "type": "Number"
                }
            ],
            "class": "JobScopeServices"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/jobScope.service.ts",
            "line": 66,
            "description": "This method save job from id",
            "itemtype": "method",
            "name": "getJobById",
            "params": [
                {
                    "name": "idJob",
                    "description": "Id of Job",
                    "type": "Number"
                }
            ],
            "class": "JobScopeServices"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/jobScope.service.ts",
            "line": 75,
            "description": "This method get job scope service items",
            "itemtype": "method",
            "name": "getJobFeeSchedule",
            "params": [
                {
                    "name": "idJob",
                    "description": "Id of Job",
                    "type": "Number"
                }
            ],
            "class": "JobScopeServices"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/jobScope.service.ts",
            "line": 84,
            "description": "This method get job milestones",
            "itemtype": "method",
            "name": "getJobMilestone",
            "params": [
                {
                    "name": "idJob",
                    "description": "Id of Job",
                    "type": "Number"
                }
            ],
            "class": "JobScopeServices"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/jobScope.service.ts",
            "line": 93,
            "description": "This method update milestone po number from job scope grid",
            "itemtype": "method",
            "name": "updateMileStonePONumber",
            "params": [
                {
                    "name": "poNumber",
                    "description": "request parameter",
                    "type": "String"
                },
                {
                    "name": "idMileStone",
                    "description": "request parameter",
                    "type": "Number"
                }
            ],
            "class": "JobScopeServices"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/jobScope.service.ts",
            "line": 104,
            "description": "This method update milestone invoice number from job scope grid",
            "itemtype": "method",
            "name": "updateMileStoneInvoiceNumber",
            "params": [
                {
                    "name": "invoiceNumber",
                    "description": "request parameter",
                    "type": "String"
                },
                {
                    "name": "idMileStone",
                    "description": "request parameter",
                    "type": "Number"
                }
            ],
            "class": "JobScopeServices"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/jobScope.service.ts",
            "line": 115,
            "description": "This method update milestone invoice date from job scope grid",
            "itemtype": "method",
            "name": "updateMileStoneInvoiceDate",
            "params": [
                {
                    "name": "invoiceDate",
                    "description": "request parameter",
                    "type": "String"
                },
                {
                    "name": "idMileStone",
                    "description": "request parameter",
                    "type": "Number"
                }
            ],
            "class": "JobScopeServices"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/jobScope.service.ts",
            "line": 126,
            "description": "This method update milestone status from job scope grid",
            "itemtype": "method",
            "name": "updateMileStoneStatus",
            "params": [
                {
                    "name": "status",
                    "description": "request parameter",
                    "type": "String"
                },
                {
                    "name": "idMileStone",
                    "description": "request parameter",
                    "type": "Number"
                }
            ],
            "class": "JobScopeServices"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/jobScope.service.ts",
            "line": 137,
            "description": "This method update service item po number from job scope grid",
            "itemtype": "method",
            "name": "updateServiceItemPONumber",
            "params": [
                {
                    "name": "poNumber",
                    "description": "request parameter",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "request parameter",
                    "type": "Number"
                }
            ],
            "class": "JobScopeServices"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/jobScope.service.ts",
            "line": 148,
            "description": "This method update service item invoice number from job scope grid",
            "itemtype": "method",
            "name": "updateServiceItemInvoiceNumber",
            "params": [
                {
                    "name": "invoiceNumber",
                    "description": "request parameter",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "request parameter",
                    "type": "Number"
                }
            ],
            "class": "JobScopeServices"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/jobScope.service.ts",
            "line": 159,
            "description": "This method update service item invoice date from job scope grid",
            "itemtype": "method",
            "name": "updateServiceItemInvoiceNumber",
            "params": [
                {
                    "name": "invoiceDate",
                    "description": "request parameter",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "request parameter",
                    "type": "Number"
                }
            ],
            "class": "JobScopeServices"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/jobScope.service.ts",
            "line": 170,
            "description": "This method save new scope in database",
            "itemtype": "method",
            "name": "saveJobScope",
            "params": [
                {
                    "name": "data",
                    "description": "request parameter",
                    "type": "Array"
                },
                {
                    "name": "idJob",
                    "description": "request parameter",
                    "type": "Number"
                }
            ],
            "class": "JobScopeServices"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/jobScope.service.ts",
            "line": 180,
            "description": "This method get Scope History",
            "itemtype": "method",
            "name": "getScopeHistory",
            "params": [
                {
                    "name": "data",
                    "description": "request Object",
                    "type": "IdJobFeeSchedule"
                }
            ],
            "class": "JobScopeServices"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/jobScope.service.ts",
            "line": 189,
            "description": "This method delete job scope record",
            "itemtype": "method",
            "name": "deleteScope",
            "params": [
                {
                    "name": "data",
                    "description": "request Object",
                    "type": "RfpAddress"
                }
            ],
            "class": "JobScopeServices"
        },
        {
            "file": "src/app/route/job/jobDetail/jobScope/jobScope.service.ts",
            "line": 198,
            "description": "This method get Timenote History",
            "itemtype": "method",
            "name": "getTimeNoteHistory",
            "params": [
                {
                    "name": "data",
                    "description": "request Object",
                    "type": "IdJobFeeSchedule"
                }
            ],
            "class": "JobScopeServices"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTask/jobTask.component.ts",
            "line": 31,
            "description": "addtask add/edit form",
            "itemtype": "property",
            "name": "addtask",
            "class": "JobTaskComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTask/jobTask.component.ts",
            "line": 38,
            "description": "progressionnote add/edit form",
            "itemtype": "property",
            "name": "progressionnote",
            "class": "JobTaskComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTask/jobTask.component.ts",
            "line": 45,
            "description": "reminder add/edit form",
            "itemtype": "property",
            "name": "reminder",
            "class": "JobTaskComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTask/jobTask.component.ts",
            "line": 52,
            "description": "viewtask view form",
            "itemtype": "property",
            "name": "viewtask",
            "class": "JobTaskComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTask/jobTask.component.ts",
            "line": 59,
            "description": "addtransmittal add/edit form",
            "itemtype": "property",
            "name": "addtransmittal",
            "class": "JobTaskComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTask/jobTask.component.ts",
            "line": 156,
            "description": "This method is used to set button for violation module",
            "itemtype": "method",
            "name": "setBtnBasedonStatus",
            "params": [
                {
                    "name": "jobDetail",
                    "description": "jobDetail is an object of Job",
                    "type": "Any"
                }
            ],
            "class": "JobTaskComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTask/jobTask.component.ts",
            "line": 186,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "JobTaskComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTask/jobTask.component.ts",
            "line": 448,
            "description": "This method is used to open modal popup for sending transmittal",
            "itemtype": "method",
            "name": "openCreateTransmittalModal",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                },
                {
                    "name": "action",
                    "description": "action is used from which module it is used",
                    "type": "String"
                }
            ],
            "class": "JobTaskComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTask/jobTask.component.ts",
            "line": 459,
            "description": "This method is used to open modal popup for view task",
            "itemtype": "method",
            "name": "openModalForm",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                }
            ],
            "class": "JobTaskComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTask/jobTask.component.ts",
            "line": 473,
            "description": "This method is used for filter/search records from datatable",
            "itemtype": "method",
            "name": "search",
            "params": [
                {
                    "name": "srch",
                    "description": "type any which contains string that can be filtered from datatable",
                    "type": "String"
                }
            ],
            "class": "JobTaskComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTask/jobTask.component.ts",
            "line": 482,
            "description": "This method is used to reload datatable",
            "itemtype": "method",
            "name": "reload",
            "class": "JobTaskComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTask/jobTask.component.ts",
            "line": 491,
            "description": "This method is used to delete record",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "type which contains id to delete record",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "type which contains entire selected row",
                    "type": "Any"
                }
            ],
            "class": "JobTaskComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTransmittal/addTransmittal/addTransmittal.component.ts",
            "line": 46,
            "description": "selectJobDocument add/edit form",
            "itemtype": "property",
            "name": "selectJobDocument",
            "class": "AddTransMittalComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTransmittal/addTransmittal/addTransmittal.component.ts",
            "line": 129,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "AddTransMittalComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTransmittal/addTransmittal/addTransmittal.component.ts",
            "line": 174,
            "description": "Get all dropdown data from Email Type master",
            "itemtype": "method",
            "name": "getmailTypes",
            "class": "AddTransMittalComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTransmittal/addTransmittal/addTransmittal.component.ts",
            "line": 185,
            "description": "Get all dropdown data from send via master",
            "itemtype": "method",
            "name": "getmailViaData",
            "class": "AddTransMittalComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTransmittal/addTransmittal/addTransmittal.component.ts",
            "line": 195,
            "description": "Get all dropdown data from contacts",
            "itemtype": "method",
            "name": "getContacts",
            "class": "AddTransMittalComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTransmittal/addTransmittal/addTransmittal.component.ts",
            "line": 228,
            "description": "Get all dropdown data from Employee",
            "itemtype": "method",
            "name": "getAllEmployee",
            "class": "AddTransMittalComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTransmittal/addTransmittal/addTransmittal.component.ts",
            "line": 241,
            "description": "Get all dropdown data from Companies",
            "itemtype": "method",
            "name": "getCompanies",
            "class": "AddTransMittalComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTransmittal/addTransmittal/addTransmittal.component.ts",
            "line": 256,
            "description": "This method is used to restrict user from closing popup",
            "itemtype": "method",
            "name": "closeDropdown",
            "params": [
                {
                    "name": "event",
                    "description": "event is an object of input element",
                    "type": "Any"
                }
            ],
            "class": "AddTransMittalComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTransmittal/addTransmittal/addTransmittal.component.ts",
            "line": 265,
            "description": "This method is used to open modal popup for sending an email",
            "itemtype": "method",
            "name": "openModal",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                }
            ],
            "class": "AddTransMittalComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTransmittal/addTransmittal/addTransmittal.component.ts",
            "line": 274,
            "description": "This method is used to open modal popup for Fee schedule",
            "itemtype": "method",
            "name": "openModalFeeSchedule",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                }
            ],
            "class": "AddTransMittalComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTransmittal/addTransmittal/addTransmittal.component.ts",
            "line": 283,
            "description": "This methodi is used to load all master data that are used in these function",
            "itemtype": "method",
            "name": "loadAllMasterDD",
            "class": "AddTransMittalComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTransmittal/addTransmittal/addTransmittal.component.ts",
            "line": 295,
            "description": "This method is used to open modal popup for job document",
            "itemtype": "method",
            "name": "openDocumentModal",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                }
            ],
            "class": "AddTransMittalComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTransmittal/addTransmittal/addTransmittal.component.ts",
            "line": 305,
            "description": "This method is used for making selection of documents from list",
            "itemtype": "method",
            "name": "getSelectedDocument",
            "params": [
                {
                    "name": "document",
                    "description": "document is an object of documents",
                    "type": "Any"
                }
            ],
            "class": "AddTransMittalComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTransmittal/addTransmittal/addTransmittal.component.ts",
            "line": 316,
            "description": "This method is used to delete job document from transmittal",
            "itemtype": "method",
            "name": "deleteJobDoc",
            "params": [
                {
                    "name": "id",
                    "description": "of Jobdocument that we need to delete from transmittal",
                    "type": "Number"
                }
            ],
            "class": "AddTransMittalComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTransmittal/addTransmittal/addTransmittal.component.ts",
            "line": 328,
            "description": "This method Send E-mail while click on Send from Popup",
            "itemtype": "method",
            "name": "sendEmail",
            "class": "AddTransMittalComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTransmittal/addTransmittal/addTransmittal.component.ts",
            "line": 410,
            "description": "This method Send E-mail and documents sending api",
            "itemtype": "method",
            "name": "sendEmailApi",
            "class": "AddTransMittalComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTransmittal/addTransmittal/addTransmittal.component.ts",
            "line": 438,
            "description": "This method upload documents and save in database",
            "itemtype": "method",
            "name": "uploadDocumentsinDB",
            "params": [
                {
                    "name": "id",
                    "description": "id used as a id of job",
                    "type": "Number"
                },
                {
                    "name": "idJobTransmittal",
                    "description": "idJobTransmittal used as a id of transmittal",
                    "type": "Number"
                },
                {
                    "name": "module",
                    "description": "module is used for which module is passing like company,contact,RFP,job",
                    "type": "String"
                }
            ],
            "class": "AddTransMittalComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTransmittal/addTransmittal/addTransmittal.component.ts",
            "line": 466,
            "description": "This method is used to document upload",
            "itemtype": "method",
            "name": "documentUpload",
            "params": [
                {
                    "name": "evt",
                    "description": ""
                }
            ],
            "class": "AddTransMittalComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTransmittal/addTransmittal/addTransmittal.component.ts",
            "line": 487,
            "description": "This method is used to delete documents from object",
            "itemtype": "method",
            "name": "deleteDocument",
            "params": [
                {
                    "name": "d",
                    "description": "d is used an element which is used to remove from documents",
                    "type": "Any"
                }
            ],
            "class": "AddTransMittalComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTransmittal/addTransmittal/addTransmittal.component.ts",
            "line": 500,
            "description": "This method is used to delete documents those which are already attached",
            "itemtype": "method",
            "name": "deleteAlreadyAttchedFile",
            "params": [
                {
                    "name": "document",
                    "description": "document is used an element which is used to remove from documents",
                    "type": "Any"
                }
            ],
            "class": "AddTransMittalComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTransmittal/addTransmittal/addTransmittal.component.ts",
            "line": 510,
            "description": "This method is used to prepare an email body",
            "itemtype": "method",
            "name": "setEmailBody",
            "class": "AddTransMittalComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTransmittal/addTransmittal/addTransmittal.component.ts",
            "line": 525,
            "description": "This method is used to change the email template on basis of selection sent via and email type",
            "itemtype": "method",
            "name": "changeEmailBody",
            "class": "AddTransMittalComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTransmittal/addTransmittal/addTransmittal.component.ts",
            "line": 534,
            "description": "This method is used to replace email template variable with actual data",
            "itemtype": "method",
            "name": "changeEmailBody",
            "params": [
                {
                    "name": "content",
                    "description": "content is an original template which need to replaced with some specific key words for preparing email template",
                    "type": "Any"
                }
            ],
            "class": "AddTransMittalComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTransmittal/jobTransmittal.component.ts",
            "line": 30,
            "description": "addtransmittal add/edit form",
            "itemtype": "property",
            "name": "addtransmittal",
            "class": "JobTransmittalComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTransmittal/jobTransmittal.component.ts",
            "line": 128,
            "description": "This method is used to set button based on status",
            "itemtype": "method",
            "name": "setBtnBasedonStatus",
            "params": [
                {
                    "name": "jobDetail",
                    "description": "jobDetail is an object of job",
                    "type": "Any"
                }
            ],
            "class": "JobTransmittalComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTransmittal/jobTransmittal.component.ts",
            "line": 148,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "JobTransmittalComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTransmittal/jobTransmittal.component.ts",
            "line": 262,
            "description": "This method is used to set job status",
            "itemtype": "method",
            "name": "getJobStatus",
            "class": "JobTransmittalComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTransmittal/jobTransmittal.component.ts",
            "line": 278,
            "description": "This method is used to open modal popup for create transmittal",
            "itemtype": "method",
            "name": "openCreateTransmittalModal",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                },
                {
                    "name": "action",
                    "description": "action is used as a parameter to resend transmittal or revise transmittal",
                    "type": "String"
                }
            ],
            "class": "JobTransmittalComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTransmittal/jobTransmittal.component.ts",
            "line": 301,
            "description": "This method is used to change the selected application type",
            "itemtype": "method",
            "name": "onSelectionChange",
            "params": [
                {
                    "name": "entry",
                    "description": "entry is an selected job type",
                    "type": "Any"
                }
            ],
            "class": "JobTransmittalComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTransmittal/jobTransmittal.component.ts",
            "line": 310,
            "description": "This method is used to avoid from closing dropdown",
            "itemtype": "method",
            "name": "dropdownPropagation",
            "params": [
                {
                    "name": "event",
                    "description": "event of an input element",
                    "type": "Any"
                }
            ],
            "class": "JobTransmittalComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTransmittal/jobTransmittal.component.ts",
            "line": 319,
            "description": "This method is used to reload datatable",
            "itemtype": "method",
            "name": "reload",
            "class": "JobTransmittalComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTransmittal/jobTransmittal.component.ts",
            "line": 330,
            "description": "This method is used for filter/search records from datatable",
            "itemtype": "method",
            "name": "search",
            "params": [
                {
                    "name": "srch",
                    "description": "type any which contains string that can be filtered from datatable",
                    "type": "String"
                }
            ],
            "class": "JobTransmittalComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTransmittal/jobTransmittal.component.ts",
            "line": 339,
            "description": "This method is used to delete record",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "type which contains id to delete record",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "type which contains entire selected row",
                    "type": "Any"
                }
            ],
            "class": "JobTransmittalComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTransmittal/jobTransmittal.service.ts",
            "line": 22,
            "description": "Get all records from database in datatable format",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "cfg",
                    "description": "it is a string type which is used for filter data from data table",
                    "type": "Any"
                }
            ],
            "class": "TransmittalServices"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTransmittal/jobTransmittal.service.ts",
            "line": 33,
            "description": "This method is used to send Email",
            "itemtype": "method",
            "name": "sendmail",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                },
                {
                    "name": "idJob",
                    "description": "idJob is id of job",
                    "type": "Number"
                }
            ],
            "class": "TransmittalServices"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTransmittal/jobTransmittal.service.ts",
            "line": 44,
            "description": "This method is used to save record",
            "itemtype": "method",
            "name": "saveExtraAttachment",
            "params": [
                {
                    "name": "data",
                    "description": "data contains a file object which is used for saving record in database",
                    "type": "Data"
                }
            ],
            "class": "TransmittalServices"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTransmittal/jobTransmittal.service.ts",
            "line": 53,
            "description": "Get single record from database",
            "itemtype": "method",
            "name": "getById",
            "params": [
                {
                    "name": "id",
                    "description": "id of transmittal for getting specific record",
                    "type": "Number"
                }
            ],
            "class": "TransmittalServices"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTransmittal/jobTransmittal.service.ts",
            "line": 62,
            "description": "This method is used to delete records from database",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "of transmittal to delete",
                    "type": "Number"
                }
            ],
            "class": "TransmittalServices"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTransmittal/jobTransmittal.service.ts",
            "line": 71,
            "description": "This method is used to create label for transmittal",
            "itemtype": "method",
            "name": "createLabel",
            "params": [
                {
                    "name": "id",
                    "description": "id of transmittal",
                    "type": "Number"
                }
            ],
            "class": "TransmittalServices"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTransmittal/jobTransmittal.service.ts",
            "line": 80,
            "description": "This method is used to print label of transmittal",
            "itemtype": "method",
            "name": "printTransmittal",
            "params": [
                {
                    "name": "id",
                    "description": "id of transmittal",
                    "type": "Number"
                }
            ],
            "class": "TransmittalServices"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTransmittal/jobTransmittal.service.ts",
            "line": 89,
            "description": "This method is used to get job contact based on company selection",
            "itemtype": "method",
            "name": "getJobContactsCompanyListDD",
            "params": [
                {
                    "name": "idJob",
                    "description": "idJob of job id",
                    "type": "Number"
                }
            ],
            "class": "TransmittalServices"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTransmittal/jobTransmittal.service.ts",
            "line": 98,
            "description": "This method is used to get job contact based on company selection",
            "itemtype": "method",
            "name": "getJobContactsContactsListDDContact",
            "params": [
                {
                    "name": "idJob",
                    "description": "idJob of job id",
                    "type": "Number"
                },
                {
                    "name": "idCompany",
                    "description": "idCompany of company id",
                    "type": "Number"
                }
            ],
            "class": "TransmittalServices"
        },
        {
            "file": "src/app/route/job/jobDetail/jobTransmittal/jobTransmittal.service.ts",
            "line": 109,
            "description": "This method is used to get job contact based on company selection",
            "itemtype": "method",
            "name": "getJobContactsEmployeesListDD",
            "params": [
                {
                    "name": "idJob",
                    "description": "idJob of job id",
                    "type": "Number"
                },
                {
                    "name": "idCompany",
                    "description": "idCompany of company id",
                    "type": "Number"
                }
            ],
            "class": "TransmittalServices"
        },
        {
            "file": "src/app/route/job/jobDetail/jobViolation/explainationCharges/explainationCharges.component.ts",
            "line": 29,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "FormExplainationCharges"
        },
        {
            "file": "src/app/route/job/jobDetail/jobViolation/explainationCharges/explainationCharges.component.ts",
            "line": 37,
            "description": "This method check given data is decimal or not",
            "itemtype": "method",
            "name": "isDecimal",
            "params": [
                {
                    "name": "evt",
                    "description": "event object",
                    "type": "Any"
                }
            ],
            "class": "FormExplainationCharges"
        },
        {
            "file": "src/app/route/job/jobDetail/jobViolation/formAddViolation/formAddViolation.component.ts",
            "line": 54,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "FormAddViolation"
        },
        {
            "file": "src/app/route/job/jobDetail/jobViolation/formAddViolation/formAddViolation.component.ts",
            "line": 95,
            "description": "This method is used to get all status of summonce notice",
            "itemtype": "method",
            "name": "getSummonsNoticeStatus",
            "class": "FormAddViolation"
        },
        {
            "file": "src/app/route/job/jobDetail/jobViolation/formAddViolation/formAddViolation.component.ts",
            "line": 108,
            "description": "This method is used to make get info button enable disable",
            "itemtype": "method",
            "name": "getInfoEnable",
            "class": "FormAddViolation"
        },
        {
            "file": "src/app/route/job/jobDetail/jobViolation/formAddViolation/formAddViolation.component.ts",
            "line": 120,
            "description": "This method is used to convert sting to title case",
            "itemtype": "method",
            "name": "toTitleCase",
            "params": [
                {
                    "name": "str",
                    "description": "str contains a string that need to be converted to title case",
                    "type": "String"
                }
            ],
            "class": "FormAddViolation"
        },
        {
            "file": "src/app/route/job/jobDetail/jobViolation/formAddViolation/formAddViolation.component.ts",
            "line": 133,
            "description": "This method is used to make get info from OATH and fill all details in violation form",
            "itemtype": "method",
            "name": "getViolationInfo",
            "class": "FormAddViolation"
        },
        {
            "file": "src/app/route/job/jobDetail/jobViolation/formAddViolation/formAddViolation.component.ts",
            "line": 180,
            "description": "This method is used to show date picker on based on selection of COC date",
            "itemtype": "method",
            "name": "showDatePicker",
            "params": [
                {
                    "name": "e",
                    "description": "e is an instance of an element",
                    "type": "Any"
                }
            ],
            "class": "FormAddViolation"
        },
        {
            "file": "src/app/route/job/jobDetail/jobViolation/formAddViolation/formAddViolation.component.ts",
            "line": 194,
            "description": "This method is used to add explanation charges from violation",
            "itemtype": "method",
            "name": "addCharges",
            "class": "FormAddViolation"
        },
        {
            "file": "src/app/route/job/jobDetail/jobViolation/formAddViolation/formAddViolation.component.ts",
            "line": 216,
            "description": "This method is used to delete explanation charges from violation",
            "itemtype": "method",
            "name": "deleteCharges",
            "params": [
                {
                    "name": "index",
                    "description": "of row that we want to delete",
                    "type": "Number"
                },
                {
                    "name": "charges",
                    "description": "object that row we want to delete",
                    "type": "Any"
                }
            ],
            "class": "FormAddViolation"
        },
        {
            "file": "src/app/route/job/jobDetail/jobViolation/formAddViolation/formAddViolation.component.ts",
            "line": 233,
            "description": "This method is used to save violation record while create/update",
            "itemtype": "method",
            "name": "saveViolation",
            "class": "FormAddViolation"
        },
        {
            "file": "src/app/route/job/jobDetail/jobViolation/formAddViolation/formAddViolation.component.ts",
            "line": 279,
            "description": "This method is used for uploading documents that are attached in violation",
            "itemtype": "method",
            "name": "documentUpload",
            "params": [
                {
                    "name": "evt",
                    "description": "evt is an object of files",
                    "type": "Any"
                }
            ],
            "class": "FormAddViolation"
        },
        {
            "file": "src/app/route/job/jobDetail/jobViolation/formAddViolation/formAddViolation.component.ts",
            "line": 295,
            "description": "This method is used to call api for uploading document to server",
            "itemtype": "method",
            "name": "documentUpload",
            "params": [
                {
                    "name": "id",
                    "description": "id is job violation Id",
                    "type": "Number"
                }
            ],
            "class": "FormAddViolation"
        },
        {
            "file": "src/app/route/job/jobDetail/jobViolation/formAddViolation/formAddViolation.component.ts",
            "line": 320,
            "description": "This method is used to delete document from database",
            "itemtype": "method",
            "name": "deleteDocument",
            "params": [
                {
                    "name": "d",
                    "description": "d is the id of the document that we need to delete",
                    "type": "Any"
                }
            ],
            "class": "FormAddViolation"
        },
        {
            "file": "src/app/route/job/jobDetail/jobViolation/formAddViolation/formAddViolation.component.ts",
            "line": 334,
            "description": "This method is used to show whether resolve date should be appear if it is fully resolved not compulsory",
            "itemtype": "method",
            "name": "showResolveDate",
            "class": "FormAddViolation"
        },
        {
            "file": "src/app/route/job/jobDetail/jobViolation/formAddViolation/formAddViolation.component.ts",
            "line": 344,
            "description": "This method check given data is decimal or not",
            "itemtype": "method",
            "name": "isDecimal",
            "params": [
                {
                    "name": "evt",
                    "description": "event object",
                    "type": "Any"
                }
            ],
            "class": "FormAddViolation"
        },
        {
            "file": "src/app/route/job/jobDetail/jobViolation/jobViolation.component.ts",
            "line": 33,
            "description": "formAddViolation add/edit form",
            "itemtype": "property",
            "name": "formAddViolation",
            "class": "JobViolationComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobViolation/jobViolation.component.ts",
            "line": 40,
            "description": "addTimeNote add/edit form",
            "itemtype": "property",
            "name": "addTimeNote",
            "class": "JobViolationComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobViolation/jobViolation.component.ts",
            "line": 47,
            "description": "explainationCharges add/edit form",
            "itemtype": "property",
            "name": "explainationCharges",
            "class": "JobViolationComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobViolation/jobViolation.component.ts",
            "line": 54,
            "description": "addtransmittal add/edit form",
            "itemtype": "property",
            "name": "addtransmittal",
            "class": "JobViolationComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobViolation/jobViolation.component.ts",
            "line": 61,
            "description": "progressionnote add/edit form",
            "itemtype": "property",
            "name": "progressionnote",
            "class": "JobViolationComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobViolation/jobViolation.component.ts",
            "line": 178,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "JobViolationComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobViolation/jobViolation.component.ts",
            "line": 501,
            "description": "This method is used to open modal popup for Explaination of charges",
            "itemtype": "method",
            "name": "openExplainationCharges",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                },
                {
                    "name": "isNew",
                    "description": "it is optional which contains true if it is new record and false when it is old record",
                    "type": "Boolean"
                }
            ],
            "class": "JobViolationComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobViolation/jobViolation.component.ts",
            "line": 521,
            "description": "This method will be destroy all elements and other values from whole module",
            "itemtype": "method",
            "name": "ngOnDestroy",
            "class": "JobViolationComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobViolation/jobViolation.component.ts",
            "line": 530,
            "description": "This method is used to open modal popup for Time note add",
            "itemtype": "method",
            "name": "openModalTimeNote",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                }
            ],
            "class": "JobViolationComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobViolation/jobViolation.component.ts",
            "line": 540,
            "description": "This method is used to open modal popup for sending transmittal",
            "itemtype": "method",
            "name": "openCreateTransmittalModal",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                }
            ],
            "class": "JobViolationComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobViolation/jobViolation.component.ts",
            "line": 549,
            "description": "This method is used for filter/search records from datatable",
            "itemtype": "method",
            "name": "searchStates",
            "params": [
                {
                    "name": "srch",
                    "description": "type any which contains string that can be filtered from datatable",
                    "type": "String"
                }
            ],
            "class": "JobViolationComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobViolation/jobViolation.component.ts",
            "line": 558,
            "description": "This method is used to open modal popup for violation",
            "itemtype": "method",
            "name": "openModalForm",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                },
                {
                    "name": "isNew",
                    "description": "it is optional which contains true if it is new record and false when it is old record",
                    "type": "Boolean"
                }
            ],
            "class": "JobViolationComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobViolation/jobViolation.component.ts",
            "line": 573,
            "description": "This method is used to open modal popup for openViolationProgressionModalForm",
            "itemtype": "method",
            "name": "openViolationProgressionModalForm",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                }
            ],
            "class": "JobViolationComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobViolation/jobViolation.component.ts",
            "line": 586,
            "description": "This method is used to set button for violation module",
            "itemtype": "method",
            "name": "setBtnBasedonStatus",
            "params": [
                {
                    "name": "jobDetail",
                    "description": "jobDetail is an object of Job",
                    "type": "Any"
                }
            ],
            "class": "JobViolationComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobViolation/jobViolation.component.ts",
            "line": 617,
            "description": "This method is used to reload datatable",
            "itemtype": "method",
            "name": "reload",
            "class": "JobViolationComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobViolation/jobViolation.component.ts",
            "line": 626,
            "description": "This method is used to delete record",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "type which contains id to delete record",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "type which contains entire selected row",
                    "type": "Any"
                }
            ],
            "class": "JobViolationComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobViolation/jobViolation.service.ts",
            "line": 12,
            "description": "JobViolationServices contains all services related to Job Violation",
            "jobviolationservices": "",
            "class": "Violation"
        },
        {
            "file": "src/app/route/job/jobDetail/jobViolation/jobViolation.service.ts",
            "line": 27,
            "description": "Get all records from database in datatable format",
            "itemtype": "method",
            "name": "getRecords",
            "params": [
                {
                    "name": "cfg",
                    "description": "it is a string type which is used for filter data from data table",
                    "type": "Any"
                }
            ],
            "class": "Violation"
        },
        {
            "file": "src/app/route/job/jobDetail/jobViolation/jobViolation.service.ts",
            "line": 38,
            "description": "Get single record from database",
            "itemtype": "method",
            "name": "getById",
            "params": [
                {
                    "name": "id",
                    "description": "id of voilation for getting specific record",
                    "type": "Number"
                }
            ],
            "class": "Violation"
        },
        {
            "file": "src/app/route/job/jobDetail/jobViolation/jobViolation.service.ts",
            "line": 47,
            "description": "This method is used to delete records from database",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "of voilation to delete",
                    "type": "Number"
                }
            ],
            "class": "Violation"
        },
        {
            "file": "src/app/route/job/jobDetail/jobViolation/jobViolation.service.ts",
            "line": 56,
            "description": "Get single record from database",
            "itemtype": "method",
            "name": "getOATH",
            "params": [
                {
                    "name": "id",
                    "description": "id is summons number to get details from OATH",
                    "type": "String"
                }
            ],
            "class": "Violation"
        },
        {
            "file": "src/app/route/job/jobDetail/jobViolation/jobViolation.service.ts",
            "line": 65,
            "description": "This method is used to update existing record in database",
            "itemtype": "method",
            "name": "updateViolation",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "id of {{name}} for updating specific record",
                    "type": "Number"
                }
            ],
            "class": "Violation"
        },
        {
            "file": "src/app/route/job/jobDetail/jobViolation/jobViolation.service.ts",
            "line": 76,
            "description": "This method is used to create a new record in database",
            "itemtype": "method",
            "name": "createViolation",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                }
            ],
            "class": "Violation"
        },
        {
            "file": "src/app/route/job/jobDetail/jobViolation/jobViolation.service.ts",
            "line": 86,
            "description": "This method is used to save documents in database",
            "itemtype": "method",
            "name": "saveDocuments",
            "params": [
                {
                    "name": "type",
                    "description": "request Object of file",
                    "type": "Data"
                }
            ],
            "class": "Violation"
        },
        {
            "file": "src/app/route/job/jobDetail/jobViolation/jobViolation.service.ts",
            "line": 95,
            "description": "Get all dropdown data from penalty code master",
            "itemtype": "method",
            "name": "getPenaltyCode",
            "class": "Violation"
        },
        {
            "file": "src/app/route/job/jobDetail/jobViolation/jobViolation.service.ts",
            "line": 103,
            "description": "This method is used to change status of violation",
            "itemtype": "method",
            "name": "setStatus",
            "params": [
                {
                    "name": "id",
                    "description": "id of violation for getting specific record",
                    "type": "Number"
                },
                {
                    "name": "status",
                    "description": "status of violation to be updated",
                    "type": "String"
                }
            ],
            "class": "Violation"
        },
        {
            "file": "src/app/route/job/jobDetail/jobViolation/jobViolation.service.ts",
            "line": 117,
            "description": "This method is used to change Hearing date of violation",
            "itemtype": "method",
            "name": "setHearingDate",
            "params": [
                {
                    "name": "id",
                    "description": "id of violation for getting specific record",
                    "type": "Number"
                },
                {
                    "name": "data",
                    "description": "data contains hearing date of violation to be updated",
                    "type": "Any"
                }
            ],
            "class": "Violation"
        },
        {
            "file": "src/app/route/job/jobDetail/jobViolation/jobViolation.service.ts",
            "line": 131,
            "description": "This method is used to change Resolve date of violation",
            "itemtype": "method",
            "name": "setResolveDate",
            "params": [
                {
                    "name": "id",
                    "description": "id of violation for getting specific record",
                    "type": "Number"
                },
                {
                    "name": "data",
                    "description": "data contains resolve date of violation to be updated",
                    "type": "Any"
                }
            ],
            "class": "Violation"
        },
        {
            "file": "src/app/route/job/jobDetail/jobViolation/jobViolation.service.ts",
            "line": 145,
            "description": "This method is used to change Resolve date of violation",
            "itemtype": "method",
            "name": "setFullyResolved",
            "params": [
                {
                    "name": "id",
                    "description": "id of violation for getting specific record",
                    "type": "Number"
                },
                {
                    "name": "data",
                    "description": "data contains resolve date of violation to be updated",
                    "type": "Any"
                }
            ],
            "class": "Violation"
        },
        {
            "file": "src/app/route/job/jobDetail/jobViolation/jobViolation.service.ts",
            "line": 159,
            "description": "This method is used to get progression note for specific task",
            "itemtype": "method",
            "name": "getViolationProgressionNotes",
            "params": [
                {
                    "name": "idViolation",
                    "description": "violation id which is used to get progression note for specific task",
                    "type": "Number"
                }
            ],
            "class": "Violation"
        },
        {
            "file": "src/app/route/job/jobDetail/jobViolation/jobViolation.service.ts",
            "line": 169,
            "description": "This method is used to create a new progression note record in database",
            "itemtype": "method",
            "name": "createViolationProgressionNote",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                }
            ],
            "class": "Violation"
        },
        {
            "file": "src/app/route/job/jobDetail/relatedJob/addRelatedJob/addRelatedJob.component.ts",
            "line": 85,
            "description": "get all job list",
            "class": "RelatedJobServices"
        },
        {
            "file": "src/app/route/job/jobDetail/relatedJob/addRelatedJob/addRelatedJob.component.ts",
            "line": 133,
            "description": "Set Job details as per selection",
            "class": "RelatedJobServices"
        },
        {
            "file": "src/app/route/job/jobDetail/relatedJob/relatedJob.service.ts",
            "line": 23,
            "description": "This addRelatedJob is used to create a new record in database",
            "itemtype": "method",
            "name": "addRelatedJob",
            "params": [
                {
                    "name": "idChildJob",
                    "description": "idChildJob is an id of other job",
                    "type": "Number"
                },
                {
                    "name": "idJob",
                    "description": "idJob is an job id",
                    "type": "Number"
                }
            ],
            "class": "RelatedJobServices"
        },
        {
            "file": "src/app/route/job/jobDetail/relatedJob/relatedJob.service.ts",
            "line": 34,
            "description": "This deleteRelatedJob is used to delete a new record in database",
            "itemtype": "method",
            "name": "deleteRelatedJob",
            "params": [
                {
                    "name": "idChildJob",
                    "description": "idChildJob is an id of other job",
                    "type": "Number"
                },
                {
                    "name": "idJob",
                    "description": "idJob is an job id",
                    "type": "Number"
                }
            ],
            "class": "RelatedJobServices"
        },
        {
            "file": "src/app/route/job/jobDetail/relatedJob/relatedJob.service.ts",
            "line": 45,
            "description": "Get single record from database",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "idJob",
                    "description": "id of job for getting specific record",
                    "type": "Number"
                }
            ],
            "class": "RelatedJobServices"
        },
        {
            "file": "src/app/route/job/jobDetail/relatedJob/relatedJob.service.ts",
            "line": 56,
            "description": "Get single record from database",
            "itemtype": "method",
            "name": "getAllJobById",
            "params": [
                {
                    "name": "idJob",
                    "description": "id for getting all job record",
                    "type": "Number"
                }
            ],
            "class": "RelatedJobServices"
        },
        {
            "file": "src/app/route/job/jobDetail/relatedJob/relatedJob.service.ts",
            "line": 65,
            "description": "Get single record from database",
            "itemtype": "method",
            "name": "getJobById",
            "params": [
                {
                    "name": "id",
                    "description": "id of job for getting specific record",
                    "type": "Number"
                }
            ],
            "class": "RelatedJobServices"
        },
        {
            "file": "src/app/route/job/jobDetail/relatedJob/relatedJob.service.ts",
            "line": 74,
            "description": "Get all records from database",
            "itemtype": "method",
            "name": "getAllJobs",
            "params": [
                {
                    "name": "params",
                    "description": "params is used as a parameter for filtering job records",
                    "type": "Any"
                }
            ],
            "class": "RelatedJobServices"
        },
        {
            "file": "src/app/route/job/jobDetail/timeNotes/TimeNotes.service.ts",
            "line": 24,
            "description": "Get all records from database in datatable format",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "cfg",
                    "description": "it is a string type which is used for filter data from data table",
                    "type": "Any"
                }
            ],
            "class": "TimeNotesServices"
        },
        {
            "file": "src/app/route/job/jobDetail/timeNotes/TimeNotes.service.ts",
            "line": 35,
            "description": "This method is used to get all time note categories",
            "itemtype": "method",
            "name": "getAlltimeNoteCat",
            "class": "TimeNotesServices"
        },
        {
            "file": "src/app/route/job/jobDetail/timeNotes/TimeNotes.service.ts",
            "line": 43,
            "description": "This method is used to create a new record in database",
            "itemtype": "method",
            "name": "addJobTimeNote",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                }
            ],
            "class": "TimeNotesServices"
        },
        {
            "file": "src/app/route/job/jobDetail/timeNotes/TimeNotes.service.ts",
            "line": 53,
            "description": "This method is used to get scope services that are related to job",
            "itemtype": "method",
            "name": "getScopeServices",
            "params": [
                {
                    "name": "idJob",
                    "description": "idJob of Job for getting specific record",
                    "type": "Number"
                }
            ],
            "class": "TimeNotesServices"
        },
        {
            "file": "src/app/route/job/jobDetail/timeNotes/TimeNotes.service.ts",
            "line": 62,
            "description": "Get all dropdown data from Master Fee Schedule",
            "itemtype": "method",
            "name": "getMasterFeeSchedule",
            "class": "TimeNotesServices"
        },
        {
            "file": "src/app/route/job/jobDetail/timeNotes/TimeNotes.service.ts",
            "line": 70,
            "description": "Get single record from database",
            "itemtype": "method",
            "name": "getById",
            "params": [
                {
                    "name": "idTimeNote",
                    "description": "idTimeNote of time note for getting specific record",
                    "type": "Number"
                }
            ],
            "class": "TimeNotesServices"
        },
        {
            "file": "src/app/route/job/jobDetail/timeNotes/timeNotes.component.ts",
            "line": 49,
            "description": "editTimeNote add/edit form",
            "itemtype": "property",
            "name": "editTimeNote",
            "class": "TimeNotesComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/timeNotes/timeNotes.component.ts",
            "line": 89,
            "description": "This method is used to set button based on status",
            "itemtype": "method",
            "name": "setBtnBasedonStatus",
            "params": [
                {
                    "name": "jobDetail",
                    "description": "jobDetail is an object of job",
                    "type": "Any"
                }
            ],
            "class": "TimeNotesComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/timeNotes/timeNotes.component.ts",
            "line": 104,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "TimeNotesComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/timeNotes/timeNotes.component.ts",
            "line": 218,
            "description": "This method is used to set job status",
            "itemtype": "method",
            "name": "getJobStatus",
            "class": "TimeNotesComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/timeNotes/timeNotes.component.ts",
            "line": 235,
            "description": "This method is used to redirect user to job detail screen",
            "itemtype": "method",
            "name": "onOpenJobDetail",
            "params": [
                {
                    "name": "data",
                    "description": "data is an object of job",
                    "type": "Any"
                }
            ],
            "class": "TimeNotesComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/timeNotes/timeNotes.component.ts",
            "line": 247,
            "description": "This method is used to change the selected application type",
            "itemtype": "method",
            "name": "onSelectionChange",
            "params": [
                {
                    "name": "entry",
                    "description": "entry is an selected job type",
                    "type": "Any"
                }
            ],
            "class": "TimeNotesComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/timeNotes/timeNotes.component.ts",
            "line": 256,
            "description": "This method is used to avoid from closing dropdown",
            "itemtype": "method",
            "name": "dropdownPropagation",
            "params": [
                {
                    "name": "event",
                    "description": "event of an input element",
                    "type": "Any"
                }
            ],
            "class": "TimeNotesComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/timeNotes/timeNotes.component.ts",
            "line": 273,
            "description": "This method is used to reload datatable",
            "itemtype": "method",
            "name": "reload",
            "class": "TimeNotesComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/timeNotes/timeNotes.component.ts",
            "line": 284,
            "description": "This method is used for filter/search records from datatable",
            "itemtype": "method",
            "name": "search",
            "params": [
                {
                    "name": "srch",
                    "description": "type any which contains string that can be filtered from datatable",
                    "type": "String"
                }
            ],
            "class": "TimeNotesComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobDetail.component.ts",
            "line": 87,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "JobDetailComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobDetail.component.ts",
            "line": 100,
            "description": "This method is used to set shared service when page gets refresh or jobdetail and jobrecord is getting null",
            "itemtype": "method",
            "name": "setJobObjectToServiceOnRefresh",
            "params": [
                {
                    "name": "jobId",
                    "description": "jobId is the job number",
                    "type": "Number"
                }
            ],
            "class": "JobDetailComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobDetail.component.ts",
            "line": 119,
            "description": "This method is used to set job application type",
            "itemtype": "method",
            "name": "setApplicationJobType",
            "params": [
                {
                    "name": "r",
                    "description": "r is an object of application type",
                    "type": "Any"
                }
            ],
            "class": "JobDetailComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobDetail.component.ts",
            "line": 143,
            "description": "This method is used to get data from shared service",
            "itemtype": "method",
            "name": "getJobOjectFromService",
            "class": "JobDetailComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobDetail.component.ts",
            "line": 170,
            "description": "This method is used to get status of job and set labels accordingly",
            "itemtype": "method",
            "name": "getStatus",
            "params": [
                {
                    "name": "r",
                    "description": "r is used as an array of status and displayaccordingly",
                    "type": "Any"
                }
            ],
            "class": "JobDetailComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobDetail.component.ts",
            "line": 219,
            "description": "This method is used when application type is changed",
            "itemtype": "method",
            "name": "onSelectionChange",
            "params": [
                {
                    "name": "jobType",
                    "description": "jobType which type of application is getting to be selected",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "id of tje job",
                    "type": "Number"
                }
            ],
            "class": "JobDetailComponent"
        },
        {
            "file": "src/app/route/job/jobDetail/jobDetail.component.ts",
            "line": 227,
            "description": "when move from dot to dob or vica versa set application to null",
            "class": "JobDetailComponent"
        },
        {
            "file": "src/app/route/job/JobSharedService.ts",
            "line": 38,
            "description": "This method is used to set data of job object",
            "itemtype": "method",
            "name": "setJobData",
            "params": [
                {
                    "name": "jobData",
                    "description": "job object",
                    "type": "Any"
                }
            ],
            "class": "JobSharedService"
        },
        {
            "file": "src/app/route/job/JobSharedService.ts",
            "line": 48,
            "description": "This method is used to get data of job object",
            "itemtype": "method",
            "name": "getJobData",
            "class": "JobSharedService"
        },
        {
            "file": "src/app/route/job/JobSharedService.ts",
            "line": 56,
            "description": "This method is used to set selected application type",
            "itemtype": "method",
            "name": "setJobAppType",
            "params": [
                {
                    "name": "jobData",
                    "description": "job object",
                    "type": "Any"
                }
            ],
            "class": "JobSharedService"
        },
        {
            "file": "src/app/route/job/JobSharedService.ts",
            "line": 66,
            "description": "This method is used to get selected application type",
            "itemtype": "method",
            "name": "getJobAppType",
            "class": "JobSharedService"
        },
        {
            "file": "src/app/route/job/JobSharedService.ts",
            "line": 75,
            "description": "This method is used to set selected application type",
            "itemtype": "method",
            "name": "setSelectedApplication",
            "params": [
                {
                    "name": "rec",
                    "description": "selected application row data",
                    "type": "Any"
                }
            ],
            "class": "JobSharedService"
        },
        {
            "file": "src/app/route/job/JobSharedService.ts",
            "line": 85,
            "description": "This method is used to get selected row of specific application",
            "itemtype": "method",
            "name": "getSelectedApplication",
            "class": "JobSharedService"
        },
        {
            "file": "src/app/route/job/job.component.ts",
            "line": 37,
            "description": "Form Job Add",
            "itemtype": "property",
            "name": "formJob",
            "class": "JobComponent"
        },
        {
            "file": "src/app/route/job/job.component.ts",
            "line": 44,
            "description": "Add task form",
            "itemtype": "property",
            "name": "addtask",
            "class": "JobComponent"
        },
        {
            "file": "src/app/route/job/job.component.ts",
            "line": 51,
            "description": "Add transmittal form",
            "itemtype": "property",
            "name": "addtransmittal",
            "class": "JobComponent"
        },
        {
            "file": "src/app/route/job/job.component.ts",
            "line": 58,
            "description": "Add reason form",
            "itemtype": "property",
            "name": "addreason",
            "class": "JobComponent"
        },
        {
            "file": "src/app/route/job/job.component.ts",
            "line": 102,
            "description": "This method define all services that requires in whole class",
            "itemtype": "method",
            "name": "constructor",
            "class": "JobComponent"
        },
        {
            "file": "src/app/route/job/job.component.ts",
            "line": 127,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "JobComponent"
        },
        {
            "file": "src/app/route/job/job.component.ts",
            "line": 138,
            "description": "it also search for address",
            "class": "JobComponent"
        },
        {
            "file": "src/app/route/job/job.component.ts",
            "line": 142,
            "description": "for searching address \ncode starts for searching of jobs from address module",
            "class": "JobComponent"
        },
        {
            "file": "src/app/route/job/job.component.ts",
            "line": 156,
            "description": "code ends for searching of jobs from address module",
            "class": "JobComponent"
        },
        {
            "file": "src/app/route/job/job.component.ts",
            "line": 171,
            "description": "This method is used to set permission for job",
            "itemtype": "method",
            "name": "permission",
            "params": [
                {
                    "name": "constantValues",
                    "description": "set of permission values",
                    "type": "Any"
                }
            ],
            "class": "JobComponent"
        },
        {
            "file": "src/app/route/job/job.component.ts",
            "line": 233,
            "description": "This method load datatable",
            "itemtype": "method",
            "name": "loadDataTable",
            "class": "JobComponent"
        },
        {
            "file": "src/app/route/job/job.component.ts",
            "line": 447,
            "description": "This method is used to change status",
            "itemtype": "method",
            "name": "EventForChangingTheStatus",
            "params": [
                {
                    "name": "res",
                    "description": "Job Result",
                    "type": "Any"
                }
            ],
            "class": "JobComponent"
        },
        {
            "file": "src/app/route/job/job.component.ts",
            "line": 460,
            "description": "This method is used open add transmittal popup",
            "itemtype": "method",
            "name": "openCreateTransmittalModal",
            "params": [
                {
                    "name": "template",
                    "description": "TemplateRef",
                    "type": "Any"
                },
                {
                    "name": "action",
                    "description": "Identify Action",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "ID of Job",
                    "type": "Number"
                }
            ],
            "class": "JobComponent"
        },
        {
            "file": "src/app/route/job/job.component.ts",
            "line": 471,
            "description": "This method is used to download PDF",
            "itemtype": "method",
            "name": "downloadPdf",
            "params": [
                {
                    "name": "idRfp",
                    "description": "ID of RFP",
                    "type": "Number"
                }
            ],
            "class": "JobComponent"
        },
        {
            "file": "src/app/route/job/job.component.ts",
            "line": 488,
            "description": "This method is used to open popup for add task",
            "itemtype": "method",
            "name": "openModalForm",
            "params": [
                {
                    "name": "template",
                    "description": "TemplateRef Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "ID of Job",
                    "type": "Number"
                }
            ],
            "class": "JobComponent"
        },
        {
            "file": "src/app/route/job/job.component.ts",
            "line": 501,
            "description": "This method is reload datatable after save record",
            "params": [
                {
                    "name": "jobObj",
                    "description": "Job Object",
                    "type": "Job"
                },
                {
                    "name": "evt",
                    "description": "Event Object",
                    "type": "Any"
                }
            ],
            "class": "JobComponent"
        },
        {
            "file": "src/app/route/job/job.component.ts",
            "line": 511,
            "description": "This method reloads datatable after advance search",
            "itemtype": "method",
            "name": "reloadAdvanceSearch",
            "params": [
                {
                    "name": "filter",
                    "description": "Search Criteria",
                    "type": "Any"
                }
            ],
            "class": "JobComponent"
        },
        {
            "file": "src/app/route/job/job.component.ts",
            "line": 523,
            "description": "This method will call when job detail page open",
            "itemtype": "method",
            "name": "onOpenJobDetail",
            "params": [
                {
                    "name": "data",
                    "description": "JobData",
                    "type": "Any"
                }
            ],
            "class": "JobComponent"
        },
        {
            "file": "src/app/route/job/job.component.ts",
            "line": 533,
            "description": "This method will open popup for add job",
            "itemtype": "method",
            "name": "_openAddJobModal",
            "params": [
                {
                    "name": "template",
                    "description": "TemplateRef Object",
                    "type": "Any"
                }
            ],
            "class": "JobComponent"
        },
        {
            "file": "src/app/route/job/job.component.ts",
            "line": 542,
            "description": "This method will open popup for add job",
            "itemtype": "method",
            "name": "openAddJobModal",
            "params": [
                {
                    "name": "template",
                    "description": "TemplateRef Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "ID of Job",
                    "type": "Number"
                },
                {
                    "name": "isNew",
                    "description": "Identify Job is create or edit",
                    "type": "Boolean"
                }
            ],
            "class": "JobComponent"
        },
        {
            "file": "src/app/route/job/job.component.ts",
            "line": 566,
            "description": "This method will open popup for advance search",
            "itemtype": "method",
            "name": "_openModalAdvanceSearch",
            "params": [
                {
                    "name": "template",
                    "description": "TemplateRef Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "ID of Job",
                    "type": "Number"
                },
                {
                    "name": "isNew",
                    "description": "Identify Job is create or edit",
                    "type": "Boolean"
                }
            ],
            "class": "JobComponent"
        },
        {
            "file": "src/app/route/job/job.component.ts",
            "line": 577,
            "description": "This method will open popup for advance search",
            "itemtype": "method",
            "name": "openModalAdvanceSearch",
            "params": [
                {
                    "name": "template",
                    "description": "TemplateRef Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "ID of Job",
                    "type": "Number"
                }
            ],
            "class": "JobComponent"
        },
        {
            "file": "src/app/route/job/job.component.ts",
            "line": 587,
            "description": "This method will open popup for add reason",
            "itemtype": "method",
            "name": "openAddReasonForm",
            "params": [
                {
                    "name": "template",
                    "description": "TemplateRef Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "ID of Job",
                    "type": "Number"
                }
            ],
            "class": "JobComponent"
        },
        {
            "file": "src/app/route/job/job.component.ts",
            "line": 597,
            "description": "This method search in job datatable",
            "itemtype": "method",
            "name": "searchJob",
            "params": [
                {
                    "name": "srch",
                    "description": "Search Criteria",
                    "type": "String"
                }
            ],
            "class": "JobComponent"
        },
        {
            "file": "src/app/route/job/job.component.ts",
            "line": 606,
            "description": "This method reload datatable",
            "itemtype": "method",
            "name": "reload",
            "class": "JobComponent"
        },
        {
            "file": "src/app/route/job/job.component.ts",
            "line": 615,
            "description": "This method is clear search",
            "itemtype": "method",
            "name": "clearsearch",
            "class": "JobComponent"
        },
        {
            "file": "src/app/route/job/job.component.ts",
            "line": 625,
            "description": "This method get all borough list",
            "itemtype": "method",
            "name": "getBoroughs",
            "class": "JobComponent"
        },
        {
            "file": "src/app/route/job/job.component.ts",
            "line": 637,
            "description": "This method change job status",
            "itemtype": "method",
            "name": "changeHoldOrInProgessStatus",
            "params": [
                {
                    "name": "data",
                    "description": "Job Data",
                    "type": "Any"
                }
            ],
            "class": "JobComponent"
        },
        {
            "file": "src/app/route/job/job.component.ts",
            "line": 663,
            "description": "This method change job status",
            "itemtype": "method",
            "name": "changeHoldOrInProgessStatus",
            "params": [
                {
                    "name": "data",
                    "description": "Job Data",
                    "type": "Any"
                }
            ],
            "class": "JobComponent"
        },
        {
            "file": "src/app/route/job/job.services.ts",
            "line": 38,
            "description": "Get all records from database in datatable format",
            "itemtype": "method",
            "name": "getRecords",
            "params": [
                {
                    "name": "search",
                    "description": "it is a string type which is used for filter data from data table",
                    "type": "Any"
                }
            ],
            "class": "JobServices"
        },
        {
            "file": "src/app/route/job/job.services.ts",
            "line": 49,
            "description": "This method is used to create a new record in database",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                }
            ],
            "class": "JobServices"
        },
        {
            "file": "src/app/route/job/job.services.ts",
            "line": 59,
            "description": "This method is used to update existing record in database",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "id of {{name}} for updating specific record",
                    "type": "Number"
                }
            ],
            "class": "JobServices"
        },
        {
            "file": "src/app/route/job/job.services.ts",
            "line": 70,
            "description": "Get single record from database",
            "itemtype": "method",
            "name": "getByJobNumber",
            "params": [
                {
                    "name": "id",
                    "description": "id of job for getting specific record",
                    "type": "Number"
                }
            ],
            "class": "JobServices"
        },
        {
            "file": "src/app/route/job/job.services.ts",
            "line": 80,
            "description": "Get single record from database",
            "itemtype": "method",
            "name": "getJobById",
            "params": [
                {
                    "name": "id",
                    "description": "id of job for getting specific record",
                    "type": "Number"
                }
            ],
            "class": "JobServices"
        },
        {
            "file": "src/app/route/job/job.services.ts",
            "line": 90,
            "description": "Get single record from database",
            "itemtype": "method",
            "name": "getJobDetailById",
            "params": [
                {
                    "name": "id",
                    "description": "id of job for getting specific record",
                    "type": "Number"
                },
                {
                    "name": "isFromJobDetail",
                    "description": "isFromJobDetail is used to check whether function is called from job detail \n or from the job listing page",
                    "type": "Boolean"
                }
            ],
            "class": "JobServices"
        },
        {
            "file": "src/app/route/job/job.services.ts",
            "line": 110,
            "description": "This method is used to delete records from database",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "of job to delete",
                    "type": "Number"
                }
            ],
            "class": "JobServices"
        },
        {
            "file": "src/app/route/job/job.services.ts",
            "line": 120,
            "description": "This method is used to change the job status",
            "itemtype": "method",
            "name": "changeJobStatus",
            "params": [
                {
                    "name": "id",
                    "description": "id of job",
                    "type": "Number"
                },
                {
                    "name": "data",
                    "description": "data is an object of job",
                    "type": "Any"
                },
                {
                    "name": "isFromReason",
                    "description": "isFromReason is used to indicate whether function is called from reason module \n or from job listing",
                    "type": "Boolean"
                }
            ],
            "class": "JobServices"
        },
        {
            "file": "src/app/route/job/job.services.ts",
            "line": 129,
            "description": "1 = inprogress status\n2 = on hold status\n3 = completed status",
            "class": "JobServices"
        },
        {
            "file": "src/app/route/job/job.services.ts",
            "line": 148,
            "description": "This method is used to generate label for specific Job",
            "itemtype": "method",
            "name": "generateLabel",
            "params": [
                {
                    "name": "id",
                    "description": "id of Job for getting specific record",
                    "type": "Number"
                }
            ],
            "class": "JobServices"
        },
        {
            "file": "src/app/route/job/job.services.ts",
            "line": 158,
            "description": "This method is used to link Job with RFP",
            "itemtype": "method",
            "name": "getLinkedRFP",
            "params": [
                {
                    "name": "idJob",
                    "description": "idJob of job for getting specific record",
                    "type": "Number"
                }
            ],
            "class": "JobServices"
        },
        {
            "file": "src/app/route/jobcontacttypes/jobcontacttypesform/jobcontacttypesform.component.ts",
            "line": 44,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "JobContactTypesForm"
        },
        {
            "file": "src/app/route/jobcontacttypes/jobcontacttypesform/jobcontacttypesform.component.ts",
            "line": 73,
            "description": "This method is used to save record",
            "itemtype": "method",
            "name": "saveJobContactTypes",
            "class": "JobContactTypesForm"
        },
        {
            "file": "src/app/route/jobcontacttypes/jobcontacttypes.component.ts",
            "line": 23,
            "description": "jobcontacttypesform add/edit form",
            "itemtype": "property",
            "name": "jobcontacttypesform",
            "class": "JobContactTypesComponent"
        },
        {
            "file": "src/app/route/jobcontacttypes/jobcontacttypes.component.ts",
            "line": 67,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "JobContactTypesComponent"
        },
        {
            "file": "src/app/route/jobcontacttypes/jobcontacttypes.component.ts",
            "line": 124,
            "description": "This method will be destroy all elements and other values from whole module",
            "itemtype": "method",
            "name": "ngOnDestroy",
            "class": "JobContactTypesComponent"
        },
        {
            "file": "src/app/route/jobcontacttypes/jobcontacttypes.component.ts",
            "line": 133,
            "description": "This method is used for filter/search records from datatable",
            "itemtype": "method",
            "name": "searchJobContactTypes",
            "params": [
                {
                    "name": "srch",
                    "description": "type any which contains string that can be filtered from datatable",
                    "type": "String"
                }
            ],
            "class": "JobContactTypesComponent"
        },
        {
            "file": "src/app/route/jobcontacttypes/jobcontacttypes.component.ts",
            "line": 142,
            "description": "This method is used to open modal popup for openModalForm",
            "itemtype": "method",
            "name": "openModalForm",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                },
                {
                    "name": "isNew",
                    "description": "it is optional which contains true if it is new record and false when it is old record",
                    "type": "Boolean"
                }
            ],
            "class": "JobContactTypesComponent"
        },
        {
            "file": "src/app/route/jobcontacttypes/jobcontacttypes.component.ts",
            "line": 157,
            "description": "This method is used to reload datatable",
            "itemtype": "method",
            "name": "reload",
            "class": "JobContactTypesComponent"
        },
        {
            "file": "src/app/route/jobcontacttypes/jobcontacttypes.component.ts",
            "line": 166,
            "description": "This method is used to delete record",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "type which contains id to delete record",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "type which contains entire selected row",
                    "type": "Any"
                }
            ],
            "class": "JobContactTypesComponent"
        },
        {
            "file": "src/app/route/jobcontacttypes/jobcontacttypes.services.ts",
            "line": 21,
            "description": "Get all records from database in datatable format",
            "itemtype": "method",
            "name": "getRecords",
            "class": "JobContactTypesServices"
        },
        {
            "file": "src/app/route/jobcontacttypes/jobcontacttypes.services.ts",
            "line": 31,
            "description": "This method is used to create a new record in database",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                }
            ],
            "class": "JobContactTypesServices"
        },
        {
            "file": "src/app/route/jobcontacttypes/jobcontacttypes.services.ts",
            "line": 41,
            "description": "This method is used to update existing record in database",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "id of Job Contact Types for updating specific record",
                    "type": "Number"
                }
            ],
            "class": "JobContactTypesServices"
        },
        {
            "file": "src/app/route/jobcontacttypes/jobcontacttypes.services.ts",
            "line": 51,
            "description": "Get single record from database",
            "itemtype": "method",
            "name": "getById",
            "params": [
                {
                    "name": "id",
                    "description": "id of Job Contact Types for getting specific record",
                    "type": "Number"
                }
            ],
            "class": "JobContactTypesServices"
        },
        {
            "file": "src/app/route/jobcontacttypes/jobcontacttypes.services.ts",
            "line": 60,
            "description": "This method is used to delete records from database",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "of Job Contact Types to delete",
                    "type": "Number"
                }
            ],
            "class": "JobContactTypesServices"
        },
        {
            "file": "src/app/route/jobtimenotecategories/jobtimenotecategoriesform/jobtimenotecategoriesform.component.ts",
            "line": 44,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "JobTimenoteCategoriesForm"
        },
        {
            "file": "src/app/route/jobtimenotecategories/jobtimenotecategoriesform/jobtimenotecategoriesform.component.ts",
            "line": 75,
            "description": "This method is used to save record",
            "itemtype": "method",
            "name": "saveTimeNoteCategory",
            "class": "JobTimenoteCategoriesForm"
        },
        {
            "file": "src/app/route/jobtimenotecategories/jobtimenotecategories.component.ts",
            "line": 23,
            "description": "Form job timenote category",
            "itemtype": "property",
            "name": "jobtimenotecategoriesform",
            "class": "JobTimenoteCategoriesComponent"
        },
        {
            "file": "src/app/route/jobtimenotecategories/jobtimenotecategories.component.ts",
            "line": 41,
            "description": "This method define all services that requires in whole class",
            "itemtype": "method",
            "name": "constructor",
            "class": "JobTimenoteCategoriesComponent"
        },
        {
            "file": "src/app/route/jobtimenotecategories/jobtimenotecategories.component.ts",
            "line": 72,
            "description": "This method will call when form loads first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "JobTimenoteCategoriesComponent"
        },
        {
            "file": "src/app/route/jobtimenotecategories/jobtimenotecategories.component.ts",
            "line": 122,
            "description": "This method will call when user left component",
            "itemtype": "method",
            "name": "ngOnDestroy",
            "class": "JobTimenoteCategoriesComponent"
        },
        {
            "file": "src/app/route/jobtimenotecategories/jobtimenotecategories.component.ts",
            "line": 131,
            "description": "This method search job timenote categories",
            "itemtype": "method",
            "name": "searchJobTimenoteCategories",
            "params": [
                {
                    "name": "srch",
                    "description": "Search String",
                    "type": "String"
                }
            ],
            "class": "JobTimenoteCategoriesComponent"
        },
        {
            "file": "src/app/route/jobtimenotecategories/jobtimenotecategories.component.ts",
            "line": 140,
            "description": "This method open add/edit form",
            "itemtype": "method",
            "name": "openModalForm",
            "params": [
                {
                    "name": "template",
                    "description": "TemplateRef Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "Id of Record",
                    "type": "Number"
                },
                {
                    "name": "isNew",
                    "description": "Flag to identify new record or edit",
                    "type": "Boolean"
                }
            ],
            "class": "JobTimenoteCategoriesComponent"
        },
        {
            "file": "src/app/route/jobtimenotecategories/jobtimenotecategories.component.ts",
            "line": 155,
            "description": "This method reload data table",
            "itemtype": "method",
            "name": "reload",
            "class": "JobTimenoteCategoriesComponent"
        },
        {
            "file": "src/app/route/jobtimenotecategories/jobtimenotecategories.component.ts",
            "line": 164,
            "description": "This method delete record from database",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "ID of record",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "Selected Row to delete",
                    "type": "Any"
                }
            ],
            "class": "JobTimenoteCategoriesComponent"
        },
        {
            "file": "src/app/route/jobtimenotecategories/jobtimenotecategories.services.ts",
            "line": 20,
            "description": "This method get all records for datatable",
            "itemtype": "method",
            "name": "getRecords",
            "params": [
                {
                    "name": "cfg",
                    "description": "Search Criteria",
                    "type": "Any"
                }
            ],
            "class": "JobTimenoteCategoriesServices"
        },
        {
            "file": "src/app/route/jobtimenotecategories/jobtimenotecategories.services.ts",
            "line": 31,
            "description": "This method will create record",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "data",
                    "description": "JobTimenoteCategories Object",
                    "type": "JobTimenoteCategories"
                }
            ],
            "class": "JobTimenoteCategoriesServices"
        },
        {
            "file": "src/app/route/jobtimenotecategories/jobtimenotecategories.services.ts",
            "line": 41,
            "description": "This method will update record",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "id",
                    "description": "ID of record",
                    "type": "Number"
                },
                {
                    "name": "data",
                    "description": "JobTimenoteCategories Object",
                    "type": "JobTimenoteCategories"
                }
            ],
            "class": "JobTimenoteCategoriesServices"
        },
        {
            "file": "src/app/route/jobtimenotecategories/jobtimenotecategories.services.ts",
            "line": 51,
            "description": "This method get record for given ID",
            "itemtype": "method",
            "name": "getById",
            "params": [
                {
                    "name": "id",
                    "description": "ID of Record",
                    "type": "Number"
                }
            ],
            "class": "JobTimenoteCategoriesServices"
        },
        {
            "file": "src/app/route/jobtimenotecategories/jobtimenotecategories.services.ts",
            "line": 60,
            "description": "This method delete record for given ID",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "ID of Record",
                    "type": "Number"
                }
            ],
            "class": "JobTimenoteCategoriesServices"
        },
        {
            "file": "src/app/route/jobtype/formJobType/formJobType.component.ts",
            "line": 41,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "FormJobType"
        },
        {
            "file": "src/app/route/jobtype/formJobType/formJobType.component.ts",
            "line": 60,
            "description": "This method is used to save record",
            "itemtype": "method",
            "name": "saveJobType",
            "params": [
                {
                    "name": "type",
                    "description": "request Object",
                    "type": "Data"
                }
            ],
            "class": "FormJobType"
        },
        {
            "file": "src/app/route/jobtype/jobType.component.ts",
            "line": 26,
            "description": "formJobType add/edit form",
            "itemtype": "property",
            "name": "formJobType",
            "class": "JobTypeComponent"
        },
        {
            "file": "src/app/route/jobtype/jobType.component.ts",
            "line": 74,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "JobTypeComponent"
        },
        {
            "file": "src/app/route/jobtype/jobType.component.ts",
            "line": 129,
            "description": "This method is used to reload datatable",
            "itemtype": "method",
            "name": "reload",
            "class": "JobTypeComponent"
        },
        {
            "file": "src/app/route/jobtype/jobType.component.ts",
            "line": 138,
            "description": "This method is used to open modal popup for openModalForm",
            "itemtype": "method",
            "name": "openModalForm",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                },
                {
                    "name": "isNew",
                    "description": "it is optional which contains true if it is new record and false when it is old record",
                    "type": "Boolean"
                }
            ],
            "class": "JobTypeComponent"
        },
        {
            "file": "src/app/route/jobtype/jobType.component.ts",
            "line": 154,
            "description": "This method is used to delete records from database",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "of {{name}} to delete",
                    "type": "Number"
                }
            ],
            "class": "JobTypeComponent"
        },
        {
            "file": "src/app/route/jobtype/jobType.component.ts",
            "line": 171,
            "description": "This method is used for filter/search records from datatable",
            "itemtype": "method",
            "name": "searchJobType",
            "params": [
                {
                    "name": "srch",
                    "description": "type any which contains string that can be filtered from datatable",
                    "type": "String"
                }
            ],
            "class": "JobTypeComponent"
        },
        {
            "file": "src/app/route/jobtype/jobType.services.ts",
            "line": 23,
            "description": "Get all records from database in datatable format",
            "itemtype": "method",
            "name": "getAllJobTypes",
            "class": "JobTypeServices"
        },
        {
            "file": "src/app/route/jobtype/jobType.services.ts",
            "line": 33,
            "description": "This method is used to create a new record in database",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                }
            ],
            "class": "JobTypeServices"
        },
        {
            "file": "src/app/route/jobtype/jobType.services.ts",
            "line": 43,
            "description": "This method is used to update existing record in database",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "id of job type for updating specific record",
                    "type": "Number"
                }
            ],
            "class": "JobTypeServices"
        },
        {
            "file": "src/app/route/jobtype/jobType.services.ts",
            "line": 54,
            "description": "Get single record from database",
            "itemtype": "method",
            "name": "getById",
            "params": [
                {
                    "name": "id",
                    "description": "id of job type for getting specific record",
                    "type": "Number"
                }
            ],
            "class": "JobTypeServices"
        },
        {
            "file": "src/app/route/jobtype/jobType.services.ts",
            "line": 63,
            "description": "This method is used to delete records from database",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "of job type to delete",
                    "type": "Number"
                }
            ],
            "class": "JobTypeServices"
        },
        {
            "file": "src/app/route/jobtype/jobType.services.ts",
            "line": 72,
            "description": "Get all dropdown data from JobTypes",
            "itemtype": "method",
            "name": "getDropDown",
            "class": "JobTypeServices"
        },
        {
            "file": "src/app/route/jobtype/jobType.services.ts",
            "line": 80,
            "description": "Get all dropdown data from SubJobType",
            "itemtype": "method",
            "name": "getRfpSubJobType",
            "class": "JobTypeServices"
        },
        {
            "file": "src/app/route/jobtype/jobType.services.ts",
            "line": 88,
            "description": "Get all dropdown data from SubJob",
            "itemtype": "method",
            "name": "getRfpSubJob",
            "class": "JobTypeServices"
        },
        {
            "file": "src/app/route/jobtype/jobType.services.ts",
            "line": 96,
            "description": "Get all dropdown data from WorkTypeCategory",
            "itemtype": "method",
            "name": "getRfpWorkTypeCategory",
            "class": "JobTypeServices"
        },
        {
            "file": "src/app/route/licensetypes/licensetypesform/licensetypesform.component.ts",
            "line": 43,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "LicenseTypesForm"
        },
        {
            "file": "src/app/route/licensetypes/licensetypesform/licensetypesform.component.ts",
            "line": 74,
            "description": "This method is used to save record",
            "itemtype": "method",
            "name": "saveLicenseType",
            "class": "LicenseTypesForm"
        },
        {
            "file": "src/app/route/licensetypes/licensetypes.component.ts",
            "line": 23,
            "description": "Licensetypesform add/edit form",
            "itemtype": "property",
            "name": "Licensetypesform",
            "class": "LicenseTypesComponent"
        },
        {
            "file": "src/app/route/licensetypes/licensetypes.component.ts",
            "line": 67,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "LicenseTypesComponent"
        },
        {
            "file": "src/app/route/licensetypes/licensetypes.component.ts",
            "line": 123,
            "description": "This method will be destroy all elements and other values from whole module",
            "itemtype": "method",
            "name": "ngOnDestroy",
            "class": "LicenseTypesComponent"
        },
        {
            "file": "src/app/route/licensetypes/licensetypes.component.ts",
            "line": 132,
            "description": "This method is used for filter/search records from datatable",
            "itemtype": "method",
            "name": "searchLicenseTypes",
            "params": [
                {
                    "name": "srch",
                    "description": "type any which contains string that can be filtered from datatable",
                    "type": "String"
                }
            ],
            "class": "LicenseTypesComponent"
        },
        {
            "file": "src/app/route/licensetypes/licensetypes.component.ts",
            "line": 141,
            "description": "This method is used to open modal popup for openModalForm",
            "itemtype": "method",
            "name": "openModalForm",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                },
                {
                    "name": "isNew",
                    "description": "it is optional which contains true if it is new record and false when it is old record",
                    "type": "Boolean"
                }
            ],
            "class": "LicenseTypesComponent"
        },
        {
            "file": "src/app/route/licensetypes/licensetypes.component.ts",
            "line": 156,
            "description": "This method is used to reload datatable",
            "itemtype": "method",
            "name": "reload",
            "class": "LicenseTypesComponent"
        },
        {
            "file": "src/app/route/licensetypes/licensetypes.component.ts",
            "line": 165,
            "description": "This method is used to delete record",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "type which contains id to delete record",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "type which contains entire selected row",
                    "type": "Any"
                }
            ],
            "class": "LicenseTypesComponent"
        },
        {
            "file": "src/app/route/licensetypes/licensetypes.services.ts",
            "line": 20,
            "description": "Get all records from database in datatable format",
            "itemtype": "method",
            "name": "getRecords",
            "class": "LicenseTypesServices"
        },
        {
            "file": "src/app/route/licensetypes/licensetypes.services.ts",
            "line": 30,
            "description": "This method is used to create a new record in database",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                }
            ],
            "class": "LicenseTypesServices"
        },
        {
            "file": "src/app/route/licensetypes/licensetypes.services.ts",
            "line": 41,
            "description": "This method is used to update existing record in database",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "id of License Types for updating specific record",
                    "type": "Number"
                }
            ],
            "class": "LicenseTypesServices"
        },
        {
            "file": "src/app/route/licensetypes/licensetypes.services.ts",
            "line": 51,
            "description": "Get single record from database",
            "itemtype": "method",
            "name": "getById",
            "params": [
                {
                    "name": "id",
                    "description": "id of License Types for getting specific record",
                    "type": "Number"
                }
            ],
            "class": "LicenseTypesServices"
        },
        {
            "file": "src/app/route/licensetypes/licensetypes.services.ts",
            "line": 60,
            "description": "This method is used to delete records from database",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "of License Types to delete",
                    "type": "Number"
                }
            ],
            "class": "LicenseTypesServices"
        },
        {
            "file": "src/app/route/login/login.component.ts",
            "line": 31,
            "description": "This method define all services that requires in whole class",
            "itemtype": "method",
            "name": "constructor",
            "class": "LoginComponent"
        },
        {
            "file": "src/app/route/login/login.component.ts",
            "line": 44,
            "description": "This method login to the System",
            "itemtype": "method",
            "name": "login",
            "class": "LoginComponent"
        },
        {
            "file": "src/app/route/login/login.component.ts",
            "line": 83,
            "description": "This method set connection for notification",
            "itemtype": "method",
            "name": "setConnection",
            "class": "LoginComponent"
        },
        {
            "file": "src/app/route/notification/notification.component.ts",
            "line": 29,
            "description": "This method define all services that requires in whole class",
            "itemtype": "method",
            "name": "constructor",
            "class": "NotificationComponent"
        },
        {
            "file": "src/app/route/notification/notification.component.ts",
            "line": 43,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "NotificationComponent"
        },
        {
            "file": "src/app/route/notification/notification.component.ts",
            "line": 107,
            "description": "This method search notification from list",
            "itemtype": "method",
            "name": "searchNotification",
            "class": "NotificationComponent"
        },
        {
            "file": "src/app/route/notification/notification.component.ts",
            "line": 115,
            "description": "This method reload datatable",
            "itemtype": "method",
            "name": "reload",
            "class": "NotificationComponent"
        },
        {
            "file": "src/app/route/occupancyclassifications/occupancyclassificationsform/occupancyclassificationsform.component.ts",
            "line": 44,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "OccupancyClassificationsForm"
        },
        {
            "file": "src/app/route/occupancyclassifications/occupancyclassificationsform/occupancyclassificationsform.component.ts",
            "line": 76,
            "description": "This method is used to save record",
            "itemtype": "method",
            "name": "saveOccupancy",
            "params": [
                {
                    "name": "type",
                    "description": "request Object",
                    "type": "Data"
                }
            ],
            "class": "OccupancyClassificationsForm"
        },
        {
            "file": "src/app/route/occupancyclassifications/occupancyclassifications.component.services.ts",
            "line": 20,
            "description": "Get all records from database",
            "itemtype": "method",
            "name": "getRecords",
            "class": "OccupancyClassificationsServices"
        },
        {
            "file": "src/app/route/occupancyclassifications/occupancyclassifications.component.services.ts",
            "line": 30,
            "description": "This method is used to create a new record in database",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                }
            ],
            "class": "OccupancyClassificationsServices"
        },
        {
            "file": "src/app/route/occupancyclassifications/occupancyclassifications.component.services.ts",
            "line": 40,
            "description": "This method is used to update existing record in database",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "id of Occupancy Classifications for updating specific record",
                    "type": "Number"
                }
            ],
            "class": "OccupancyClassificationsServices"
        },
        {
            "file": "src/app/route/occupancyclassifications/occupancyclassifications.component.services.ts",
            "line": 50,
            "description": "Get single record from database",
            "itemtype": "method",
            "name": "getById",
            "params": [
                {
                    "name": "id",
                    "description": "id of Occupancy Classifications for getting specific record",
                    "type": "Number"
                }
            ],
            "class": "OccupancyClassificationsServices"
        },
        {
            "file": "src/app/route/occupancyclassifications/occupancyclassifications.component.services.ts",
            "line": 59,
            "description": "This method is used to delete records from database",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "of Occupancy Classifications to delete",
                    "type": "Number"
                }
            ],
            "class": "OccupancyClassificationsServices"
        },
        {
            "file": "src/app/route/occupancyclassifications/occupancyclassifications.component.ts",
            "line": 65,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "occupancyclassificationsform"
        },
        {
            "file": "src/app/route/occupancyclassifications/occupancyclassifications.component.ts",
            "line": 122,
            "description": "This method will be destroy all elements and other values from whole module",
            "itemtype": "method",
            "name": "ngOnDestroy",
            "class": "occupancyclassificationsform"
        },
        {
            "file": "src/app/route/occupancyclassifications/occupancyclassifications.component.ts",
            "line": 131,
            "description": "This method is used for filter/search records from datatable",
            "itemtype": "method",
            "name": "searchOccupancyClassification",
            "params": [
                {
                    "name": "srch",
                    "description": "type any which contains string that can be filtered from datatable",
                    "type": "String"
                }
            ],
            "class": "occupancyclassificationsform"
        },
        {
            "file": "src/app/route/occupancyclassifications/occupancyclassifications.component.ts",
            "line": 140,
            "description": "This method is used to open modal popup for openModalForm",
            "itemtype": "method",
            "name": "openModalForm",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                },
                {
                    "name": "isNew",
                    "description": "it is optional which contains true if it is new record and false when it is old record",
                    "type": "Boolean"
                }
            ],
            "class": "occupancyclassificationsform"
        },
        {
            "file": "src/app/route/occupancyclassifications/occupancyclassifications.component.ts",
            "line": 155,
            "description": "This method is used to reload datatable",
            "itemtype": "method",
            "name": "reload",
            "class": "occupancyclassificationsform"
        },
        {
            "file": "src/app/route/occupancyclassifications/occupancyclassifications.component.ts",
            "line": 163,
            "description": "This method is used to delete record",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "type which contains id to delete record",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "type which contains entire selected row",
                    "type": "Any"
                }
            ],
            "class": "occupancyclassificationsform"
        },
        {
            "file": "src/app/route/paneltycode/paneltycodeform/paneltycodeform.component.ts",
            "line": 40,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "PaneltyCodeformComponent"
        },
        {
            "file": "src/app/route/paneltycode/paneltycodeform/paneltycodeform.component.ts",
            "line": 59,
            "description": "This method is used to save record",
            "itemtype": "method",
            "name": "savePenaltyCode",
            "class": "PaneltyCodeformComponent"
        },
        {
            "file": "src/app/route/paneltycode/paneltycode.component.ts",
            "line": 26,
            "description": "Panelty Code add/edit form",
            "itemtype": "property",
            "name": "paneltycodeform",
            "class": "PaneltycodeComponent"
        },
        {
            "file": "src/app/route/paneltycode/paneltycode.component.ts",
            "line": 72,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "PaneltycodeComponent"
        },
        {
            "file": "src/app/route/paneltycode/paneltycode.component.ts",
            "line": 140,
            "description": "This method will be destroy all elements and other values from whole module",
            "itemtype": "method",
            "name": "ngOnDestroy",
            "class": "PaneltycodeComponent"
        },
        {
            "file": "src/app/route/paneltycode/paneltycode.component.ts",
            "line": 149,
            "description": "This method is used for filter/search records from datatable",
            "itemtype": "method",
            "name": "searchPenaltyCode",
            "params": [
                {
                    "name": "srch",
                    "description": "type any which contains string that can be filtered from datatable",
                    "type": "String"
                }
            ],
            "class": "PaneltycodeComponent"
        },
        {
            "file": "src/app/route/paneltycode/paneltycode.component.ts",
            "line": 158,
            "description": "This method is used to open modal popup for openModalForm",
            "itemtype": "method",
            "name": "openModalForm",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                },
                {
                    "name": "isNew",
                    "description": "it is optional which contains true if it is new record and false when it is old record",
                    "type": "Boolean"
                }
            ],
            "class": "PaneltycodeComponent"
        },
        {
            "file": "src/app/route/paneltycode/paneltycode.component.ts",
            "line": 173,
            "description": "This method is used to reload datatable",
            "itemtype": "method",
            "name": "reload",
            "class": "PaneltycodeComponent"
        },
        {
            "file": "src/app/route/paneltycode/paneltycode.component.ts",
            "line": 182,
            "description": "This method is used to delete record",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "type which contains id to delete record",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "type which contains entire selected row",
                    "type": "Any"
                }
            ],
            "class": "PaneltycodeComponent"
        },
        {
            "file": "src/app/route/paneltycode/penaltycode.services.ts",
            "line": 22,
            "description": "Get all records from database",
            "itemtype": "method",
            "name": "getAllPenaltyCode",
            "class": "PenaltyCodeServices"
        },
        {
            "file": "src/app/route/paneltycode/penaltycode.services.ts",
            "line": 32,
            "description": "This method is used to create a new record in database",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                }
            ],
            "class": "PenaltyCodeServices"
        },
        {
            "file": "src/app/route/paneltycode/penaltycode.services.ts",
            "line": 43,
            "description": "This method is used to update existing record in database",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "id of Penalty Code for updating specific record",
                    "type": "Number"
                }
            ],
            "class": "PenaltyCodeServices"
        },
        {
            "file": "src/app/route/paneltycode/penaltycode.services.ts",
            "line": 54,
            "description": "Get single record from database",
            "itemtype": "method",
            "name": "getById",
            "params": [
                {
                    "name": "id",
                    "description": "id of Penalty Code for getting specific record",
                    "type": "Number"
                }
            ],
            "class": "PenaltyCodeServices"
        },
        {
            "file": "src/app/route/paneltycode/penaltycode.services.ts",
            "line": 63,
            "description": "This method is used to delete records from database",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "of Penalty Code to delete",
                    "type": "Number"
                }
            ],
            "class": "PenaltyCodeServices"
        },
        {
            "file": "src/app/route/prefix/prefixform/prefixform.component.ts",
            "line": 41,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "PrefixformComponent"
        },
        {
            "file": "src/app/route/prefix/prefixform/prefixform.component.ts",
            "line": 60,
            "description": "This method is used to save record",
            "itemtype": "method",
            "name": "savePrefix",
            "class": "PrefixformComponent"
        },
        {
            "file": "src/app/route/prefix/prefix.component.ts",
            "line": 29,
            "description": "prefix add/edit form",
            "itemtype": "property",
            "name": "prefixform",
            "class": "PrefixComponent"
        },
        {
            "file": "src/app/route/prefix/prefix.component.ts",
            "line": 75,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "PrefixComponent"
        },
        {
            "file": "src/app/route/prefix/prefix.component.ts",
            "line": 133,
            "description": "This method will be destroy all elements and other values from whole module",
            "itemtype": "method",
            "name": "ngOnDestroy",
            "class": "PrefixComponent"
        },
        {
            "file": "src/app/route/prefix/prefix.component.ts",
            "line": 143,
            "description": "This method is used for filter/search records from datatable",
            "itemtype": "method",
            "name": "",
            "params": [
                {
                    "name": "srch",
                    "description": "type any which contains string that can be filtered from datatable",
                    "type": "String"
                }
            ],
            "class": "PrefixComponent"
        },
        {
            "file": "src/app/route/prefix/prefix.component.ts",
            "line": 152,
            "description": "This method is used to open modal popup for openModalForm",
            "itemtype": "method",
            "name": "openModalForm",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                },
                {
                    "name": "isNew",
                    "description": "it is optional which contains true if it is new record and false when it is old record",
                    "type": "Boolean"
                }
            ],
            "class": "PrefixComponent"
        },
        {
            "file": "src/app/route/prefix/prefix.component.ts",
            "line": 167,
            "description": "This method is used to reload datatable",
            "itemtype": "method",
            "name": "reload",
            "class": "PrefixComponent"
        },
        {
            "file": "src/app/route/prefix/prefix.component.ts",
            "line": 176,
            "description": "This method is used to delete record",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "type which contains id to delete record",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "type which contains entire selected row",
                    "type": "Any"
                }
            ],
            "class": "PrefixComponent"
        },
        {
            "file": "src/app/route/primarystructuralsystems/primarystructuralsystemsform/primarystructuralsystemsform.component.ts",
            "line": 43,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "PrimaryStructuralSystemsForm"
        },
        {
            "file": "src/app/route/primarystructuralsystems/primarystructuralsystemsform/primarystructuralsystemsform.component.ts",
            "line": 74,
            "description": "This method is used to save record",
            "itemtype": "method",
            "name": "save",
            "class": "PrimaryStructuralSystemsForm"
        },
        {
            "file": "src/app/route/primarystructuralsystems/primarystructuralsystems.component.ts",
            "line": 23,
            "description": "primarystructuralsystemsform add/edit form",
            "itemtype": "property",
            "name": "primarystructuralsystemsform",
            "class": "PrimaryStructuralSystemsComponent"
        },
        {
            "file": "src/app/route/primarystructuralsystems/primarystructuralsystems.component.ts",
            "line": 66,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "PrimaryStructuralSystemsComponent"
        },
        {
            "file": "src/app/route/primarystructuralsystems/primarystructuralsystems.component.ts",
            "line": 123,
            "description": "This method will be destroy all elements and other values from whole module",
            "itemtype": "method",
            "name": "ngOnDestroy",
            "class": "PrimaryStructuralSystemsComponent"
        },
        {
            "file": "src/app/route/primarystructuralsystems/primarystructuralsystems.component.ts",
            "line": 132,
            "description": "This method is used for filter/search records from datatable",
            "itemtype": "method",
            "name": "searchPrimaryStructuralSystems",
            "params": [
                {
                    "name": "srch",
                    "description": "type any which contains string that can be filtered from datatable",
                    "type": "String"
                }
            ],
            "class": "PrimaryStructuralSystemsComponent"
        },
        {
            "file": "src/app/route/primarystructuralsystems/primarystructuralsystems.component.ts",
            "line": 141,
            "description": "This method is used to open modal popup for openModalForm",
            "itemtype": "method",
            "name": "openModalForm",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                },
                {
                    "name": "isNew",
                    "description": "it is optional which contains true if it is new record and false when it is old record",
                    "type": "Boolean"
                }
            ],
            "class": "PrimaryStructuralSystemsComponent"
        },
        {
            "file": "src/app/route/primarystructuralsystems/primarystructuralsystems.component.ts",
            "line": 156,
            "description": "This method is used to reload datatable",
            "itemtype": "method",
            "name": "reload",
            "class": "PrimaryStructuralSystemsComponent"
        },
        {
            "file": "src/app/route/primarystructuralsystems/primarystructuralsystems.component.ts",
            "line": 165,
            "description": "This method is used to delete record",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "type which contains id to delete record",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "type which contains entire selected row",
                    "type": "Any"
                }
            ],
            "class": "PrimaryStructuralSystemsComponent"
        },
        {
            "file": "src/app/route/primarystructuralsystems/primarystructuralsystems.services.ts",
            "line": 21,
            "description": "Get all records from database in datatable format",
            "itemtype": "method",
            "name": "getRecords",
            "class": "PrimaryStructuralSystemsServices"
        },
        {
            "file": "src/app/route/primarystructuralsystems/primarystructuralsystems.services.ts",
            "line": 31,
            "description": "This method is used to create a new record in database",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                }
            ],
            "class": "PrimaryStructuralSystemsServices"
        },
        {
            "file": "src/app/route/primarystructuralsystems/primarystructuralsystems.services.ts",
            "line": 41,
            "description": "This method is used to update existing record in database",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "id of Primary structural system for updating specific record",
                    "type": "Number"
                }
            ],
            "class": "PrimaryStructuralSystemsServices"
        },
        {
            "file": "src/app/route/primarystructuralsystems/primarystructuralsystems.services.ts",
            "line": 51,
            "description": "Get single record from database",
            "itemtype": "method",
            "name": "getById",
            "params": [
                {
                    "name": "id",
                    "description": "id of Primary structural system for getting specific record",
                    "type": "Number"
                }
            ],
            "class": "PrimaryStructuralSystemsServices"
        },
        {
            "file": "src/app/route/primarystructuralsystems/primarystructuralsystems.services.ts",
            "line": 60,
            "description": "This method is used to delete records from database",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "of Primary structural system to delete",
                    "type": "Number"
                }
            ],
            "class": "PrimaryStructuralSystemsServices"
        },
        {
            "file": "src/app/route/primarystructuralsystems/primarystructuralsystems.services.ts",
            "line": 69,
            "description": "Get all records from database",
            "itemtype": "method",
            "name": "get",
            "class": "PrimaryStructuralSystemsServices"
        },
        {
            "file": "src/app/route/primarystructuralsystems/primarystructuralsystems.services.ts",
            "line": 77,
            "description": "Get all dropdown data from Primary Structural Systems",
            "itemtype": "method",
            "name": "getDropdown",
            "class": "PrimaryStructuralSystemsServices"
        },
        {
            "file": "src/app/route/progressionnote/addprogressionnote.component.ts",
            "line": 39,
            "description": "This method define all services that requires in whole class",
            "itemtype": "method",
            "name": "constructor",
            "class": "ProgressionNoteComponent"
        },
        {
            "file": "src/app/route/progressionnote/addprogressionnote.component.ts",
            "line": 54,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "ProgressionNoteComponent"
        },
        {
            "file": "src/app/route/progressionnote/addprogressionnote.component.ts",
            "line": 69,
            "description": "This method get progression note",
            "itemtype": "method",
            "name": "getProgressionNotes",
            "class": "ProgressionNoteComponent"
        },
        {
            "file": "src/app/route/progressionnote/addprogressionnote.component.ts",
            "line": 95,
            "description": "This method close popup for progression note",
            "itemtype": "method",
            "name": "closePopup",
            "class": "ProgressionNoteComponent"
        },
        {
            "file": "src/app/route/progressionnote/addprogressionnote.component.ts",
            "line": 111,
            "description": "This method save progression note",
            "itemtype": "method",
            "name": "saveProgressionNote",
            "class": "ProgressionNoteComponent"
        },
        {
            "file": "src/app/route/progressionnote/addprogressionnote.component.ts",
            "line": 128,
            "description": "This method add violation progression note",
            "itemtype": "method",
            "name": "addViolationPrgoressionNote",
            "class": "ProgressionNoteComponent"
        },
        {
            "file": "src/app/route/progressionnote/addprogressionnote.component.ts",
            "line": 144,
            "description": "This method add progression note for task",
            "itemtype": "method",
            "name": "addPrgoressionNote",
            "class": "ProgressionNoteComponent"
        },
        {
            "file": "src/app/route/reference/document/formDocument/formDocument.component.ts",
            "line": 27,
            "description": "This method define all services that requires in whole class",
            "itemtype": "method",
            "name": "constructor",
            "class": "FormDocumentComponent"
        },
        {
            "file": "src/app/route/reference/document/formDocument/formDocument.component.ts",
            "line": 39,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "FormDocumentComponent"
        },
        {
            "file": "src/app/route/reference/document/document.component.ts",
            "line": 58,
            "description": "This method define all services that requires in whole class",
            "itemtype": "method",
            "name": "constructor",
            "class": "DocumentComponent"
        },
        {
            "file": "src/app/route/reference/document/document.component.ts",
            "line": 91,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "DocumentComponent"
        },
        {
            "file": "src/app/route/reference/document/document.component.ts",
            "line": 147,
            "description": "This method calls when destroy component",
            "itemtype": "method",
            "name": "ngOnDestroy",
            "class": "DocumentComponent"
        },
        {
            "file": "src/app/route/reference/document/document.component.ts",
            "line": 156,
            "description": "This method open form popup for add/edit document",
            "itemtype": "method",
            "name": "openModal",
            "params": [
                {
                    "name": "template",
                    "description": "TemplateRef Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "ID of Document",
                    "type": "Number"
                }
            ],
            "class": "DocumentComponent"
        },
        {
            "file": "src/app/route/reference/document/document.component.ts",
            "line": 188,
            "description": "This method reload data table",
            "itemtype": "method",
            "name": "reload",
            "class": "DocumentComponent"
        },
        {
            "file": "src/app/route/reference/document/document.component.ts",
            "line": 197,
            "description": "This method delete document",
            "itemtype": "method",
            "name": "deleteDocument",
            "params": [
                {
                    "name": "d",
                    "description": "Document Object",
                    "type": "Document"
                }
            ],
            "class": "DocumentComponent"
        },
        {
            "file": "src/app/route/reference/document/document.component.ts",
            "line": 212,
            "description": "This method set selected file",
            "itemtype": "method",
            "name": "handleFileSelect",
            "params": [
                {
                    "name": "evt",
                    "description": "Event Object",
                    "type": "Any"
                }
            ],
            "class": "DocumentComponent"
        },
        {
            "file": "src/app/route/reference/document/document.component.ts",
            "line": 227,
            "description": "This method read file content",
            "itemtype": "method",
            "name": "_handleReaderLoaded",
            "params": [
                {
                    "name": "readerEvt",
                    "description": "Event Reader",
                    "type": "Any"
                }
            ],
            "class": "DocumentComponent"
        },
        {
            "file": "src/app/route/reference/document/document.component.ts",
            "line": 238,
            "description": "This method save document",
            "itemtype": "method",
            "name": "save",
            "class": "DocumentComponent"
        },
        {
            "file": "src/app/route/reference/document/document.component.ts",
            "line": 281,
            "description": "This method delete document",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "ID of Document",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "Document Row",
                    "type": "Any"
                }
            ],
            "class": "DocumentComponent"
        },
        {
            "file": "src/app/route/reference/document/document.component.ts",
            "line": 299,
            "description": "This method download the document",
            "itemtype": "method",
            "name": "getDocumentViaDownload",
            "params": [
                {
                    "name": "id",
                    "description": "ID of Document",
                    "type": "Number"
                }
            ],
            "class": "DocumentComponent"
        },
        {
            "file": "src/app/route/reference/document/document.component.ts",
            "line": 310,
            "description": "This method search document",
            "itemtype": "method",
            "name": "search",
            "params": [
                {
                    "name": "srch",
                    "description": "Search Criteria",
                    "type": "String"
                }
            ],
            "class": "DocumentComponent"
        },
        {
            "file": "src/app/route/reference/document/document.services.ts",
            "line": 19,
            "description": "This method gets document list for datatable",
            "itemtype": "method",
            "name": "get",
            "class": "DocumentServices"
        },
        {
            "file": "src/app/route/reference/document/document.services.ts",
            "line": 29,
            "description": "This method create record in database",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "data",
                    "description": "Document Object",
                    "type": "Any"
                }
            ],
            "class": "DocumentServices"
        },
        {
            "file": "src/app/route/reference/document/document.services.ts",
            "line": 38,
            "description": "This method update record in database",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "id",
                    "description": "ID of Document",
                    "type": "Number"
                },
                {
                    "name": "data",
                    "description": "Document Object",
                    "type": "Any"
                }
            ],
            "class": "DocumentServices"
        },
        {
            "file": "src/app/route/reference/document/document.services.ts",
            "line": 48,
            "description": "This method get record of document from database",
            "itemtype": "method",
            "name": "getById",
            "params": [
                {
                    "name": "id",
                    "description": "ID of Document",
                    "type": "Number"
                }
            ],
            "class": "DocumentServices"
        },
        {
            "file": "src/app/route/reference/document/document.services.ts",
            "line": 57,
            "description": "This method delete record from database",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "ID of Document",
                    "type": "Number"
                }
            ],
            "class": "DocumentServices"
        },
        {
            "file": "src/app/route/reference/document/document.services.ts",
            "line": 66,
            "description": "This method set status of document",
            "itemtype": "method",
            "name": "status",
            "params": [
                {
                    "name": "id",
                    "description": "ID of Document",
                    "type": "Number"
                },
                {
                    "name": "value",
                    "description": "Status Value",
                    "type": "Boolean"
                }
            ],
            "class": "DocumentServices"
        },
        {
            "file": "src/app/route/reminder/addreminder.component.ts",
            "line": 35,
            "description": "This method define all services that requires in whole class",
            "itemtype": "method",
            "name": "constructor",
            "class": "ReminderComponent"
        },
        {
            "file": "src/app/route/reminder/addreminder.component.ts",
            "line": 49,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "ReminderComponent"
        },
        {
            "file": "src/app/route/reminder/addreminder.component.ts",
            "line": 67,
            "description": "This method gets reminders from database",
            "itemtype": "method",
            "name": "getReminders",
            "class": "ReminderComponent"
        },
        {
            "file": "src/app/route/reminder/addreminder.component.ts",
            "line": 88,
            "description": "This method close popup",
            "itemtype": "method",
            "name": "closePopup",
            "class": "ReminderComponent"
        },
        {
            "file": "src/app/route/reminder/addreminder.component.ts",
            "line": 101,
            "description": "This method save Reminder",
            "itemtype": "method",
            "name": "saveReminder",
            "class": "ReminderComponent"
        },
        {
            "file": "src/app/route/rfp/emailHistory/emailHistory.component.ts",
            "line": 26,
            "description": "This method define all services that requires in whole class",
            "itemtype": "method",
            "name": "constructor",
            "class": "EmailHistoryComponent"
        },
        {
            "file": "src/app/route/rfp/emailHistory/emailHistory.component.ts",
            "line": 37,
            "description": "This method will be called once only when module is call for first time and load all records of email history",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "EmailHistoryComponent"
        },
        {
            "file": "src/app/route/rfp/sendEmail/sendEmail.component.ts",
            "line": 89,
            "description": "This method define all services that requires in whole class",
            "itemtype": "method",
            "name": "constructor",
            "class": "SendEmailComponent"
        },
        {
            "file": "src/app/route/rfp/sendEmail/sendEmail.component.ts",
            "line": 110,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "SendEmailComponent"
        },
        {
            "file": "src/app/route/rfp/sendEmail/sendEmail.component.ts",
            "line": 133,
            "description": "This method get all mail type list",
            "itemtype": "method",
            "name": "getmailTypes",
            "class": "SendEmailComponent"
        },
        {
            "file": "src/app/route/rfp/sendEmail/sendEmail.component.ts",
            "line": 153,
            "description": "This method get all mail via list",
            "itemtype": "method",
            "name": "getmailViaData",
            "class": "SendEmailComponent"
        },
        {
            "file": "src/app/route/rfp/sendEmail/sendEmail.component.ts",
            "line": 163,
            "description": "This method get all contacts list",
            "itemtype": "method",
            "name": "getContacts",
            "class": "SendEmailComponent"
        },
        {
            "file": "src/app/route/rfp/sendEmail/sendEmail.component.ts",
            "line": 212,
            "description": "This method get all Employee",
            "itemtype": "method",
            "name": "getAllEmployee",
            "class": "SendEmailComponent"
        },
        {
            "file": "src/app/route/rfp/sendEmail/sendEmail.component.ts",
            "line": 225,
            "description": "This method get all comapny list",
            "itemtype": "method",
            "name": "getCompanies",
            "class": "SendEmailComponent"
        },
        {
            "file": "src/app/route/rfp/sendEmail/sendEmail.component.ts",
            "line": 248,
            "description": "This method open popup for send email",
            "itemtype": "method",
            "name": "openModal",
            "params": [
                {
                    "name": "template",
                    "description": "",
                    "type": "TemplateRef"
                }
            ],
            "class": "SendEmailComponent"
        },
        {
            "file": "src/app/route/rfp/sendEmail/sendEmail.component.ts",
            "line": 262,
            "description": "This method open popup for fee schedule",
            "itemtype": "method",
            "name": "openModalFeeSchedule",
            "params": [
                {
                    "name": "template",
                    "description": "",
                    "type": "TemplateRef"
                }
            ],
            "class": "SendEmailComponent"
        },
        {
            "file": "src/app/route/rfp/sendEmail/sendEmail.component.ts",
            "line": 271,
            "description": "This method get RFP detail from IDRfp",
            "itemtype": "method",
            "name": "getRfpDetail",
            "class": "SendEmailComponent"
        },
        {
            "file": "src/app/route/rfp/sendEmail/sendEmail.component.ts",
            "line": 301,
            "description": "This method calls all master data",
            "itemtype": "method",
            "name": "loadAllMasterDD",
            "class": "SendEmailComponent"
        },
        {
            "file": "src/app/route/rfp/sendEmail/sendEmail.component.ts",
            "line": 312,
            "description": "This method set processing dots as per status",
            "itemtype": "method",
            "name": "getHeaderStatus",
            "params": [
                {
                    "name": "r",
                    "description": "RFP Response",
                    "type": "Any"
                }
            ],
            "class": "SendEmailComponent"
        },
        {
            "file": "src/app/route/rfp/sendEmail/sendEmail.component.ts",
            "line": 331,
            "description": "This method download RFP proposal PDF",
            "itemtype": "method",
            "name": "downloadPdf",
            "class": "SendEmailComponent"
        },
        {
            "file": "src/app/route/rfp/sendEmail/sendEmail.component.ts",
            "line": 342,
            "description": "This method Send E-mail while click on Send from Popup",
            "itemtype": "method",
            "name": "sendEmail",
            "class": "SendEmailComponent"
        },
        {
            "file": "src/app/route/rfp/sendEmail/sendEmail.component.ts",
            "line": 381,
            "description": "This method Call Email API as per module",
            "itemtype": "method",
            "name": "sendEmailApi",
            "params": [
                {
                    "name": "RfpMailData",
                    "description": "Data for Email",
                    "type": "Any"
                },
                {
                    "name": "module",
                    "description": "Module Name",
                    "type": "String"
                }
            ],
            "class": "SendEmailComponent"
        },
        {
            "file": "src/app/route/rfp/sendEmail/sendEmail.component.ts",
            "line": 421,
            "description": "This methos Upload Extra Document",
            "itemtype": "method",
            "name": "uploadDocumentsinDB",
            "params": [
                {
                    "name": "id",
                    "description": "RFpID",
                    "type": "Number"
                },
                {
                    "name": "module",
                    "description": "Module Name",
                    "type": "String"
                },
                {
                    "name": "idEmailHistory",
                    "description": "ID of Email History",
                    "type": "Number"
                }
            ],
            "class": "SendEmailComponent"
        },
        {
            "file": "src/app/route/rfp/sendEmail/sendEmail.component.ts",
            "line": 465,
            "description": "This method calls when document is attached",
            "itemtype": "method",
            "name": "documentUpload",
            "params": [
                {
                    "name": "evt",
                    "description": "Event Object",
                    "type": "Any"
                }
            ],
            "class": "SendEmailComponent"
        },
        {
            "file": "src/app/route/rfp/sendEmail/sendEmail.component.ts",
            "line": 486,
            "description": "This method delete document",
            "itemtype": "method",
            "name": "deleteDocument",
            "params": [
                {
                    "name": "d",
                    "description": "Document Object",
                    "type": "Any"
                }
            ],
            "class": "SendEmailComponent"
        },
        {
            "file": "src/app/route/rfp/sendEmail/sendEmail.component.ts",
            "line": 499,
            "description": "This method get email body when email template is change",
            "itemtype": "method",
            "name": "setEmailBody",
            "class": "SendEmailComponent"
        },
        {
            "file": "src/app/route/rfp/sendEmail/sendEmail.component.ts",
            "line": 514,
            "description": "This method calls when click on attention email body variable will replace",
            "itemtype": "method",
            "name": "changeEmailBody",
            "class": "SendEmailComponent"
        },
        {
            "file": "src/app/route/rfp/sendEmail/sendEmail.component.ts",
            "line": 522,
            "description": "This method replace email template variable with actual data",
            "itemtype": "method",
            "name": "replaceEmailBodyVariable",
            "params": [
                {
                    "name": "content",
                    "description": "Email Message Content",
                    "type": "Any"
                }
            ],
            "class": "SendEmailComponent"
        },
        {
            "file": "src/app/route/rfp/rfp.component.ts",
            "line": 27,
            "description": "Add Task Form",
            "itemtype": "property",
            "name": "addtask",
            "class": "RfpComponent"
        },
        {
            "file": "src/app/route/rfp/rfp.component.ts",
            "line": 34,
            "description": "Rfp Progression note form",
            "itemtype": "property",
            "name": "rfpprogressionnote",
            "class": "RfpComponent"
        },
        {
            "file": "src/app/route/rfp/rfp.component.ts",
            "line": 41,
            "description": "Send Email Form",
            "itemtype": "property",
            "name": "sendemail",
            "class": "RfpComponent"
        },
        {
            "file": "src/app/route/rfp/rfp.component.ts",
            "line": 48,
            "description": "Add/Edit Job Form",
            "itemtype": "property",
            "name": "formJob",
            "class": "RfpComponent"
        },
        {
            "file": "src/app/route/rfp/rfp.component.ts",
            "line": 76,
            "description": "This method define all services that requires in whole class",
            "itemtype": "method",
            "name": "constructor",
            "class": "RfpComponent"
        },
        {
            "file": "src/app/route/rfp/rfp.component.ts",
            "line": 93,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "RfpComponent"
        },
        {
            "file": "src/app/route/rfp/rfp.component.ts",
            "line": 102,
            "class": "RfpComponent"
        },
        {
            "file": "src/app/route/rfp/rfp.component.ts",
            "line": 116,
            "description": "This method set permission for rfp listing buttons",
            "itemtype": "method",
            "name": "permission",
            "params": [
                {
                    "name": "constantValues",
                    "description": "set of permissions",
                    "type": "Any"
                }
            ],
            "class": "RfpComponent"
        },
        {
            "file": "src/app/route/rfp/rfp.component.ts",
            "line": 155,
            "description": "This method will load datatable for RFP",
            "itemtype": "method",
            "name": "loadDataTable",
            "class": "RfpComponent"
        },
        {
            "file": "src/app/route/rfp/rfp.component.ts",
            "line": 313,
            "description": "This method get already linked job to display in step 5",
            "itemtype": "method",
            "name": "alreadyGetLinkedJob",
            "params": [
                {
                    "name": "idRfp",
                    "description": "ID of RFP",
                    "type": "Number"
                }
            ],
            "class": "RfpComponent"
        },
        {
            "file": "src/app/route/rfp/rfp.component.ts",
            "line": 326,
            "description": "This method will open popup for add Job",
            "itemtype": "method",
            "name": "openJobModal",
            "params": [
                {
                    "name": "template",
                    "description": "TemplateRef Object",
                    "type": "Any"
                }
            ],
            "class": "RfpComponent"
        },
        {
            "file": "src/app/route/rfp/rfp.component.ts",
            "line": 335,
            "description": "This method is used to redirect to first step",
            "itemtype": "method",
            "name": "redirectToAddRfp",
            "class": "RfpComponent"
        },
        {
            "file": "src/app/route/rfp/rfp.component.ts",
            "line": 343,
            "description": "This method decide step redirection based on last saved step",
            "itemtype": "method",
            "name": "onViewRFP",
            "params": [
                {
                    "name": "obj",
                    "description": "RFP Object",
                    "type": "Any"
                }
            ],
            "class": "RfpComponent"
        },
        {
            "file": "src/app/route/rfp/rfp.component.ts",
            "line": 364,
            "description": "This method will search in datatable",
            "itemtype": "method",
            "name": "search",
            "params": [
                {
                    "name": "srch",
                    "description": "Search Criteria",
                    "type": "String"
                }
            ],
            "class": "RfpComponent"
        },
        {
            "file": "src/app/route/rfp/rfp.component.ts",
            "line": 373,
            "description": "This method will open emailhistory page",
            "itemtype": "method",
            "name": "openMailHistory",
            "params": [
                {
                    "name": "idRfp",
                    "description": "ID of RFP",
                    "type": "Number"
                }
            ],
            "class": "RfpComponent"
        },
        {
            "file": "src/app/route/rfp/rfp.component.ts",
            "line": 382,
            "description": "This method will open popup for add task",
            "itemtype": "method",
            "name": "openModalFormAddTask",
            "params": [
                {
                    "name": "template",
                    "description": "TemplateRedf Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "ID of RFP",
                    "type": "Number"
                }
            ],
            "class": "RfpComponent"
        },
        {
            "file": "src/app/route/rfp/rfp.component.ts",
            "line": 392,
            "description": "This method will open popup for send email",
            "itemtype": "method",
            "name": "openModalSendEmail",
            "params": [
                {
                    "name": "template",
                    "description": "TemplateRedf Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "ID of RFP",
                    "type": "Number"
                }
            ],
            "class": "RfpComponent"
        },
        {
            "file": "src/app/route/rfp/rfp.services.ts",
            "line": 20,
            "description": "This method will get all records for RFP datatable",
            "itemtype": "method",
            "name": "getRecords",
            "class": "RfpListService"
        },
        {
            "file": "src/app/route/rfp/rfp.services.ts",
            "line": 30,
            "description": "This method will get all records for RFP datatable as per search criteria",
            "itemtype": "method",
            "name": "getRecordsWithSearch",
            "params": [
                {
                    "name": "search",
                    "description": "Search Criteria",
                    "type": "Any"
                }
            ],
            "class": "RfpListService"
        },
        {
            "file": "src/app/route/rfp/rfp.services.ts",
            "line": 41,
            "description": "This method get all records of RFP",
            "itemtype": "method",
            "name": "list",
            "class": "RfpListService"
        },
        {
            "file": "src/app/route/rfp/rfp.services.ts",
            "line": 49,
            "description": "This method will get record based on given ID",
            "itemtype": "method",
            "name": "getById",
            "params": [
                {
                    "name": "id",
                    "description": "ID of RFP",
                    "type": "Number"
                }
            ],
            "class": "RfpListService"
        },
        {
            "file": "src/app/route/rfp/rfp.services.ts",
            "line": 58,
            "description": "This method will get status of RFP",
            "itemtype": "method",
            "name": "getStatus",
            "params": [
                {
                    "name": "id",
                    "description": "ID of RFP",
                    "type": "Number"
                }
            ],
            "class": "RfpListService"
        },
        {
            "file": "src/app/route/rfp/rfp.services.ts",
            "line": 67,
            "description": "This method will get email history of RFP",
            "itemtype": "method",
            "name": "getEmailHistory",
            "params": [
                {
                    "name": "id",
                    "description": "ID of RFP",
                    "type": "Number"
                }
            ],
            "class": "RfpListService"
        },
        {
            "file": "src/app/route/rfp/rfp.services.ts",
            "line": 76,
            "description": "This method will get already linked Job",
            "itemtype": "method",
            "name": "alreadyGetLinkedJob",
            "params": [
                {
                    "name": "idRfp",
                    "description": "ID of RFP",
                    "type": "Number"
                }
            ],
            "class": "RfpListService"
        },
        {
            "file": "src/app/route/rfp/rfp.services.ts",
            "line": 85,
            "description": "This method will call when clone rfp is clicked for clone RFP",
            "itemtype": "method",
            "name": "cloneRfp",
            "params": [
                {
                    "name": "idRfp",
                    "description": "ID of RFP",
                    "type": "Number"
                }
            ],
            "class": "RfpListService"
        },
        {
            "file": "src/app/route/rfpprogressionnote/addrfpprogressionnote.component.ts",
            "line": 34,
            "description": "This method define all services that requires in whole class",
            "itemtype": "method",
            "name": "constructor",
            "class": "AddRfpProgressionNoteComponent"
        },
        {
            "file": "src/app/route/rfpprogressionnote/addrfpprogressionnote.component.ts",
            "line": 48,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "AddRfpProgressionNoteComponent"
        },
        {
            "file": "src/app/route/rfpprogressionnote/addrfpprogressionnote.component.ts",
            "line": 59,
            "description": "This method will get RFP progression note",
            "itemtype": "method",
            "name": "getAddRfpProgressionNote",
            "class": "AddRfpProgressionNoteComponent"
        },
        {
            "file": "src/app/route/rfpprogressionnote/addrfpprogressionnote.component.ts",
            "line": 78,
            "description": "This method is used to close popup",
            "itemtype": "method",
            "name": "closePopup",
            "class": "AddRfpProgressionNoteComponent"
        },
        {
            "file": "src/app/route/rfpprogressionnote/addrfpprogressionnote.component.ts",
            "line": 91,
            "description": "This method is used to save progression note",
            "itemtype": "method",
            "name": "saveProgressionNote",
            "class": "AddRfpProgressionNoteComponent"
        },
        {
            "file": "src/app/route/rfpprogressionnote/addrfpprogressionnote.services.ts",
            "line": 21,
            "description": "This method get progression notes list for datatable",
            "itemtype": "method",
            "name": "getRecords",
            "params": [
                {
                    "name": "cfg",
                    "description": "Search Criteria",
                    "type": "Any"
                }
            ],
            "class": "AddRfpProgressionNoteServices"
        },
        {
            "file": "src/app/route/rfpprogressionnote/addrfpprogressionnote.services.ts",
            "line": 32,
            "description": "This method create progression note",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "data",
                    "description": "Progression Note Object",
                    "type": "Any"
                }
            ],
            "class": "AddRfpProgressionNoteServices"
        },
        {
            "file": "src/app/route/rfpprogressionnote/addrfpprogressionnote.services.ts",
            "line": 42,
            "description": "This method update progression note",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "id",
                    "description": "ID of progression note",
                    "type": "Number"
                },
                {
                    "name": "data",
                    "description": "Progression Note Object",
                    "type": "Any"
                }
            ],
            "class": "AddRfpProgressionNoteServices"
        },
        {
            "file": "src/app/route/rfpprogressionnote/addrfpprogressionnote.services.ts",
            "line": 52,
            "description": "This method get progression note record for given id",
            "itemtype": "method",
            "name": "getById",
            "params": [
                {
                    "name": "id",
                    "description": "ID of progression note",
                    "type": "Number"
                }
            ],
            "class": "AddRfpProgressionNoteServices"
        },
        {
            "file": "src/app/route/rfpprogressionnote/addrfpprogressionnote.services.ts",
            "line": 61,
            "description": "This method delete progression note",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "ID of progression note",
                    "type": "Number"
                }
            ],
            "class": "AddRfpProgressionNoteServices"
        },
        {
            "file": "src/app/route/rfpprogressionnote/addrfpprogressionnote.services.ts",
            "line": 70,
            "description": "This method get rfp progression note",
            "itemtype": "method",
            "name": "getRfpNotes",
            "params": [
                {
                    "name": "id",
                    "description": "ID of progression note",
                    "type": "Number"
                }
            ],
            "class": "AddRfpProgressionNoteServices"
        },
        {
            "file": "src/app/route/rfpsubjobtype/formRfpSubJobType/formRfpSubJobType.component.ts",
            "line": 46,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "FormRfpSubJobType"
        },
        {
            "file": "src/app/route/rfpsubjobtype/formRfpSubJobType/formRfpSubJobType.component.ts",
            "line": 68,
            "description": "Get all dropdown data from getJobTypes",
            "itemtype": "method",
            "name": "getJobTypes",
            "class": "FormRfpSubJobType"
        },
        {
            "file": "src/app/route/rfpsubjobtype/formRfpSubJobType/formRfpSubJobType.component.ts",
            "line": 82,
            "description": "Get all dropdown data from getSubJobTypes",
            "itemtype": "method",
            "name": "getSubJobTypes",
            "class": "FormRfpSubJobType"
        },
        {
            "file": "src/app/route/rfpsubjobtype/formRfpSubJobType/formRfpSubJobType.component.ts",
            "line": 100,
            "description": "This method is used to save record",
            "itemtype": "method",
            "name": "saveRfpSubJobType",
            "class": "FormRfpSubJobType"
        },
        {
            "file": "src/app/route/rfpsubjobtype/rfpsubjobtype.component.ts",
            "line": 29,
            "description": "form add/edit form",
            "itemtype": "property",
            "name": "Form",
            "class": "RfpSubJobTypeComponent"
        },
        {
            "file": "src/app/route/rfpsubjobtype/rfpsubjobtype.component.ts",
            "line": 82,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "RfpSubJobTypeComponent"
        },
        {
            "file": "src/app/route/rfpsubjobtype/rfpsubjobtype.component.ts",
            "line": 151,
            "description": "This method is used to reload datatable",
            "itemtype": "method",
            "name": "reload",
            "class": "RfpSubJobTypeComponent"
        },
        {
            "file": "src/app/route/rfpsubjobtype/rfpsubjobtype.component.ts",
            "line": 161,
            "description": "This method is used to open modal popup for openModalForm",
            "itemtype": "method",
            "name": "openModalForm",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                },
                {
                    "name": "isNew",
                    "description": "it is optional which contains true if it is new record and false when it is old record",
                    "type": "Boolean"
                }
            ],
            "class": "RfpSubJobTypeComponent"
        },
        {
            "file": "src/app/route/rfpsubjobtype/rfpsubjobtype.component.ts",
            "line": 177,
            "description": "This method is used to delete record",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "type which contains id to delete record",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "type which contains entire selected row",
                    "type": "Any"
                }
            ],
            "class": "RfpSubJobTypeComponent"
        },
        {
            "file": "src/app/route/rfpsubjobtype/rfpsubjobtype.component.ts",
            "line": 195,
            "description": "This method is used for filter/search records from datatable",
            "itemtype": "method",
            "name": "searchSubJobTypeCategory",
            "params": [
                {
                    "name": "srch",
                    "description": "type any which contains string that can be filtered from datatable",
                    "type": "String"
                }
            ],
            "class": "RfpSubJobTypeComponent"
        },
        {
            "file": "src/app/route/rfpsubjobtype/rfpsubjobtype.services.ts",
            "line": 24,
            "description": "Get all records from database in datatable format",
            "itemtype": "method",
            "name": "getAllRfpSubJobTypes",
            "params": [
                {
                    "name": "cfg",
                    "description": "it is a string type which is used for filter data from data table",
                    "type": "String"
                }
            ],
            "class": "RfpSubJobTypeServices"
        },
        {
            "file": "src/app/route/rfpsubjobtype/rfpsubjobtype.services.ts",
            "line": 45,
            "description": "Get single record from database",
            "itemtype": "method",
            "name": "getById",
            "params": [
                {
                    "name": "id",
                    "description": "id of {{name}} for getting specific record",
                    "type": "Number"
                }
            ],
            "class": "RfpSubJobTypeServices"
        },
        {
            "file": "src/app/route/rfpsubjobtype/rfpsubjobtype.services.ts",
            "line": 54,
            "description": "This method is used to delete records from database",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "of {{name}} to delete",
                    "type": "Number"
                }
            ],
            "class": "RfpSubJobTypeServices"
        },
        {
            "file": "src/app/route/rfpsubjobtype/rfpsubjobtype.services.ts",
            "line": 63,
            "description": "Get all dropdown data from",
            "itemtype": "method",
            "name": "getDropDown",
            "class": "RfpSubJobTypeServices"
        },
        {
            "file": "src/app/route/seismicdesigncategories/seismicdesigncategoriesform/seismicdesigncategoriesform.component.ts",
            "line": 43,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "SeismicDesignCategoriesForm"
        },
        {
            "file": "src/app/route/seismicdesigncategories/seismicdesigncategoriesform/seismicdesigncategoriesform.component.ts",
            "line": 74,
            "description": "This method is used to save record",
            "itemtype": "method",
            "name": "saveSeismicDesign",
            "class": "SeismicDesignCategoriesForm"
        },
        {
            "file": "src/app/route/seismicdesigncategories/seismicdesigncategories.component.ts",
            "line": 23,
            "description": "seismicdesigncategoriesform add/edit form",
            "itemtype": "property",
            "name": "seismicdesigncategoriesform",
            "class": "SeismicDesignCategoriesComponent"
        },
        {
            "file": "src/app/route/seismicdesigncategories/seismicdesigncategories.component.ts",
            "line": 68,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "SeismicDesignCategoriesComponent"
        },
        {
            "file": "src/app/route/seismicdesigncategories/seismicdesigncategories.component.ts",
            "line": 125,
            "description": "This method will be destroy all elements and other values from whole module",
            "itemtype": "method",
            "name": "ngOnDestroy",
            "class": "SeismicDesignCategoriesComponent"
        },
        {
            "file": "src/app/route/seismicdesigncategories/seismicdesigncategories.component.ts",
            "line": 134,
            "description": "This method is used for filter/search records from datatable",
            "itemtype": "method",
            "name": "searchSeismicDesignCategories",
            "params": [
                {
                    "name": "srch",
                    "description": "type any which contains string that can be filtered from datatable",
                    "type": "String"
                }
            ],
            "class": "SeismicDesignCategoriesComponent"
        },
        {
            "file": "src/app/route/seismicdesigncategories/seismicdesigncategories.component.ts",
            "line": 143,
            "description": "This method is used to open modal popup for openModalForm",
            "itemtype": "method",
            "name": "openModalForm",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                },
                {
                    "name": "isNew",
                    "description": "it is optional which contains true if it is new record and false when it is old record",
                    "type": "Boolean"
                }
            ],
            "class": "SeismicDesignCategoriesComponent"
        },
        {
            "file": "src/app/route/seismicdesigncategories/seismicdesigncategories.component.ts",
            "line": 158,
            "description": "This method is used to reload datatable",
            "itemtype": "method",
            "name": "reload",
            "class": "SeismicDesignCategoriesComponent"
        },
        {
            "file": "src/app/route/seismicdesigncategories/seismicdesigncategories.component.ts",
            "line": 167,
            "description": "This method is used to delete record",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "type which contains id to delete record",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "type which contains entire selected row",
                    "type": "Any"
                }
            ],
            "class": "SeismicDesignCategoriesComponent"
        },
        {
            "file": "src/app/route/seismicdesigncategories/seismicdesigncategories.services.ts",
            "line": 21,
            "description": "Get all records from database in datatable format",
            "itemtype": "method",
            "name": "getRecords",
            "class": "SeismicDesignCategoriesServices"
        },
        {
            "file": "src/app/route/seismicdesigncategories/seismicdesigncategories.services.ts",
            "line": 31,
            "description": "This method is used to create a new record in database",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                }
            ],
            "class": "SeismicDesignCategoriesServices"
        },
        {
            "file": "src/app/route/seismicdesigncategories/seismicdesigncategories.services.ts",
            "line": 41,
            "description": "This method is used to update existing record in database",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "id of Seismic Design Categories for updating specific record",
                    "type": "Number"
                }
            ],
            "class": "SeismicDesignCategoriesServices"
        },
        {
            "file": "src/app/route/seismicdesigncategories/seismicdesigncategories.services.ts",
            "line": 51,
            "description": "Get single record from database",
            "itemtype": "method",
            "name": "getById",
            "params": [
                {
                    "name": "id",
                    "description": "id of Seismic Design Categories for getting specific record",
                    "type": "Number"
                }
            ],
            "class": "SeismicDesignCategoriesServices"
        },
        {
            "file": "src/app/route/seismicdesigncategories/seismicdesigncategories.services.ts",
            "line": 61,
            "description": "This method is used to delete records from database",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "of Seismic Design Categories to delete",
                    "type": "Number"
                }
            ],
            "class": "SeismicDesignCategoriesServices"
        },
        {
            "file": "src/app/route/seismicdesigncategories/seismicdesigncategories.services.ts",
            "line": 71,
            "description": "Get all records from database",
            "itemtype": "method",
            "name": "get",
            "class": "SeismicDesignCategoriesServices"
        },
        {
            "file": "src/app/route/seismicdesigncategories/seismicdesigncategories.services.ts",
            "line": 79,
            "description": "Get all dropdown data from Seismic Design Categories",
            "itemtype": "method",
            "name": "getDropdown",
            "class": "SeismicDesignCategoriesServices"
        },
        {
            "file": "src/app/route/sentvia/sentviaform/sentviaform.component.ts",
            "line": 45,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "SentviaformComponent"
        },
        {
            "file": "src/app/route/sentvia/sentviaform/sentviaform.component.ts",
            "line": 69,
            "description": "This method is used to get sentvia record",
            "itemtype": "method",
            "name": "getSentVia",
            "class": "SentviaformComponent"
        },
        {
            "file": "src/app/route/sentvia/sentviaform/sentviaform.component.ts",
            "line": 94,
            "description": "This method is used to save record",
            "itemtype": "method",
            "name": "save",
            "class": "SentviaformComponent"
        },
        {
            "file": "src/app/route/sentvia/sentviaform/sentviaform.component.ts",
            "line": 134,
            "description": "Get selected item from dropdown",
            "itemtype": "method",
            "name": "onItemSelect",
            "class": "SentviaformComponent"
        },
        {
            "file": "src/app/route/sentvia/sentviaform/sentviaform.component.ts",
            "line": 142,
            "description": "Deselect item from dropdown",
            "itemtype": "method",
            "name": "OnItemDeSelect",
            "class": "SentviaformComponent"
        },
        {
            "file": "src/app/route/sentvia/sentviaform/sentviaform.component.ts",
            "line": 150,
            "description": "all items are selected from dropdown",
            "itemtype": "method",
            "name": "onSelectAll",
            "class": "SentviaformComponent"
        },
        {
            "file": "src/app/route/sentvia/sentviaform/sentviaform.component.ts",
            "line": 159,
            "description": "all items are deselected from dropdown",
            "itemtype": "method",
            "name": "onDeSelectAll",
            "class": "SentviaformComponent"
        },
        {
            "file": "src/app/route/sentvia/sentviaform/sentviaform.component.ts",
            "line": 167,
            "description": "check whether mail is to be send to recipient",
            "itemtype": "method",
            "name": "isSendMailRecipient",
            "class": "SentviaformComponent"
        },
        {
            "file": "src/app/route/sentvia/sentvia.component.ts",
            "line": 23,
            "description": "sentviaform add/edit form",
            "itemtype": "property",
            "name": "sentviaform",
            "class": "SentviaComponent"
        },
        {
            "file": "src/app/route/sentvia/sentvia.component.ts",
            "line": 67,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "SentviaComponent"
        },
        {
            "file": "src/app/route/sentvia/sentvia.component.ts",
            "line": 139,
            "description": "This method will be destroy all elements and other values from whole module",
            "itemtype": "method",
            "name": "ngOnDestroy",
            "class": "SentviaComponent"
        },
        {
            "file": "src/app/route/sentvia/sentvia.component.ts",
            "line": 148,
            "description": "This method is used for filter/search records from datatable",
            "itemtype": "method",
            "name": "searchSentvia",
            "params": [
                {
                    "name": "srch",
                    "description": "type any which contains string that can be filtered from datatable",
                    "type": "String"
                }
            ],
            "class": "SentviaComponent"
        },
        {
            "file": "src/app/route/sentvia/sentvia.component.ts",
            "line": 157,
            "description": "This method is used to open modal popup for openModalForm",
            "itemtype": "method",
            "name": "openModalForm",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                },
                {
                    "name": "isNew",
                    "description": "it is optional which contains true if it is new record and false when it is old record",
                    "type": "Boolean"
                }
            ],
            "class": "SentviaComponent"
        },
        {
            "file": "src/app/route/sentvia/sentvia.component.ts",
            "line": 172,
            "description": "This method is used to reload datatable",
            "itemtype": "method",
            "name": "reload",
            "class": "SentviaComponent"
        },
        {
            "file": "src/app/route/sentvia/sentvia.component.ts",
            "line": 181,
            "description": "This method is used to delete record",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "type which contains id to delete record",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "type which contains entire selected row",
                    "type": "Any"
                }
            ],
            "class": "SentviaComponent"
        },
        {
            "file": "src/app/route/sentvia/sentvia.services.ts",
            "line": 20,
            "description": "Get all records from database in datatable format",
            "itemtype": "method",
            "name": "getRecords",
            "class": "SentviaServices"
        },
        {
            "file": "src/app/route/sentvia/sentvia.services.ts",
            "line": 30,
            "description": "This method is used to create a new record in database",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                }
            ],
            "class": "SentviaServices"
        },
        {
            "file": "src/app/route/sentvia/sentvia.services.ts",
            "line": 40,
            "description": "This method is used to update existing record in database",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "id of Sentvia for updating specific record",
                    "type": "Number"
                }
            ],
            "class": "SentviaServices"
        },
        {
            "file": "src/app/route/sentvia/sentvia.services.ts",
            "line": 50,
            "description": "Get single record from database",
            "itemtype": "method",
            "name": "getById",
            "params": [
                {
                    "name": "id",
                    "description": "id of Sentvia for getting specific record",
                    "type": "Number"
                }
            ],
            "class": "SentviaServices"
        },
        {
            "file": "src/app/route/sentvia/sentvia.services.ts",
            "line": 59,
            "description": "This method is used to delete records from database",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "of Sentvia to delete",
                    "type": "Number"
                }
            ],
            "class": "SentviaServices"
        },
        {
            "file": "src/app/route/states/statesform/statesform.component.ts",
            "line": 44,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "StatesForm"
        },
        {
            "file": "src/app/route/states/statesform/statesform.component.ts",
            "line": 75,
            "description": "This method is used to save record",
            "itemtype": "method",
            "name": "save",
            "class": "StatesForm"
        },
        {
            "file": "src/app/route/states/states.component.ts",
            "line": 25,
            "description": "statesform add/edit form",
            "itemtype": "property",
            "name": "Form",
            "class": "StatesComponent"
        },
        {
            "file": "src/app/route/states/states.component.ts",
            "line": 69,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "StatesComponent"
        },
        {
            "file": "src/app/route/states/states.component.ts",
            "line": 124,
            "description": "This method will be destroy all elements and other values from whole module",
            "itemtype": "method",
            "name": "ngOnDestroy",
            "class": "StatesComponent"
        },
        {
            "file": "src/app/route/states/states.component.ts",
            "line": 133,
            "description": "This method is used for filter/search records from datatable",
            "itemtype": "method",
            "name": "searchStates",
            "params": [
                {
                    "name": "srch",
                    "description": "type any which contains string that can be filtered from datatable",
                    "type": "String"
                }
            ],
            "class": "StatesComponent"
        },
        {
            "file": "src/app/route/states/states.component.ts",
            "line": 142,
            "description": "This method is used to open modal popup for openModalForm",
            "itemtype": "method",
            "name": "openModalForm",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                },
                {
                    "name": "isNew",
                    "description": "it is optional which contains true if it is new record and false when it is old record",
                    "type": "Boolean"
                }
            ],
            "class": "StatesComponent"
        },
        {
            "file": "src/app/route/states/states.component.ts",
            "line": 157,
            "description": "This method is used to reload datatable",
            "itemtype": "method",
            "name": "reload",
            "class": "StatesComponent"
        },
        {
            "file": "src/app/route/states/states.component.ts",
            "line": 166,
            "description": "This method is used to delete record",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "type which contains id to delete record",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "type which contains entire selected row",
                    "type": "Any"
                }
            ],
            "class": "StatesComponent"
        },
        {
            "file": "src/app/route/states/states.services.ts",
            "line": 21,
            "description": "Get all records from database in datatable format",
            "itemtype": "method",
            "name": "getRecords",
            "params": [
                {
                    "name": "cfg",
                    "description": "it is a string type which is used for filter data from data table",
                    "type": "String"
                }
            ],
            "class": "StatesServices"
        },
        {
            "file": "src/app/route/states/states.services.ts",
            "line": 32,
            "description": "This method is used to create a new record in database",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "States"
                }
            ],
            "class": "StatesServices"
        },
        {
            "file": "src/app/route/states/states.services.ts",
            "line": 42,
            "description": "This method is used to update existing record in database",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "id of state for updating specific record",
                    "type": "States"
                }
            ],
            "class": "StatesServices"
        },
        {
            "file": "src/app/route/states/states.services.ts",
            "line": 52,
            "description": "Get single record from database",
            "itemtype": "method",
            "name": "getById",
            "params": [
                {
                    "name": "id",
                    "description": "id of States for getting specific record",
                    "type": "Number"
                }
            ],
            "class": "StatesServices"
        },
        {
            "file": "src/app/route/states/states.services.ts",
            "line": 61,
            "description": "This method is used to delete records from database",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "of States to delete",
                    "type": "Number"
                }
            ],
            "class": "StatesServices"
        },
        {
            "file": "src/app/route/structureoccupancycategories/structureoccupancycategoriesform/structureoccupancycategoriesform.component.ts",
            "line": 43,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "StructureOccupancyCategoriesForm"
        },
        {
            "file": "src/app/route/structureoccupancycategories/structureoccupancycategoriesform/structureoccupancycategoriesform.component.ts",
            "line": 74,
            "description": "This method is used to save record",
            "itemtype": "method",
            "name": "saveStructure",
            "class": "StructureOccupancyCategoriesForm"
        },
        {
            "file": "src/app/route/structureoccupancycategories/structureoccupancycategories.component.ts",
            "line": 23,
            "description": "structureoccupancycategoriesform add/edit form",
            "itemtype": "property",
            "name": "structureoccupancycategoriesform",
            "class": "StructureOccupancyCategoriesComponent"
        },
        {
            "file": "src/app/route/structureoccupancycategories/structureoccupancycategories.component.ts",
            "line": 67,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "StructureOccupancyCategoriesComponent"
        },
        {
            "file": "src/app/route/structureoccupancycategories/structureoccupancycategories.component.ts",
            "line": 124,
            "description": "This method will be destroy all elements and other values from whole module",
            "itemtype": "method",
            "name": "ngOnDestroy",
            "class": "StructureOccupancyCategoriesComponent"
        },
        {
            "file": "src/app/route/structureoccupancycategories/structureoccupancycategories.component.ts",
            "line": 133,
            "description": "This method is used for filter/search records from datatable",
            "itemtype": "method",
            "name": "searchStructureOccupancyCategories",
            "params": [
                {
                    "name": "srch",
                    "description": "type any which contains string that can be filtered from datatable",
                    "type": "String"
                }
            ],
            "class": "StructureOccupancyCategoriesComponent"
        },
        {
            "file": "src/app/route/structureoccupancycategories/structureoccupancycategories.component.ts",
            "line": 142,
            "description": "This method is used to open modal popup for openModalForm",
            "itemtype": "method",
            "name": "openModalForm",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                },
                {
                    "name": "isNew",
                    "description": "it is optional which contains true if it is new record and false when it is old record",
                    "type": "Boolean"
                }
            ],
            "class": "StructureOccupancyCategoriesComponent"
        },
        {
            "file": "src/app/route/structureoccupancycategories/structureoccupancycategories.component.ts",
            "line": 157,
            "description": "This method is used to reload datatable",
            "itemtype": "method",
            "name": "reload",
            "class": "StructureOccupancyCategoriesComponent"
        },
        {
            "file": "src/app/route/structureoccupancycategories/structureoccupancycategories.component.ts",
            "line": 166,
            "description": "This method is used to delete record",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "type which contains id to delete record",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "type which contains entire selected row",
                    "type": "Any"
                }
            ],
            "class": "StructureOccupancyCategoriesComponent"
        },
        {
            "file": "src/app/route/structureoccupancycategories/structureoccupancycategories.services.ts",
            "line": 21,
            "description": "Get all records from database in datatable format",
            "itemtype": "method",
            "name": "getRecords",
            "class": "StructureOccupancyCategoriesServices"
        },
        {
            "file": "src/app/route/structureoccupancycategories/structureoccupancycategories.services.ts",
            "line": 31,
            "description": "This method is used to create a new record in database",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                }
            ],
            "class": "StructureOccupancyCategoriesServices"
        },
        {
            "file": "src/app/route/structureoccupancycategories/structureoccupancycategories.services.ts",
            "line": 41,
            "description": "This method is used to update existing record in database",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "id of Structure Occupancy Categories for updating specific record",
                    "type": "Number"
                }
            ],
            "class": "StructureOccupancyCategoriesServices"
        },
        {
            "file": "src/app/route/structureoccupancycategories/structureoccupancycategories.services.ts",
            "line": 51,
            "description": "Get single record from database",
            "itemtype": "method",
            "name": "getById",
            "params": [
                {
                    "name": "id",
                    "description": "id of Structure Occupancy Categories for getting specific record",
                    "type": "Number"
                }
            ],
            "class": "StructureOccupancyCategoriesServices"
        },
        {
            "file": "src/app/route/structureoccupancycategories/structureoccupancycategories.services.ts",
            "line": 61,
            "description": "This method is used to delete records from database",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "of Structure Occupancy Categories to delete",
                    "type": "Number"
                }
            ],
            "class": "StructureOccupancyCategoriesServices"
        },
        {
            "file": "src/app/route/structureoccupancycategories/structureoccupancycategories.services.ts",
            "line": 70,
            "description": "Get all records from database",
            "itemtype": "method",
            "name": "get",
            "class": "StructureOccupancyCategoriesServices"
        },
        {
            "file": "src/app/route/structureoccupancycategories/structureoccupancycategories.services.ts",
            "line": 78,
            "description": "Get all dropdown data from Structure Occupancy Categories",
            "itemtype": "method",
            "name": "getDropdown",
            "class": "StructureOccupancyCategoriesServices"
        },
        {
            "file": "src/app/route/subjobtypecategory/formSubJobTypeCategory/formSubJobTypeCategory.component.ts",
            "line": 45,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "FormSubJobTypeCategory"
        },
        {
            "file": "src/app/route/subjobtypecategory/formSubJobTypeCategory/formSubJobTypeCategory.component.ts",
            "line": 65,
            "description": "This method will be used for getting all job types",
            "itemtype": "method",
            "name": "getJobTypes",
            "class": "FormSubJobTypeCategory"
        },
        {
            "file": "src/app/route/subjobtypecategory/formSubJobTypeCategory/formSubJobTypeCategory.component.ts",
            "line": 79,
            "description": "This method is used to save record",
            "itemtype": "method",
            "name": "saveJobType",
            "params": [
                {
                    "name": "type",
                    "description": "request Object",
                    "type": "Data"
                }
            ],
            "class": "FormSubJobTypeCategory"
        },
        {
            "file": "src/app/route/subjobtypecategory/subjobtypecategory.component.ts",
            "line": 27,
            "description": "formSubJobTypeCategory add/edit form",
            "itemtype": "property",
            "name": "formSubJobTypeCategory",
            "class": "SubJobTypeCategoryComponent"
        },
        {
            "file": "src/app/route/subjobtypecategory/subjobtypecategory.component.ts",
            "line": 76,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "SubJobTypeCategoryComponent"
        },
        {
            "file": "src/app/route/subjobtypecategory/subjobtypecategory.component.ts",
            "line": 145,
            "description": "This method is used to reload datatable",
            "itemtype": "method",
            "name": "reload",
            "class": "SubJobTypeCategoryComponent"
        },
        {
            "file": "src/app/route/subjobtypecategory/subjobtypecategory.component.ts",
            "line": 154,
            "description": "This method is used to open modal popup for openModalForm",
            "itemtype": "method",
            "name": "openModalForm",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                },
                {
                    "name": "isNew",
                    "description": "it is optional which contains true if it is new record and false when it is old record",
                    "type": "Boolean"
                }
            ],
            "class": "SubJobTypeCategoryComponent"
        },
        {
            "file": "src/app/route/subjobtypecategory/subjobtypecategory.component.ts",
            "line": 170,
            "description": "This method is used to delete records from database",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "of {{name}} to delete",
                    "type": "Number"
                }
            ],
            "class": "SubJobTypeCategoryComponent"
        },
        {
            "file": "src/app/route/subjobtypecategory/subjobtypecategory.component.ts",
            "line": 187,
            "description": "This method is used for filter/search records from datatable",
            "itemtype": "method",
            "name": "searchSubJobTypeCategory",
            "params": [
                {
                    "name": "srch",
                    "description": "type any which contains string that can be filtered from datatable",
                    "type": "String"
                }
            ],
            "class": "SubJobTypeCategoryComponent"
        },
        {
            "file": "src/app/route/subjobtypecategory/subjobtypecategory.services.ts",
            "line": 21,
            "description": "Get all records from database in datatable format",
            "itemtype": "method",
            "name": "getAllSubJobTypesCategory",
            "class": "SubJobTypeCategoryServices"
        },
        {
            "file": "src/app/route/subjobtypecategory/subjobtypecategory.services.ts",
            "line": 32,
            "description": "This method is used to create a new record in database",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                }
            ],
            "class": "SubJobTypeCategoryServices"
        },
        {
            "file": "src/app/route/subjobtypecategory/subjobtypecategory.services.ts",
            "line": 42,
            "description": "This method is used to update existing record in database",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "id of {{name}} for updating specific record",
                    "type": "Number"
                }
            ],
            "class": "SubJobTypeCategoryServices"
        },
        {
            "file": "src/app/route/subjobtypecategory/subjobtypecategory.services.ts",
            "line": 53,
            "description": "Get single record from database",
            "itemtype": "method",
            "name": "getById",
            "params": [
                {
                    "name": "id",
                    "description": "id of {{name}} for getting specific record",
                    "type": "Number"
                }
            ],
            "class": "SubJobTypeCategoryServices"
        },
        {
            "file": "src/app/route/subjobtypecategory/subjobtypecategory.services.ts",
            "line": 62,
            "description": "This method is used to delete records from database",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "of {{name}} to delete",
                    "type": "Number"
                }
            ],
            "class": "SubJobTypeCategoryServices"
        },
        {
            "file": "src/app/route/subjobtypecategory/subjobtypecategory.services.ts",
            "line": 71,
            "description": "Get all dropdown data from SubJobTypeCategories",
            "itemtype": "method",
            "name": "getDropDown",
            "class": "SubJobTypeCategoryServices"
        },
        {
            "file": "src/app/route/suffix/suffixform/suffixform.component.ts",
            "line": 42,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "SuffixformComponent"
        },
        {
            "file": "src/app/route/suffix/suffixform/suffixform.component.ts",
            "line": 61,
            "description": "This method is used to save record",
            "itemtype": "method",
            "name": "saveSuffix",
            "class": "SuffixformComponent"
        },
        {
            "file": "src/app/route/suffix/suffix.component.ts",
            "line": 27,
            "description": "suffix add/edit form",
            "itemtype": "property",
            "name": "suffixform",
            "class": "SuffixComponent"
        },
        {
            "file": "src/app/route/suffix/suffix.component.ts",
            "line": 71,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "SuffixComponent"
        },
        {
            "file": "src/app/route/suffix/suffix.component.ts",
            "line": 130,
            "description": "This method will be destroy all elements and other values from whole module",
            "itemtype": "method",
            "name": "ngOnDestroy",
            "class": "SuffixComponent"
        },
        {
            "file": "src/app/route/suffix/suffix.component.ts",
            "line": 139,
            "description": "This method is used for filter/search records from datatable",
            "itemtype": "method",
            "name": "",
            "params": [
                {
                    "name": "srch",
                    "description": "type any which contains string that can be filtered from datatable",
                    "type": "String"
                }
            ],
            "class": "SuffixComponent"
        },
        {
            "file": "src/app/route/suffix/suffix.component.ts",
            "line": 149,
            "description": "This method is used to open modal popup for openModalForm",
            "itemtype": "method",
            "name": "openModalForm",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                },
                {
                    "name": "isNew",
                    "description": "it is optional which contains true if it is new record and false when it is old record",
                    "type": "Boolean"
                }
            ],
            "class": "SuffixComponent"
        },
        {
            "file": "src/app/route/suffix/suffix.component.ts",
            "line": 164,
            "description": "This method is used to reload datatable",
            "itemtype": "method",
            "name": "reload",
            "class": "SuffixComponent"
        },
        {
            "file": "src/app/route/suffix/suffix.component.ts",
            "line": 173,
            "description": "This method is used to delete record",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "type which contains id to delete record",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "type which contains entire selected row",
                    "type": "Any"
                }
            ],
            "class": "SuffixComponent"
        },
        {
            "file": "src/app/route/systemSettings/formOfSetting/systemsettingsForm.component.ts",
            "line": 44,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "SettingType"
        },
        {
            "file": "src/app/route/systemSettings/formOfSetting/systemsettingsForm.component.ts",
            "line": 69,
            "description": "This method is used to get all employess",
            "itemtype": "method",
            "name": "getEmployee",
            "class": "SettingType"
        },
        {
            "file": "src/app/route/systemSettings/formOfSetting/systemsettingsForm.component.ts",
            "line": 79,
            "description": "This method is used to save record",
            "itemtype": "method",
            "name": "saveSetting",
            "class": "SettingType"
        },
        {
            "file": "src/app/route/systemSettings/systemsettings.component.ts",
            "line": 29,
            "description": "SettingsType add/edit form",
            "itemtype": "property",
            "name": "SettingsType",
            "class": "SystemSettingsComponent"
        },
        {
            "file": "src/app/route/systemSettings/systemsettings.component.ts",
            "line": 58,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "SystemSettingsComponent"
        },
        {
            "file": "src/app/route/systemSettings/systemsettings.component.ts",
            "line": 131,
            "description": "This method is used to open modal popup for openModalForm",
            "itemtype": "method",
            "name": "openModalForm",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                }
            ],
            "class": "SystemSettingsComponent"
        },
        {
            "file": "src/app/route/systemSettings/systemsettings.component.ts",
            "line": 141,
            "description": "This method is used to reload datatable",
            "itemtype": "method",
            "name": "reload",
            "class": "SystemSettingsComponent"
        },
        {
            "file": "src/app/route/systemSettings/systemsettings.component.ts",
            "line": 150,
            "description": "This method will be destroy all elements and other values from whole module",
            "itemtype": "method",
            "name": "ngOnDestroy",
            "class": "SystemSettingsComponent"
        },
        {
            "file": "src/app/route/systemSettings/systemsettings.services.ts",
            "line": 21,
            "description": "Get all records from database in datatable format",
            "itemtype": "method",
            "name": "getTheSystemSettings",
            "class": "SystemSettingsServices"
        },
        {
            "file": "src/app/route/systemSettings/systemsettings.services.ts",
            "line": 31,
            "description": "Get single record from database",
            "itemtype": "method",
            "name": "getById",
            "params": [
                {
                    "name": "id",
                    "description": "id of System Settings for getting specific record",
                    "type": "Number"
                }
            ],
            "class": "SystemSettingsServices"
        },
        {
            "file": "src/app/route/systemSettings/systemsettings.services.ts",
            "line": 40,
            "description": "This method is used to update existing record in database",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "id of System Settings for updating specific record",
                    "type": "Number"
                }
            ],
            "class": "SystemSettingsServices"
        },
        {
            "file": "src/app/route/task/taskfilter/taskfilter.component.ts",
            "line": 51,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "TaskFilterComponent"
        },
        {
            "file": "src/app/route/task/taskfilter/taskfilter.component.ts",
            "line": 100,
            "description": "This method is used to check whether given object is empty or not",
            "itemtype": "method",
            "name": "isEmptyObject",
            "params": [
                {
                    "name": "obj",
                    "description": "obj which contains data",
                    "type": "Any"
                }
            ],
            "class": "TaskFilterComponent"
        },
        {
            "file": "src/app/route/task/taskfilter/taskfilter.component.ts",
            "line": 109,
            "description": "This method is used to close popup",
            "itemtype": "method",
            "name": "closePopup",
            "class": "TaskFilterComponent"
        },
        {
            "file": "src/app/route/task/taskfilter/taskfilter.component.ts",
            "line": 117,
            "description": "This method is used when dropdown should not close",
            "itemtype": "method",
            "name": "dropdownPropagation",
            "class": "TaskFilterComponent"
        },
        {
            "file": "src/app/route/task/taskfilter/taskfilter.component.ts",
            "line": 125,
            "description": "This method is used to clear advance search, i.e. task filter",
            "itemtype": "method",
            "name": "clearFilter",
            "class": "TaskFilterComponent"
        },
        {
            "file": "src/app/route/task/taskfilter/taskfilter.component.ts",
            "line": 135,
            "description": "This method is used to apply advance search, i.e. task filter and reload datatable",
            "itemtype": "method",
            "name": "applyFilter",
            "class": "TaskFilterComponent"
        },
        {
            "file": "src/app/route/task/taskfilter/taskfilter.component.ts",
            "line": 176,
            "description": "Get all records from database of task type",
            "itemtype": "method",
            "name": "getTaskType",
            "class": "TaskFilterComponent"
        },
        {
            "file": "src/app/route/task/taskfilter/taskfilter.component.ts",
            "line": 188,
            "description": "Get all records from database of task status",
            "itemtype": "method",
            "name": "getTaskSatus",
            "class": "TaskFilterComponent"
        },
        {
            "file": "src/app/route/task/taskfilter/taskfilter.component.ts",
            "line": 201,
            "description": "Get all records from database of employee",
            "itemtype": "method",
            "name": "getEmployees",
            "class": "TaskFilterComponent"
        },
        {
            "file": "src/app/route/task/taskfilter/taskfilter.component.ts",
            "line": 232,
            "description": "Get all records from database of Boroughs",
            "itemtype": "method",
            "name": "getBoroughs",
            "class": "TaskFilterComponent"
        },
        {
            "file": "src/app/route/task/taskfilter/taskfilter.component.ts",
            "line": 242,
            "description": "This method is used when task type is change for displaying appointment field in task form",
            "itemtype": "method",
            "name": "taskChange",
            "params": [
                {
                    "name": "e",
                    "description": "obj of evnet",
                    "type": "Any"
                },
                {
                    "name": "type",
                    "description": "type is used to indicate whether task is from job or not",
                    "type": "Any"
                }
            ],
            "class": "TaskFilterComponent"
        },
        {
            "file": "src/app/route/task/task.component.ts",
            "line": 32,
            "description": "taskfilter add/edit form",
            "itemtype": "property",
            "name": "taskfilter",
            "class": "TaskComponent"
        },
        {
            "file": "src/app/route/task/task.component.ts",
            "line": 39,
            "description": "addtask add/edit form",
            "itemtype": "property",
            "name": "addtask",
            "class": "TaskComponent"
        },
        {
            "file": "src/app/route/task/task.component.ts",
            "line": 46,
            "description": "progressionnote add/edit form",
            "itemtype": "property",
            "name": "progressionnote",
            "class": "TaskComponent"
        },
        {
            "file": "src/app/route/task/task.component.ts",
            "line": 53,
            "description": "reminder add form",
            "itemtype": "property",
            "name": "reminder",
            "class": "TaskComponent"
        },
        {
            "file": "src/app/route/task/task.component.ts",
            "line": 60,
            "description": "To view specific task",
            "itemtype": "property",
            "name": "viewtask",
            "class": "TaskComponent"
        },
        {
            "file": "src/app/route/task/task.component.ts",
            "line": 119,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "TaskComponent"
        },
        {
            "file": "src/app/route/task/task.component.ts",
            "line": 424,
            "description": "This method will be destroy all elements and other values from whole module",
            "itemtype": "method",
            "name": "ngOnDestroy",
            "class": "TaskComponent"
        },
        {
            "file": "src/app/route/task/task.component.ts",
            "line": 433,
            "description": "This method is used for filter/search records from datatable",
            "itemtype": "method",
            "name": "search",
            "params": [
                {
                    "name": "srch",
                    "description": "type any which contains string that can be filtered from datatable",
                    "type": "String"
                }
            ],
            "class": "TaskComponent"
        },
        {
            "file": "src/app/route/task/task.component.ts",
            "line": 442,
            "description": "This method is used to reload datatable",
            "itemtype": "method",
            "name": "reload",
            "class": "TaskComponent"
        },
        {
            "file": "src/app/route/task/task.component.ts",
            "line": 451,
            "description": "This method is used to open modal popup for openModalForm",
            "itemtype": "method",
            "name": "openModalForm",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                }
            ],
            "class": "TaskComponent"
        },
        {
            "file": "src/app/route/task/task.component.ts",
            "line": 464,
            "description": "This method is used to open modal popup for openModalFormView",
            "itemtype": "method",
            "name": "openModalFormView",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                }
            ],
            "class": "TaskComponent"
        },
        {
            "file": "src/app/route/task/task.component.ts",
            "line": 477,
            "description": "This method is used to open modal popup for openModalTaskFilter",
            "itemtype": "method",
            "name": "openModalTaskFilter",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                }
            ],
            "class": "TaskComponent"
        },
        {
            "file": "src/app/route/task/task.component.ts",
            "line": 490,
            "description": "This method is used to close popup",
            "itemtype": "method",
            "name": "closePopup",
            "class": "TaskComponent"
        },
        {
            "file": "src/app/route/task/task.component.ts",
            "line": 498,
            "description": "This method is used to reload datatable",
            "itemtype": "method",
            "name": "reloadSearch",
            "params": [
                {
                    "name": "filter",
                    "description": "filter parameter is used to reload datatable",
                    "type": "Any"
                }
            ],
            "class": "TaskComponent"
        },
        {
            "file": "src/app/route/task/task.component.ts",
            "line": 510,
            "description": "This method is used to delete record",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "type which contains id to delete record",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "type which contains entire selected row",
                    "type": "Any"
                }
            ],
            "class": "TaskComponent"
        },
        {
            "file": "src/app/route/task/task.services.ts",
            "line": 27,
            "description": "Get all records from database in datatable format",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "search",
                    "description": "it is a string type which is used for filter data from data table",
                    "type": "String"
                }
            ],
            "class": "TaskServices"
        },
        {
            "file": "src/app/route/task/task.services.ts",
            "line": 38,
            "description": "Get all records from database in datatable format",
            "itemtype": "method",
            "name": "getJobTasks",
            "params": [
                {
                    "name": "search",
                    "description": "it is a string type which is used for filter data from data table",
                    "type": "String"
                }
            ],
            "class": "TaskServices"
        },
        {
            "file": "src/app/route/task/task.services.ts",
            "line": 49,
            "description": "This method is used to delete records from database",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "of Task Type  to delete",
                    "type": "Number"
                }
            ],
            "class": "TaskServices"
        },
        {
            "file": "src/app/route/task/task.services.ts",
            "line": 58,
            "description": "Get all dropdown data from TaskType",
            "itemtype": "method",
            "name": "getTaskType",
            "class": "TaskServices"
        },
        {
            "file": "src/app/route/task/task.services.ts",
            "line": 66,
            "description": "Get all dropdown data from TaskStatus",
            "itemtype": "method",
            "name": "getTaskStatus",
            "class": "TaskServices"
        },
        {
            "file": "src/app/route/task/task.services.ts",
            "line": 74,
            "description": "This method is used to create/update existing record in database",
            "itemtype": "method",
            "name": "addorEditTask",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                },
                {
                    "name": "isNew",
                    "description": "it is used to indicate whether record is new or old",
                    "type": "Boolean"
                }
            ],
            "class": "TaskServices"
        },
        {
            "file": "src/app/route/task/task.services.ts",
            "line": 89,
            "description": "Get single record from database",
            "itemtype": "method",
            "name": "getTaskById",
            "params": [
                {
                    "name": "id",
                    "description": "id of Task Type  for getting specific record",
                    "type": "Number"
                }
            ],
            "class": "TaskServices"
        },
        {
            "file": "src/app/route/task/task.services.ts",
            "line": 98,
            "description": "This method is used to get progression note for specific task",
            "itemtype": "method",
            "name": "getProgressionNotes",
            "params": [
                {
                    "name": "idTask",
                    "description": "task id which is used to get progression note for specific task",
                    "type": "Number"
                }
            ],
            "class": "TaskServices"
        },
        {
            "file": "src/app/route/task/task.services.ts",
            "line": 107,
            "description": "This method is used to create a new progression note record in database",
            "itemtype": "method",
            "name": "createProgressionNote",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                }
            ],
            "class": "TaskServices"
        },
        {
            "file": "src/app/route/task/task.services.ts",
            "line": 117,
            "description": "This method is used to get all reminders for specific task",
            "itemtype": "method",
            "name": "getReminders",
            "params": [
                {
                    "name": "idTask",
                    "description": "task id which is used to get reminder for specific task",
                    "type": "Number"
                },
                {
                    "name": "IsMyReminder",
                    "description": "it is used to indicate whether reminder is for specific task or all reminders",
                    "type": "Boolean"
                }
            ],
            "class": "TaskServices"
        },
        {
            "file": "src/app/route/task/task.services.ts",
            "line": 127,
            "description": "This method is used to create a new reminder record in database",
            "itemtype": "method",
            "name": "setReminder",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                }
            ],
            "class": "TaskServices"
        },
        {
            "file": "src/app/route/task/task.services.ts",
            "line": 137,
            "description": "This method is used to get fee schedule master data in dropdown",
            "itemtype": "method",
            "name": "getFeeScheduleOptions",
            "params": [
                {
                    "name": "idJob",
                    "description": "job id is passed for specific job",
                    "type": "Number"
                }
            ],
            "class": "TaskServices"
        },
        {
            "file": "src/app/route/task/task.services.ts",
            "line": 146,
            "description": "This method is used to get list of additional servies that are not in scope in dropdown format",
            "itemtype": "method",
            "name": "getAdditionalServices",
            "class": "TaskServices"
        },
        {
            "file": "src/app/route/taskType/taskTypeForm/taskTypeForm.component.ts",
            "line": 41,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "TaskTypeForm"
        },
        {
            "file": "src/app/route/taskType/taskTypeForm/taskTypeForm.component.ts",
            "line": 63,
            "description": "This method is used to save record",
            "itemtype": "method",
            "name": "saveTaskType",
            "class": "TaskTypeForm"
        },
        {
            "file": "src/app/route/taskType/taskType.component.ts",
            "line": 23,
            "description": "addTaskTypeForm add/edit form",
            "itemtype": "property",
            "name": "addTaskTypeForm",
            "class": "TaskTypeComponent"
        },
        {
            "file": "src/app/route/taskType/taskType.component.ts",
            "line": 68,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "TaskTypeComponent"
        },
        {
            "file": "src/app/route/taskType/taskType.component.ts",
            "line": 125,
            "description": "This method will be destroy all elements and other values from whole module",
            "itemtype": "method",
            "name": "ngOnDestroy",
            "class": "TaskTypeComponent"
        },
        {
            "file": "src/app/route/taskType/taskType.component.ts",
            "line": 134,
            "description": "This method is used for filter/search records from datatable",
            "itemtype": "method",
            "name": "searchTaskType",
            "params": [
                {
                    "name": "srch",
                    "description": "type any which contains string that can be filtered from datatable",
                    "type": "String"
                }
            ],
            "class": "TaskTypeComponent"
        },
        {
            "file": "src/app/route/taskType/taskType.component.ts",
            "line": 143,
            "description": "This method is used to open modal popup for openModalForm",
            "itemtype": "method",
            "name": "openModalForm",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                },
                {
                    "name": "isNew",
                    "description": "it is optional which contains true if it is new record and false when it is old record",
                    "type": "Boolean"
                }
            ],
            "class": "TaskTypeComponent"
        },
        {
            "file": "src/app/route/taskType/taskType.component.ts",
            "line": 158,
            "description": "This method is used to reload datatable",
            "itemtype": "method",
            "name": "reload",
            "class": "TaskTypeComponent"
        },
        {
            "file": "src/app/route/taskType/taskType.component.ts",
            "line": 167,
            "description": "This method is used to delete record",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "type which contains id to delete record",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "type which contains entire selected row",
                    "type": "Any"
                }
            ],
            "class": "TaskTypeComponent"
        },
        {
            "file": "src/app/route/taskType/taskType.services.ts",
            "line": 20,
            "description": "Get all records from database in datatable format",
            "itemtype": "method",
            "name": "getRecords",
            "class": "TaskTypeServices"
        },
        {
            "file": "src/app/route/taskType/taskType.services.ts",
            "line": 30,
            "description": "This method is used to create a new record in database",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                }
            ],
            "class": "TaskTypeServices"
        },
        {
            "file": "src/app/route/taskType/taskType.services.ts",
            "line": 40,
            "description": "This method is used to update existing record in database",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "id of Task Type for updating specific record",
                    "type": "Number"
                }
            ],
            "class": "TaskTypeServices"
        },
        {
            "file": "src/app/route/taskType/taskType.services.ts",
            "line": 50,
            "description": "Get single record from database",
            "itemtype": "method",
            "name": "getById",
            "params": [
                {
                    "name": "id",
                    "description": "id of Task Type for getting specific record",
                    "type": "Number"
                }
            ],
            "class": "TaskTypeServices"
        },
        {
            "file": "src/app/route/taskType/taskType.services.ts",
            "line": 59,
            "description": "This method is used to delete records from database",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "of Task Type to delete",
                    "type": "Number"
                }
            ],
            "class": "TaskTypeServices"
        },
        {
            "file": "src/app/route/userGroup/userGroup.component.ts",
            "line": 26,
            "description": "formUserGroup add/edit form",
            "itemtype": "property",
            "name": "formUserGroup",
            "class": "UserGroupComponent"
        },
        {
            "file": "src/app/route/userGroup/userGroup.component.ts",
            "line": 33,
            "description": "permissionUsergroup add/edit form",
            "itemtype": "property",
            "name": "permissionUsergroup",
            "class": "UserGroupComponent"
        },
        {
            "file": "src/app/route/userGroup/userGroup.component.ts",
            "line": 72,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "UserGroupComponent"
        },
        {
            "file": "src/app/route/userGroup/userGroup.component.ts",
            "line": 143,
            "description": "This method will be destroy all elements and other values from whole module",
            "itemtype": "method",
            "name": "ngOnDestroy",
            "class": "UserGroupComponent"
        },
        {
            "file": "src/app/route/userGroup/userGroup.component.ts",
            "line": 152,
            "description": "This method is used to open modal popup for openModalForm",
            "itemtype": "method",
            "name": "openModalForm",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                },
                {
                    "name": "modeType",
                    "description": "it is optional which indicates whether record is new or old",
                    "type": "Any"
                }
            ],
            "class": "UserGroupComponent"
        },
        {
            "file": "src/app/route/userGroup/userGroup.component.ts",
            "line": 199,
            "description": "This method is used to reload datatable",
            "itemtype": "method",
            "name": "reload",
            "class": "UserGroupComponent"
        },
        {
            "file": "src/app/route/userGroup/userGroup.component.ts",
            "line": 208,
            "description": "This method is used to save record",
            "itemtype": "method",
            "name": "save",
            "class": "UserGroupComponent"
        },
        {
            "file": "src/app/route/userGroup/userGroup.component.ts",
            "line": 241,
            "description": "This method is used to delete record",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "type which contains id to delete record",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "type which contains entire selected row",
                    "type": "Any"
                }
            ],
            "class": "UserGroupComponent"
        },
        {
            "file": "src/app/route/userGroup/userGroup.services.ts",
            "line": 18,
            "description": "Get all records from database in datatable format",
            "itemtype": "method",
            "name": "get",
            "class": "UserGroup"
        },
        {
            "file": "src/app/route/userGroup/userGroup.services.ts",
            "line": 27,
            "description": "This method is used to create a new record in database",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                }
            ],
            "class": "UserGroup"
        },
        {
            "file": "src/app/route/userGroup/userGroup.services.ts",
            "line": 36,
            "description": "This method is used to update existing record in database",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "id of User Group for updating specific record",
                    "type": "Number"
                }
            ],
            "class": "UserGroup"
        },
        {
            "file": "src/app/route/userGroup/userGroup.services.ts",
            "line": 46,
            "description": "Get single record from database",
            "itemtype": "method",
            "name": "getById",
            "params": [
                {
                    "name": "id",
                    "description": "id of User Group for getting specific record",
                    "type": "Number"
                }
            ],
            "class": "UserGroup"
        },
        {
            "file": "src/app/route/userGroup/userGroup.services.ts",
            "line": 55,
            "description": "This method is used to delete records from database",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "of User Group to delete",
                    "type": "Number"
                }
            ],
            "class": "UserGroup"
        },
        {
            "file": "src/app/route/userGroup/userGroup.services.ts",
            "line": 64,
            "description": "This method is used to update status of user group",
            "itemtype": "method",
            "name": "status",
            "params": [
                {
                    "name": "id",
                    "description": "id of User Group for getting specific record",
                    "type": "Number"
                },
                {
                    "name": "value",
                    "description": "value as to check whether user group is active or in-active",
                    "type": "Boolean"
                }
            ],
            "class": "UserGroup"
        },
        {
            "file": "src/app/route/userGroup/userGroup.services.ts",
            "line": 78,
            "description": "Get all records from database",
            "itemtype": "method",
            "name": "getPermissions",
            "class": "UserGroup"
        },
        {
            "file": "src/app/route/verbiages/verbiages.component.ts",
            "line": 52,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "VerbiagesComponent"
        },
        {
            "file": "src/app/route/verbiages/verbiages.component.ts",
            "line": 166,
            "description": "This method will be destroy all elements and other values from whole module",
            "itemtype": "method",
            "name": "ngOnDestroy",
            "class": "VerbiagesComponent"
        },
        {
            "file": "src/app/route/verbiages/verbiages.component.ts",
            "line": 175,
            "description": "This method is used to reload datatable",
            "itemtype": "method",
            "name": "reload",
            "class": "VerbiagesComponent"
        },
        {
            "file": "src/app/route/verbiages/verbiages.component.ts",
            "line": 184,
            "description": "This method is used to open modal popup for openModalForm",
            "itemtype": "method",
            "name": "openModalForm",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                }
            ],
            "class": "VerbiagesComponent"
        },
        {
            "file": "src/app/route/verbiages/verbiages.component.ts",
            "line": 212,
            "description": "This method is used to save record",
            "itemtype": "method",
            "name": "save",
            "class": "VerbiagesComponent"
        },
        {
            "file": "src/app/route/verbiages/verbiages.component.ts",
            "line": 237,
            "description": "This method is used to delete record",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "type which contains id to delete record",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "type which contains entire selected row",
                    "type": "Any"
                }
            ],
            "class": "VerbiagesComponent"
        },
        {
            "file": "src/app/route/verbiages/verbiages.services.ts",
            "line": 20,
            "description": "Get all records from database in datatable format",
            "itemtype": "method",
            "name": "get",
            "class": "VerbiagesServices"
        },
        {
            "file": "src/app/route/verbiages/verbiages.services.ts",
            "line": 30,
            "description": "This method is used to create a new record in database",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                }
            ],
            "class": "VerbiagesServices"
        },
        {
            "file": "src/app/route/verbiages/verbiages.services.ts",
            "line": 39,
            "description": "This method is used to update existing record in database",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "id of verbiage for updating specific record",
                    "type": "Number"
                }
            ],
            "class": "VerbiagesServices"
        },
        {
            "file": "src/app/route/verbiages/verbiages.services.ts",
            "line": 50,
            "description": "Get single record from database",
            "itemtype": "method",
            "name": "getById",
            "params": [
                {
                    "name": "id",
                    "description": "id of verbiage for getting specific record",
                    "type": "Number"
                }
            ],
            "class": "VerbiagesServices"
        },
        {
            "file": "src/app/route/verbiages/verbiages.services.ts",
            "line": 59,
            "description": "This method is used to delete records from database",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "of verbiage to delete",
                    "type": "Number"
                }
            ],
            "class": "VerbiagesServices"
        },
        {
            "file": "src/app/route/verbiages/verbiages.services.ts",
            "line": 68,
            "description": "This method is used to update status in database",
            "itemtype": "method",
            "name": "status",
            "params": [
                {
                    "name": "id",
                    "description": "of verbiage to update record",
                    "type": "Number"
                },
                {
                    "name": "value",
                    "description": "of verbiage to update status",
                    "type": "Boolean"
                }
            ],
            "class": "VerbiagesServices"
        },
        {
            "file": "src/app/route/viewAddress/viewAddress.component.ts",
            "line": 27,
            "description": "This method define all services that requires in whole class",
            "itemtype": "method",
            "name": "constructor",
            "class": "ViewAddressComponent"
        },
        {
            "file": "src/app/route/viewAddress/viewAddress.component.ts",
            "line": 39,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "ViewAddressComponent"
        },
        {
            "file": "src/app/route/viewAddress/viewAddress.services.ts",
            "line": 20,
            "description": "This method will get address based on ID",
            "itemtype": "method",
            "name": "getByIdRfpAddress",
            "params": [
                {
                    "name": "addressId",
                    "description": "ID of Address",
                    "type": "Any"
                }
            ],
            "class": "ViewAddressServices"
        },
        {
            "file": "src/app/route/viewtask/viewtask.component.ts",
            "line": 55,
            "description": "This method define all services that requires in whole class",
            "itemtype": "method",
            "name": "constructor",
            "class": "ViewTaskComponent"
        },
        {
            "file": "src/app/route/viewtask/viewtask.component.ts",
            "line": 75,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "ViewTaskComponent"
        },
        {
            "file": "src/app/route/viewtask/viewtask.component.ts",
            "line": 95,
            "description": "This method is used to close popup",
            "itemtype": "method",
            "name": "closePopup",
            "class": "ViewTaskComponent"
        },
        {
            "file": "src/app/route/viewtask/viewtask.component.ts",
            "line": 103,
            "description": "This method is used to redirect job deail",
            "itemtype": "method",
            "name": "redirectJobDetail",
            "class": "ViewTaskComponent"
        },
        {
            "file": "src/app/route/worktype/formWorkType/formWorkType.component.ts",
            "line": 64,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "FormWorkType"
        },
        {
            "file": "src/app/route/worktype/formWorkType/formWorkType.component.ts",
            "line": 100,
            "description": "This method is used to get all work type based on id",
            "itemtype": "method",
            "name": "getWorkTypeById",
            "class": "FormWorkType"
        },
        {
            "file": "src/app/route/worktype/formWorkType/formWorkType.component.ts",
            "line": 135,
            "description": "This method is used to get all job types",
            "itemtype": "method",
            "name": "getJobTypes",
            "class": "FormWorkType"
        },
        {
            "file": "src/app/route/worktype/formWorkType/formWorkType.component.ts",
            "line": 149,
            "description": "This method is used to get sub job type category",
            "itemtype": "method",
            "name": "getSubJobTypesCagetory",
            "params": [
                {
                    "name": "idJobType",
                    "description": "idJobType as number",
                    "type": "Number"
                },
                {
                    "name": "isNew",
                    "description": "is used to check whether record is new or old",
                    "type": "Boolean"
                }
            ],
            "class": "FormWorkType"
        },
        {
            "file": "src/app/route/worktype/formWorkType/formWorkType.component.ts",
            "line": 194,
            "description": "This method is used to get sub job type category",
            "itemtype": "method",
            "name": "getSubJobTypesCagetory",
            "params": [
                {
                    "name": "idRfpSubJobTypeCategory",
                    "description": "idRfpSubJobTypeCategory as number for getting sub job type category",
                    "type": "Number"
                },
                {
                    "name": "isNew",
                    "description": "is used to check whether record is new or old",
                    "type": "Boolean"
                }
            ],
            "class": "FormWorkType"
        },
        {
            "file": "src/app/route/worktype/formWorkType/formWorkType.component.ts",
            "line": 227,
            "description": "This method is used to get work type category",
            "itemtype": "method",
            "name": "getSubJobTypesCagetory",
            "params": [
                {
                    "name": "idRfpWorkTypeCategory",
                    "description": "idRfpWorkTypeCategory as number for getting work type category",
                    "type": "Number"
                },
                {
                    "name": "isNew",
                    "description": "is used to check whether record is new or old",
                    "type": "Boolean"
                }
            ],
            "class": "FormWorkType"
        },
        {
            "file": "src/app/route/worktype/formWorkType/formWorkType.component.ts",
            "line": 249,
            "description": "This method is used to get all job types",
            "itemtype": "method",
            "name": "isDecimal",
            "params": [
                {
                    "name": "evt",
                    "description": "event that occurs when key press",
                    "type": "Any"
                },
                {
                    "name": "isNew",
                    "description": "is used to check whether record is new or old",
                    "type": "Boolean"
                }
            ],
            "class": "FormWorkType"
        },
        {
            "file": "src/app/route/worktype/formWorkType/formWorkType.component.ts",
            "line": 270,
            "description": "This method is used to get selection on start",
            "itemtype": "method",
            "name": "getSelectionStart",
            "params": [
                {
                    "name": "o",
                    "description": "event that occurs when key press",
                    "type": "Any"
                }
            ],
            "class": "FormWorkType"
        },
        {
            "file": "src/app/route/worktype/formWorkType/formWorkType.component.ts",
            "line": 280,
            "description": "This method is used to calculate cost when cost type is changed",
            "itemtype": "method",
            "name": "costTypeChange",
            "class": "FormWorkType"
        },
        {
            "file": "src/app/route/worktype/formWorkType/formWorkType.component.ts",
            "line": 315,
            "description": "This method is used to add new range for specific cost",
            "itemtype": "method",
            "name": "addNewRange",
            "class": "FormWorkType"
        },
        {
            "file": "src/app/route/worktype/formWorkType/formWorkType.component.ts",
            "line": 339,
            "description": "This method is used to remove exsiting range",
            "itemtype": "method",
            "name": "removeRange",
            "params": [
                {
                    "name": "index",
                    "description": "index is used to indicate which record in array",
                    "type": "Number"
                }
            ],
            "class": "FormWorkType"
        },
        {
            "file": "src/app/route/worktype/formWorkType/formWorkType.component.ts",
            "line": 349,
            "description": "This method is used to add cumulative cost when cost type is cumulative",
            "itemtype": "method",
            "name": "addNewCumulative",
            "params": [
                {
                    "name": "isNew",
                    "description": "it is optional used to check whether record is new or old",
                    "type": "Boolean"
                },
                {
                    "name": "id",
                    "description": "it is optional used to get previous array id",
                    "type": "Number"
                }
            ],
            "class": "FormWorkType"
        },
        {
            "file": "src/app/route/worktype/formWorkType/formWorkType.component.ts",
            "line": 381,
            "description": "This method is used to remove exsiting cumulative",
            "itemtype": "method",
            "name": "removeCumulative",
            "params": [
                {
                    "name": "index",
                    "description": "index is used to indicate which record in array",
                    "type": "Number"
                }
            ],
            "class": "FormWorkType"
        },
        {
            "file": "src/app/route/worktype/formWorkType/formWorkType.component.ts",
            "line": 392,
            "description": "This method is used to save record",
            "itemtype": "method",
            "name": "saveWorkType",
            "class": "FormWorkType"
        },
        {
            "file": "src/app/route/worktype/formWorkType/formWorkType.component.ts",
            "line": 437,
            "description": "This method is used to check whether entered value is min or max",
            "itemtype": "method",
            "name": "CheckMinMax",
            "params": [
                {
                    "name": "item",
                    "description": "the item which need to compare",
                    "type": "Any"
                }
            ],
            "class": "FormWorkType"
        },
        {
            "file": "src/app/route/worktype/workType.component.ts",
            "line": 27,
            "description": "workTypeform add/edit form",
            "itemtype": "property",
            "name": "workTypeform",
            "class": "WorkTypeComponent"
        },
        {
            "file": "src/app/route/worktype/workType.component.ts",
            "line": 80,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "WorkTypeComponent"
        },
        {
            "file": "src/app/route/worktype/workType.component.ts",
            "line": 192,
            "description": "This method is used to reload datatable",
            "itemtype": "method",
            "name": "reload",
            "class": "WorkTypeComponent"
        },
        {
            "file": "src/app/route/worktype/workType.component.ts",
            "line": 201,
            "description": "This method is used to open modal popup for openModalForm",
            "itemtype": "method",
            "name": "openModalForm",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                },
                {
                    "name": "isNew",
                    "description": "it is optional which contains true if it is new record and false when it is old record",
                    "type": "Boolean"
                }
            ],
            "class": "WorkTypeComponent"
        },
        {
            "file": "src/app/route/worktype/workType.component.ts",
            "line": 217,
            "description": "This method is used to delete record",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "type which contains id to delete record",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "type which contains entire selected row",
                    "type": "Any"
                }
            ],
            "class": "WorkTypeComponent"
        },
        {
            "file": "src/app/route/worktype/workType.component.ts",
            "line": 235,
            "description": "This method is used for filter/search records from datatable",
            "itemtype": "method",
            "name": "searchWorkType",
            "params": [
                {
                    "name": "srch",
                    "description": "type any which contains string that can be filtered from datatable",
                    "type": "String"
                }
            ],
            "class": "WorkTypeComponent"
        },
        {
            "file": "src/app/route/worktype/workType.services.ts",
            "line": 22,
            "description": "Get all records from database in datatable format",
            "itemtype": "method",
            "name": "getAllWorkTypes",
            "params": [
                {
                    "name": "cfg",
                    "description": "it is a string type which is used for filter data from data table",
                    "type": "String"
                }
            ],
            "class": "WorkTypeServices"
        },
        {
            "file": "src/app/route/worktype/workType.services.ts",
            "line": 33,
            "description": "This method is used to create a new record in database",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                }
            ],
            "class": "WorkTypeServices"
        },
        {
            "file": "src/app/route/worktype/workType.services.ts",
            "line": 43,
            "description": "This method is used to update existing record in database",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "id of {{name}} for updating specific record",
                    "type": "Number"
                }
            ],
            "class": "WorkTypeServices"
        },
        {
            "file": "src/app/route/worktype/workType.services.ts",
            "line": 54,
            "description": "Get single record from database",
            "itemtype": "method",
            "name": "getById",
            "params": [
                {
                    "name": "id",
                    "description": "id of {{name}} for getting specific record",
                    "type": "Number"
                }
            ],
            "class": "WorkTypeServices"
        },
        {
            "file": "src/app/route/worktype/workType.services.ts",
            "line": 63,
            "description": "This method is used to delete records from database",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "of {{name}} to delete",
                    "type": "Number"
                }
            ],
            "class": "WorkTypeServices"
        },
        {
            "file": "src/app/route/worktypecategory/formWorkTypeCategory/formWorkTypeCategory.component.ts",
            "line": 49,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "FormWorkTypeCategory"
        },
        {
            "file": "src/app/route/worktypecategory/formWorkTypeCategory/formWorkTypeCategory.component.ts",
            "line": 76,
            "description": "This method is used to get job types",
            "itemtype": "method",
            "name": "getJobTypes",
            "class": "FormWorkTypeCategory"
        },
        {
            "file": "src/app/route/worktypecategory/formWorkTypeCategory/formWorkTypeCategory.component.ts",
            "line": 90,
            "description": "This method is used to get sub job type category",
            "itemtype": "method",
            "name": "getSubJobTypesCagetory",
            "params": [
                {
                    "name": "idJobType",
                    "description": "for get sub job type category",
                    "type": "Number"
                },
                {
                    "name": "isNew",
                    "description": "to check whether record is new or old",
                    "type": "Boolean"
                }
            ],
            "class": "FormWorkTypeCategory"
        },
        {
            "file": "src/app/route/worktypecategory/formWorkTypeCategory/formWorkTypeCategory.component.ts",
            "line": 125,
            "description": "This method is used to get sub job types from database",
            "itemtype": "method",
            "name": "getSubJobTypes",
            "params": [
                {
                    "name": "idRfpSubJobTypeCategory",
                    "description": "for get sub job",
                    "type": "Number"
                },
                {
                    "name": "isNew",
                    "description": "to check whether record is new or old",
                    "type": "Boolean"
                }
            ],
            "class": "FormWorkTypeCategory"
        },
        {
            "file": "src/app/route/worktypecategory/formWorkTypeCategory/formWorkTypeCategory.component.ts",
            "line": 149,
            "description": "This method is used to save record",
            "itemtype": "method",
            "name": "saveWorkTypeCategory",
            "class": "FormWorkTypeCategory"
        },
        {
            "file": "src/app/route/worktypecategory/worktypecategory.component.ts",
            "line": 75,
            "description": "This method will be called once only when module is call for first time",
            "itemtype": "method",
            "name": "ngOnInit",
            "class": "WorkTypeCategoryComponent"
        },
        {
            "file": "src/app/route/worktypecategory/worktypecategory.component.ts",
            "line": 152,
            "description": "This method is used to reload datatable",
            "itemtype": "method",
            "name": "reload",
            "class": "WorkTypeCategoryComponent"
        },
        {
            "file": "src/app/route/worktypecategory/worktypecategory.component.ts",
            "line": 162,
            "description": "This method is used to open modal popup for openModalForm",
            "itemtype": "method",
            "name": "openModalForm",
            "params": [
                {
                    "name": "template",
                    "description": "type which contains template of create/edit module",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "it is optional which contains id if record is in edit mode",
                    "type": "Number"
                },
                {
                    "name": "isNew",
                    "description": "it is optional which contains true if it is new record and false when it is old record",
                    "type": "Boolean"
                }
            ],
            "class": "WorkTypeCategoryComponent"
        },
        {
            "file": "src/app/route/worktypecategory/worktypecategory.component.ts",
            "line": 178,
            "description": "This method is used to delete record",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "type which contains id to delete record",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "type which contains entire selected row",
                    "type": "Any"
                }
            ],
            "class": "WorkTypeCategoryComponent"
        },
        {
            "file": "src/app/route/worktypecategory/worktypecategory.component.ts",
            "line": 196,
            "description": "This method is used for filter/search records from datatable",
            "itemtype": "method",
            "name": "searchWorkType",
            "params": [
                {
                    "name": "srch",
                    "description": "type any which contains string that can be filtered from datatable",
                    "type": "String"
                }
            ],
            "class": "WorkTypeCategoryComponent"
        },
        {
            "file": "src/app/route/worktypecategory/worktypecategory.services.ts",
            "line": 21,
            "description": "Get all records from database in datatable format",
            "itemtype": "method",
            "name": "getAllSubJobTypes",
            "params": [
                {
                    "name": "cfg",
                    "description": "it is a string type which is used for filter data from data table",
                    "type": "String"
                }
            ],
            "class": "WorkTypeCategoryServices"
        },
        {
            "file": "src/app/route/worktypecategory/worktypecategory.services.ts",
            "line": 43,
            "description": "Get single record from database",
            "itemtype": "method",
            "name": "getById",
            "params": [
                {
                    "name": "id",
                    "description": "id of {{name}} for getting specific record",
                    "type": "Number"
                }
            ],
            "class": "WorkTypeCategoryServices"
        },
        {
            "file": "src/app/route/worktypecategory/worktypecategory.services.ts",
            "line": 52,
            "description": "This method is used to delete records from database",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "of {{name}} to delete",
                    "type": "Number"
                }
            ],
            "class": "WorkTypeCategoryServices"
        },
        {
            "file": "src/app/route/worktypecategory/worktypecategory.services.ts",
            "line": 61,
            "description": "Get all dropdown data from Sub Job Type",
            "itemtype": "method",
            "name": "getDropDown",
            "class": "WorkTypeCategoryServices"
        },
        {
            "file": "src/app/services/ConstClassification.services.ts",
            "line": 19,
            "description": "Get all records from database",
            "itemtype": "method",
            "name": "get",
            "class": "ConstClasificationsServices"
        },
        {
            "file": "src/app/services/ConstClassification.services.ts",
            "line": 27,
            "description": "Get all dropdown data",
            "itemtype": "method",
            "name": "getDropdownData",
            "class": "ConstClasificationsServices"
        },
        {
            "file": "src/app/services/JobApplicationService.services.ts",
            "line": 40,
            "description": "add/edit new Application for specific job\nisNew : true if application is new else it is edit",
            "class": "PrimaryStructuralSystemsServices"
        },
        {
            "file": "src/app/services/JobApplicationService.services.ts",
            "line": 61,
            "description": "PERMIT API",
            "params": [
                {
                    "name": "search",
                    "description": ""
                }
            ],
            "class": "PrimaryStructuralSystemsServices"
        },
        {
            "file": "src/app/services/PrimaryStructuralSystems.services.ts",
            "line": 19,
            "description": "Get all records from database",
            "itemtype": "method",
            "name": "get",
            "class": "PrimaryStructuralSystemsServices"
        },
        {
            "file": "src/app/services/PrimaryStructuralSystems.services.ts",
            "line": 27,
            "description": "This is used to get primary structural system in drop down records",
            "itemtype": "method",
            "name": "getDropdown",
            "class": "PrimaryStructuralSystemsServices"
        },
        {
            "file": "src/app/services/addressType.services.ts",
            "line": 19,
            "description": "Get all records from database",
            "itemtype": "method",
            "name": "get",
            "class": "AddressTypeServices"
        },
        {
            "file": "src/app/services/addressType.services.ts",
            "line": 27,
            "description": "Get all dropdown data for address type",
            "itemtype": "method",
            "name": "getDropdownData",
            "class": "AddressTypeServices"
        },
        {
            "file": "src/app/services/borough.services.ts",
            "line": 19,
            "description": "Get all records from database",
            "itemtype": "method",
            "name": "get",
            "class": "BoroughServices"
        },
        {
            "file": "src/app/services/borough.services.ts",
            "line": 27,
            "description": "Get all dropdown data for borough",
            "itemtype": "method",
            "name": "getDropdownData",
            "class": "BoroughServices"
        },
        {
            "file": "src/app/services/city.services.ts",
            "line": 19,
            "description": "Get all records from database",
            "itemtype": "method",
            "name": "get",
            "class": "CityServices"
        },
        {
            "file": "src/app/services/contactLicenseType.services.ts",
            "line": 19,
            "description": "Get all records from database",
            "itemtype": "method",
            "name": "get",
            "class": "ConstClasificationsServices"
        },
        {
            "file": "src/app/services/contactLicenseType.services.ts",
            "line": 27,
            "description": "Get all dropdown data",
            "itemtype": "method",
            "name": "getDropdownData",
            "class": "ConstClasificationsServices"
        },
        {
            "file": "src/app/services/contactTitle.services.ts",
            "line": 20,
            "description": "Get all records from database",
            "itemtype": "method",
            "name": "get",
            "class": "ContactTitleServices"
        },
        {
            "file": "src/app/services/contactTitle.services.ts",
            "line": 28,
            "description": "Get all dropdown data from ContactTitle",
            "itemtype": "method",
            "name": "getContactTitleDD",
            "class": "ContactTitleServices"
        },
        {
            "file": "src/app/services/contactTitle.services.ts",
            "line": 36,
            "description": "Get all records from database in datatable format",
            "itemtype": "method",
            "name": "getRecords",
            "class": "ContactTitleServices"
        },
        {
            "file": "src/app/services/contactTitle.services.ts",
            "line": 46,
            "description": "This method is used to create a new record in database",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                }
            ],
            "class": "ContactTitleServices"
        },
        {
            "file": "src/app/services/contactTitle.services.ts",
            "line": 56,
            "description": "This method is used to update existing record in database",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "id of Contact Title for updating specific record",
                    "type": "Number"
                }
            ],
            "class": "ContactTitleServices"
        },
        {
            "file": "src/app/services/contactTitle.services.ts",
            "line": 66,
            "description": "Get single record from database",
            "itemtype": "method",
            "name": "getById",
            "params": [
                {
                    "name": "id",
                    "description": "id of Contact Title for getting specific record",
                    "type": "Number"
                }
            ],
            "class": "ContactTitleServices"
        },
        {
            "file": "src/app/services/contactTitle.services.ts",
            "line": 75,
            "description": "This method is used to delete records from database",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "of Contact Title to delete",
                    "type": "Number"
                }
            ],
            "class": "ContactTitleServices"
        },
        {
            "file": "src/app/services/contactType.services.ts",
            "line": 18,
            "description": "Get all dropdown data",
            "itemtype": "method",
            "name": "getDropdownData",
            "class": "ContactTypeServices"
        },
        {
            "file": "src/app/services/contactType.services.ts",
            "line": 26,
            "description": "Get all dropdown data",
            "itemtype": "method",
            "name": "getDropdownData",
            "class": "ContactTypeServices"
        },
        {
            "file": "src/app/services/documentType.Services.ts",
            "line": 19,
            "description": "Get all dropdown data",
            "itemtype": "method",
            "name": "getDropdownData",
            "class": "DocumentTypeServices"
        },
        {
            "file": "src/app/services/globalSearch.services.ts",
            "line": 20,
            "description": "This method search in module as per criteria",
            "itemtype": "method",
            "name": "search",
            "params": [
                {
                    "name": "type",
                    "description": "Global search type",
                    "type": "Number"
                },
                {
                    "name": "searchText",
                    "description": "Global Search Text",
                    "type": "String"
                }
            ],
            "class": "GlobalSearchServices"
        },
        {
            "file": "src/app/services/group.services.ts",
            "line": 19,
            "description": "This method give list of groups",
            "itemtype": "method",
            "name": "list",
            "class": "GroupServices"
        },
        {
            "file": "src/app/services/prefix.services.ts",
            "line": 21,
            "description": "This method is used to get all records of prefix from database",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "\"no",
                    "description": "parameters required\""
                }
            ],
            "class": "PrefixServices"
        },
        {
            "file": "src/app/services/prefix.services.ts",
            "line": 30,
            "description": "This method is used to get all records of prefix from database",
            "itemtype": "method",
            "name": "getAllPrefix",
            "params": [
                {
                    "name": "\"no",
                    "description": "parameters required\""
                }
            ],
            "class": "PrefixServices"
        },
        {
            "file": "src/app/services/prefix.services.ts",
            "line": 41,
            "description": "This method is used to get all records of prefix from database for dropdown it will contains\nonly 2 items in response",
            "itemtype": "method",
            "name": "getPrefixDropdown",
            "params": [
                {
                    "name": "\"no",
                    "description": "parameters required\""
                }
            ],
            "class": "PrefixServices"
        },
        {
            "file": "src/app/services/prefix.services.ts",
            "line": 51,
            "description": "This method is used to create a new prefix in database",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "data",
                    "description": "request Object of prefix",
                    "type": "Data"
                }
            ],
            "class": "PrefixServices"
        },
        {
            "file": "src/app/services/prefix.services.ts",
            "line": 61,
            "description": "This method is used to update existing prefix in database",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "data",
                    "description": "request Object of prefix",
                    "type": "Data"
                },
                {
                    "name": "id",
                    "description": "as integer prefix id",
                    "type": "Number"
                }
            ],
            "class": "PrefixServices"
        },
        {
            "file": "src/app/services/prefix.services.ts",
            "line": 72,
            "description": "This method is used to get specific prefix record from database",
            "itemtype": "method",
            "name": "getById",
            "params": [
                {
                    "name": "data",
                    "description": "request Object of prefix",
                    "type": "Data"
                },
                {
                    "name": "id",
                    "description": "as integer prefix id",
                    "type": "Number"
                }
            ],
            "class": "PrefixServices"
        },
        {
            "file": "src/app/services/prefix.services.ts",
            "line": 82,
            "description": "This method is used to delete prefix record from database",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "as integer prefix id",
                    "type": "Number"
                }
            ],
            "class": "PrefixServices"
        },
        {
            "file": "src/app/services/state.services.ts",
            "line": 19,
            "description": "This method is used to get all states",
            "itemtype": "method",
            "name": "get",
            "class": "StateServices"
        },
        {
            "file": "src/app/services/state.services.ts",
            "line": 27,
            "description": "This is used to get all records of state in dropdown format",
            "itemtype": "method",
            "name": "getDropdown",
            "class": "StateServices"
        },
        {
            "file": "src/app/services/suffix.services.ts",
            "line": 23,
            "description": "Get all records from database",
            "itemtype": "method",
            "name": "get",
            "class": "SuffixServices"
        },
        {
            "file": "src/app/services/suffix.services.ts",
            "line": 31,
            "description": "Get all dropdown data from suffix",
            "itemtype": "method",
            "name": "getAllSuffix",
            "class": "SuffixServices"
        },
        {
            "file": "src/app/services/suffix.services.ts",
            "line": 41,
            "description": "Get all dropdown data from suffix",
            "itemtype": "method",
            "name": "getSuffixDropdown",
            "class": "SuffixServices"
        },
        {
            "file": "src/app/services/suffix.services.ts",
            "line": 49,
            "description": "This method is used to create a new record in database",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                }
            ],
            "class": "SuffixServices"
        },
        {
            "file": "src/app/services/suffix.services.ts",
            "line": 59,
            "description": "This method is used to update existing record in database",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "data",
                    "description": "type request Object",
                    "type": "Any"
                },
                {
                    "name": "id",
                    "description": "id of sufffix for updating specific record",
                    "type": "Number"
                }
            ],
            "class": "SuffixServices"
        },
        {
            "file": "src/app/services/suffix.services.ts",
            "line": 70,
            "description": "Get single record from database",
            "itemtype": "method",
            "name": "getById",
            "params": [
                {
                    "name": "id",
                    "description": "id of sufffix for getting specific record",
                    "type": "Number"
                }
            ],
            "class": "SuffixServices"
        },
        {
            "file": "src/app/services/suffix.services.ts",
            "line": 79,
            "description": "This method is used to delete records from database",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "id",
                    "description": "of sufffix to delete",
                    "type": "Number"
                }
            ],
            "class": "SuffixServices"
        },
        {
            "file": "src/app/services/user.services.ts",
            "line": 19,
            "description": "This method is used to get user details",
            "itemtype": "method",
            "name": "userinfo",
            "class": "UserServices"
        },
        {
            "file": "src/app/services/userRight.services.ts",
            "line": 22,
            "description": "This method is used to check whether user has rights of given module or not",
            "itemtype": "method",
            "name": "checkUserRights",
            "params": [
                {
                    "name": "moduleName",
                    "description": "moduleName is the name of the module like employee,company,contact etc.",
                    "type": "Any"
                }
            ],
            "class": "UserRightServices"
        },
        {
            "file": "src/app/services/userRight.services.ts",
            "line": 31,
            "description": "This method is used to check whether user has right of specific action based on that action will be shown\naction like add/edit/view/delete/export",
            "itemtype": "method",
            "name": "checkAllowButton",
            "params": [
                {
                    "name": "permissionId",
                    "description": "permissionId is the id for which the permission is to be checked",
                    "type": "Any"
                }
            ],
            "class": "UserRightServices"
        },
        {
            "file": "src/app/app.component.ts",
            "line": 427,
            "description": "get all notification of logged in user",
            "class": ""
        },
        {
            "file": "src/app/app.component.ts",
            "line": 435,
            "description": "redirect to specific module from notification",
            "class": ""
        },
        {
            "file": "src/app/app.module.ts",
            "line": 223,
            "description": "start of rfp master",
            "class": ""
        },
        {
            "file": "src/app/app.module.ts",
            "line": 254,
            "description": "end of rfp master",
            "class": ""
        },
        {
            "file": "src/app/app.routing.ts",
            "line": 204,
            "description": "Rfp masters",
            "class": ""
        },
        {
            "file": "src/app/app.routing.ts",
            "line": 212,
            "description": "notification",
            "class": ""
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: classname",
            "line": " src/app/route/addresstype/addresstype.services.ts:9"
        },
        {
            "message": "unknown tag: jobviolationservices",
            "line": " src/app/route/job/jobDetail/jobViolation/jobViolation.service.ts:12"
        },
        {
            "message": "Missing item type\nThis method is used for getting params from header",
            "line": " src/app/route/addRfp/projectDetails/projectDetails.services.ts:21"
        },
        {
            "message": "Missing item type",
            "line": " src/app/route/addRfp/proposalReview/proposalReview.component.ts:662"
        },
        {
            "message": "Missing item type\nget all comapny list",
            "line": " src/app/route/addressmaster/masterform/masterform.component.ts:96"
        },
        {
            "message": "Missing item type\nget all contacts list",
            "line": " src/app/route/addressmaster/masterform/masterform.component.ts:108"
        },
        {
            "message": "Missing item type\nget all borough list",
            "line": " src/app/route/addressmaster/masterform/masterform.component.ts:130"
        },
        {
            "message": "Missing item type\nClass contains all services related to AddresstypeServices",
            "line": " src/app/route/addresstype/addresstype.services.ts:9"
        },
        {
            "message": "Missing item type\nThis method will format phone number",
            "line": " src/app/route/company/formCompany/formCompany.component.ts:636"
        },
        {
            "message": "Missing item type",
            "line": " src/app/route/company/company.component.ts:239"
        },
        {
            "message": "Missing item type",
            "line": " src/app/route/contact/contact.component.ts:177"
        },
        {
            "message": "Missing item type\nget all job contact Type - selectContact",
            "line": " src/app/route/job/jobDetail/jobContact/editJobContact/editJobContact.component.ts:268"
        },
        {
            "message": "Missing item type\nget all company list - selectCompany",
            "line": " src/app/route/job/jobDetail/jobContact/editJobContact/editJobContact.component.ts:279"
        },
        {
            "message": "Missing item type\nget all contact list - selectContact",
            "line": " src/app/route/job/jobDetail/jobContact/editJobContact/editJobContact.component.ts:293"
        },
        {
            "message": "Missing item type\nget all address list of contact",
            "line": " src/app/route/job/jobDetail/jobContact/editJobContact/editJobContact.component.ts:306"
        },
        {
            "message": "Missing item type\nThis method will delete job contact",
            "line": " src/app/route/job/jobDetail/jobContact/jobContact.component.ts:356"
        },
        {
            "message": "Missing item type\nget all Employee",
            "line": " src/app/route/job/jobDetail/jobHistory/filterhistory/filterhistory.component.ts:77"
        },
        {
            "message": "Missing item type\nget all Types",
            "line": " src/app/route/job/jobDetail/jobHistory/filterhistory/filterhistory.component.ts:89"
        },
        {
            "message": "Missing item type\nJobViolationServices contains all services related to Job Violation",
            "line": " src/app/route/job/jobDetail/jobViolation/jobViolation.service.ts:12"
        },
        {
            "message": "Missing item type\nget all job list",
            "line": " src/app/route/job/jobDetail/relatedJob/addRelatedJob/addRelatedJob.component.ts:85"
        },
        {
            "message": "Missing item type\nSet Job details as per selection",
            "line": " src/app/route/job/jobDetail/relatedJob/addRelatedJob/addRelatedJob.component.ts:133"
        },
        {
            "message": "Missing item type\nwhen move from dot to dob or vica versa set application to null",
            "line": " src/app/route/job/jobDetail/jobDetail.component.ts:227"
        },
        {
            "message": "Missing item type\nit also search for address",
            "line": " src/app/route/job/job.component.ts:138"
        },
        {
            "message": "Missing item type\nfor searching address \ncode starts for searching of jobs from address module",
            "line": " src/app/route/job/job.component.ts:142"
        },
        {
            "message": "Missing item type\ncode ends for searching of jobs from address module",
            "line": " src/app/route/job/job.component.ts:156"
        },
        {
            "message": "Missing item type\nThis method is reload datatable after save record",
            "line": " src/app/route/job/job.component.ts:501"
        },
        {
            "message": "Missing item type\n1 = inprogress status\n2 = on hold status\n3 = completed status",
            "line": " src/app/route/job/job.services.ts:129"
        },
        {
            "message": "Missing item type",
            "line": " src/app/route/rfp/rfp.component.ts:102"
        },
        {
            "message": "Missing item type\nadd/edit new Application for specific job\nisNew : true if application is new else it is edit",
            "line": " src/app/services/JobApplicationService.services.ts:40"
        },
        {
            "message": "Missing item type\nPERMIT API",
            "line": " src/app/services/JobApplicationService.services.ts:61"
        },
        {
            "message": "Missing item type\nget all notification of logged in user",
            "line": " src/app/app.component.ts:427"
        },
        {
            "message": "Missing item type\nredirect to specific module from notification",
            "line": " src/app/app.component.ts:435"
        },
        {
            "message": "Missing item type\nstart of rfp master",
            "line": " src/app/app.module.ts:223"
        },
        {
            "message": "Missing item type\nend of rfp master",
            "line": " src/app/app.module.ts:254"
        },
        {
            "message": "Missing item type\nRfp masters",
            "line": " src/app/app.routing.ts:204"
        },
        {
            "message": "Missing item type\nnotification",
            "line": " src/app/app.routing.ts:212"
        }
    ]
}